import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest9 {

    public static boolean debug = false;

    @Test
    public void test04501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04501");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = strComparableSchema3.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema3.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test04502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04502");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str17 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableSchema18.getEnum();
        strComparableSchema10.setEnum(strComparableList22);
        schema9.setEnum(strComparableList22);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema9.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setName("hi!");
        strComparableSchema27.setNot((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema27.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.minProperties((java.lang.Integer) 100);
        java.lang.Object obj38 = schema37.getExample();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema37.minimum(bigDecimal39);
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema40.setRequired((java.util.List<java.lang.String>) strList46);
        boolean boolean49 = schema9.equals((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema51 = schema9.uniqueItems((java.lang.Boolean) true);
        java.lang.String str52 = schema51.getName();
        schema51.setTitle("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test04503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04503");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema54.setName("hi!");
        strComparableSchema54.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray60 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional62 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional64 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components63);
        strComparableSchema54.setDefault((java.lang.Object) components63);
        java.lang.Boolean boolean66 = strComparableSchema54.getWriteOnly();
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema3.minItems((java.lang.Integer) 0);
        java.lang.String str70 = strComparableSchema3.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(parameterArray60);
        org.junit.Assert.assertNotNull(parameterListOptional62);
        org.junit.Assert.assertNotNull(parameterListOptional64);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test04504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04504");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal6 = null;
        schema5.setMinimum(bigDecimal6);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
    }

    @Test
    public void test04505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04505");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema21 = schema15.not(schema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema21.getProperties();
        java.math.BigDecimal bigDecimal23 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema27 = schema21.readOnly((java.lang.Boolean) false);
        boolean boolean28 = tagSetOptional8.equals((java.lang.Object) false);
        boolean boolean29 = tagSetOptional8.isPresent();
        boolean boolean30 = tagSetOptional8.isPresent();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test04506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04506");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        schema17.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        strComparableSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList31 = strComparableSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema17.example((java.lang.Object) schema33);
        schema33.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema33.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema38.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strComparableList39);
    }

    @Test
    public void test04507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04507");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema14.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        schema25.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = schema25.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test04508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04508");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.Boolean boolean14 = schema8.getDeprecated();
        java.lang.Boolean boolean15 = schema8.getWriteOnly();
        java.lang.Boolean boolean16 = schema8.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test04509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04509");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04510");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMaximum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxItems((java.lang.Integer) 10);
        schema19.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04511");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        schema55.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema22.setNot(schema55);
        io.swagger.oas.models.media.Schema schema60 = schema55.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal61 = null;
        schema60.setMaximum(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.pattern("");
        java.lang.String str68 = strComparableSchema63.getFormat();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema63.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray71 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional72 = io.swagger.jaxrs2.OperationParser.getTags(strArray71);
        io.swagger.oas.models.tags.Tag[] tagArray73 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet74 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet74, tagArray73);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet76 = tagSetOptional72.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet74);
        java.lang.String str77 = tagSetOptional72.toString();
        boolean boolean79 = tagSetOptional72.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema63.example((java.lang.Object) boolean79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = strComparableSchema63.getExternalDocs();
        java.math.BigDecimal bigDecimal82 = strComparableSchema63.getMultipleOf();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema63.deprecated((java.lang.Boolean) false);
        schema60.setDefault((java.lang.Object) strComparableSchema63);
        java.math.BigDecimal bigDecimal86 = null;
        schema60.setMaximum(bigDecimal86);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(tagSetOptional72);
        org.junit.Assert.assertNotNull(tagArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(tagSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Optional.empty" + "'", str77, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(externalDocumentation81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test04512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04512");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema31.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int37 = strComparableSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema43 = schema41.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("default");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        java.lang.String str54 = strComparableSchema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema58.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML61 = schema58.getXml();
        schema58.setNullable((java.lang.Boolean) true);
        schema43.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) true);
        java.lang.Boolean boolean65 = schema43.getExclusiveMinimum();
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML61);
        org.junit.Assert.assertNull(boolean65);
    }

    @Test
    public void test04513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04513");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = strComparableSchema13.getMaxProperties();
        java.lang.Comparable<java.lang.String> strComparable22 = strComparableSchema13.getDefault();
        java.math.BigDecimal bigDecimal23 = strComparableSchema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema13.setMinItems((java.lang.Integer) 10);
        strComparableSchema13.setType("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema31.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema31.format("");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        schema47.setProperties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = schema47.type("");
        schema47.set$ref("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema57 = schema47.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        strComparableSchema58.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema58.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = null;
        strComparableSchema65.setExtensions(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema65.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema68.setMinLength((java.lang.Integer) 0);
        strComparableSchema58.setExample((java.lang.Object) strComparableSchema68);
        strComparableSchema58.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema58.uniqueItems((java.lang.Boolean) false);
        schema47.setNot(schema76);
        java.lang.Integer int78 = schema76.getMaxProperties();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema76);
        java.math.BigDecimal bigDecimal80 = schema79.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(strComparable22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(bigDecimal80);
    }

    @Test
    public void test04514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04514");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.String str29 = schema6.getTitle();
        schema6.setMaxLength((java.lang.Integer) 100);
        schema6.setMaxLength((java.lang.Integer) 10);
        schema6.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04515");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.Integer int13 = schema12.getMaxItems();
        java.lang.String str14 = schema12.getType();
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.String str17 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04516");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.multipleOf(bigDecimal17);
        java.lang.String str19 = schema14.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test04517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04517");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        java.lang.Boolean boolean25 = schema19.getNullable();
        schema19.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema29 = schema19.exclusiveMinimum((java.lang.Boolean) true);
        schema19.setPattern("hi!");
        java.lang.Object obj32 = schema19.getExample();
        java.lang.String str33 = schema19.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04518");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test04519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04519");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema25.getDiscriminator();
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray32 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap33 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray32);
        java.util.Optional<io.swagger.oas.annotations.links.LinkParameter[]> linkParameterArrayOptional34 = java.util.Optional.of(linkParameterArray32);
        java.util.Optional<io.swagger.oas.annotations.links.LinkParameter[]> linkParameterArrayOptional35 = java.util.Optional.ofNullable(linkParameterArray32);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray32);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray32);
        boolean boolean38 = schema25.equals((java.lang.Object) linkParameterArray32);
        java.lang.Integer int39 = schema25.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(linkParameterArray32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(linkParameterArrayOptional34);
        org.junit.Assert.assertNotNull(linkParameterArrayOptional35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test04520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04520");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        schema6.setExtensions(strMap18);
        schema6.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.format("Optional.empty");
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        java.lang.String str34 = schema32.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str48 = schema47.getType();
        io.swagger.oas.models.media.Schema schema49 = schema32.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = schema59.maxLength((java.lang.Integer) 100);
        schema61.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema32.addProperties("", schema61);
        schema61.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema61.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema6.not(schema68);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test04521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04521");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Integer int13 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test04522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04522");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.minimum(bigDecimal21);
        boolean boolean23 = schema15.equals((java.lang.Object) bigDecimal21);
        io.swagger.oas.models.media.Schema schema25 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema26 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema15.setExample((java.lang.Object) tagSetOptionalSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema37 = schema15.not(schema36);
        io.swagger.oas.models.media.Schema schema38 = schema8.not(schema37);
        schema8.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.lang.String str49 = strComparableSchema42.getTitle();
        java.lang.Boolean boolean50 = strComparableSchema42.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema42.title("Optional[[]]");
        schema8.setExample((java.lang.Object) schema52);
        java.util.List<java.lang.String> strList54 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema52.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(schema55);
    }

    @Test
    public void test04523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04523");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema38 = schema4.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema41 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema4.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema4.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean48 = schema4.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test04524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04524");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean40 = schema39.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
    }

    @Test
    public void test04525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04525");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.math.BigDecimal bigDecimal49 = schema47.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema47.xml(xML54);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04526");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = strComparableSchema10.getMaximum();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema10.getDefault();
        java.lang.String str17 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        strComparableSchema21.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean29 = strComparableSchema21.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.$ref("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema21.example((java.lang.Object) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setMaxItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList41 = strComparableSchema21.getRequired();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema43.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        schema43.setExternalDocs(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparable16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test04527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04527");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        io.swagger.oas.models.media.Schema schema21 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema14.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema22.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema22.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04528");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema11.setXml(xML13);
        io.swagger.oas.models.media.Schema schema15 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema17 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.minimum(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04529");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        schema20.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04530");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema22 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj23 = schema12.getExample();
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema12.xml(xML24);
        schema25.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04531");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        schema9.setType("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int15 = strComparableSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.type("hi!");
        schema17.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int20 = schema17.getMaxProperties();
        schema17.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.discriminator(discriminator23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        java.lang.String str26 = schema24.getFormat();
        schema9.setExample((java.lang.Object) schema24);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04532");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        java.util.Optional<java.lang.Object> objOptional19 = java.util.Optional.ofNullable((java.lang.Object) schema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema22 = schema18.description("");
        schema22.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator25 = schema22.getDiscriminator();
        java.lang.Boolean boolean26 = schema22.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal27 = null;
        schema22.setMultipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema29.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema39.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema41.setMaxLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList48 = strComparableSchema41.getRequired();
        strComparableSchema41.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema41.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema52.minItems((java.lang.Integer) (-1));
        schema22.setNot(schema56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(objOptional19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test04533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04533");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional7.orElse(tagSet29);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema32.getAdditionalProperties();
        strComparableSchema32.setDeprecated((java.lang.Boolean) false);
        strComparableSchema32.setReadOnly((java.lang.Boolean) true);
        boolean boolean40 = tagSetOptional7.equals((java.lang.Object) strComparableSchema32);
        java.lang.String str41 = strComparableSchema32.getDescription();
        java.lang.String str42 = strComparableSchema32.getDescription();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.getAdditionalProperties();
        strComparableSchema46.setDeprecated((java.lang.Boolean) false);
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema46.addRequiredItem("");
        java.lang.String str56 = strComparableSchema46.toString();
        java.lang.String str57 = strComparableSchema46.get$ref();
        strComparableSchema32.addExtension("#/components/schemas/hi!", (java.lang.Object) strComparableSchema46);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str56, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test04534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04534");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema4.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML22 = schema21.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(xML22);
    }

    @Test
    public void test04535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04535");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.maxItems((java.lang.Integer) 0);
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = java.util.Optional.empty();
        strComparableSchema31.setDefault((java.lang.Object) tagSetOptional37);
        java.util.Optional<java.lang.Object> objOptional39 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema31);
        schema25.setExample((java.lang.Object) objOptional39);
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema25.getUniqueItems();
        schema25.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNotNull(objOptional39);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
    }

    @Test
    public void test04536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04536");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = null;
        strComparableSchema0.setMinimum(bigDecimal5);
    }

    @Test
    public void test04537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04537");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        schema16.setReadOnly((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema23.setFormat("hi!");
        schema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.Boolean boolean33 = strComparableSchema23.getReadOnly();
        java.lang.Boolean boolean34 = strComparableSchema23.getNullable();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema23.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = schema36.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(xML37);
    }

    @Test
    public void test04538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04538");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = strComparableSchema3.getXml();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        strComparableSchema3.setDiscriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.description("Optional.empty");
        strComparableSchema3.setName("#/components/schemas/hi!");
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema3.xml(xML20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = strComparableSchema3.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test04539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04539");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema48.format("");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.multipleOf(bigDecimal63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        schema62.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.additionalProperties(schema67);
        java.math.BigDecimal bigDecimal69 = null;
        schema68.setMinimum(bigDecimal69);
        schema47.setAdditionalProperties(schema68);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema47.xml(xML72);
        io.swagger.oas.models.media.Schema schema75 = schema47.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema75.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test04540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04540");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setMinLength((java.lang.Integer) 0);
        strComparableSchema39.setExample((java.lang.Object) strComparableSchema49);
        java.lang.String str54 = strComparableSchema49.getTitle();
        schema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        strComparableSchema49.setDiscriminator(discriminator56);
        java.util.Optional<java.lang.Object> objOptional58 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema49);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(objOptional58);
    }

    @Test
    public void test04541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04541");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj18 = schema17.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema17.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema28 = schema17.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        schema28.setPattern("default");
        java.lang.Object obj31 = schema28.getExample();
        boolean boolean32 = schema10.equals((java.lang.Object) schema28);
        java.lang.String str33 = schema28.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        java.lang.String str39 = strComparableSchema34.getFormat();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray42 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional43 = io.swagger.jaxrs2.OperationParser.getTags(strArray42);
        io.swagger.oas.models.tags.Tag[] tagArray44 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet45 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet45, tagArray44);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet47 = tagSetOptional43.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet45);
        java.lang.String str48 = tagSetOptional43.toString();
        boolean boolean50 = tagSetOptional43.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema34.example((java.lang.Object) boolean50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema34.name("");
        io.swagger.oas.models.media.Schema schema54 = schema28.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema58.minimum(bigDecimal60);
        schema61.setTitle("Optional.empty");
        schema61.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal66 = null;
        schema61.setMaximum(bigDecimal66);
        schema54.setNot(schema61);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(tagSetOptional43);
        org.junit.Assert.assertNotNull(tagArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(tagSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Optional.empty" + "'", str48, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test04542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04542");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        schema10.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML14 = schema10.getXml();
        io.swagger.oas.models.media.Schema schema16 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04543");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.name("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("");
        schema23.setMinLength((java.lang.Integer) 10);
        boolean boolean26 = schema9.equals((java.lang.Object) schema23);
        schema9.setPattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema37.minimum(bigDecimal39);
        boolean boolean41 = schema33.equals((java.lang.Object) bigDecimal39);
        io.swagger.oas.models.media.Schema schema43 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setFormat("Optional.empty");
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema33.xml(xML46);
        schema47.setMaxLength((java.lang.Integer) 0);
        schema9.setNot(schema47);
        io.swagger.oas.models.media.Schema schema52 = schema9.pattern("");
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
    }

    @Test
    public void test04544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04544");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet24 = tagSetOptional7.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setName("hi!");
        strComparableSchema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema25.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema25.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema25.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema37.type("default");
        io.swagger.oas.models.media.Schema schema40 = schema37.getAdditionalProperties();
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema43.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema37.example((java.lang.Object) strComparableSchema43);
        strComparableSchema43.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int55 = strComparableSchema43.getMaxLength();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema43.maximum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema57.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.xml(xML60);
        boolean boolean62 = tagSetOptional7.equals((java.lang.Object) schema61);
        java.lang.Integer int63 = schema61.getMaxProperties();
        java.lang.Integer int64 = schema61.getMaxProperties();
        java.util.List<java.lang.String> strList65 = schema61.getRequired();
        java.lang.Boolean boolean66 = schema61.getUniqueItems();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSet24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
    }

    @Test
    public void test04545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04545");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.uniqueItems((java.lang.Boolean) true);
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        schema33.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04546");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.lang.Boolean boolean14 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.not(schema15);
        io.swagger.oas.models.media.Schema schema18 = schema16.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test04547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04547");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.Integer int29 = schema28.getMaxLength();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        java.lang.String str31 = schema28.getType();
        java.lang.Integer int32 = schema28.getMinProperties();
        java.lang.String str33 = schema28.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04548");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray22 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        io.swagger.oas.models.tags.Tag[] tagArray24 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet25 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet25, tagArray24);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet27 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet25);
        java.lang.String str28 = tagSetOptional23.toString();
        boolean boolean30 = tagSetOptional23.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema14.example((java.lang.Object) boolean30);
        strComparableSchema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema3.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema34.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(tagSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04549");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        java.lang.Integer int13 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        boolean boolean28 = schema20.equals((java.lang.Object) bigDecimal26);
        java.lang.Boolean boolean29 = schema20.getNullable();
        schema20.setType("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema20.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema33.description("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema38.$ref("hi!");
        io.swagger.oas.models.media.Schema schema46 = schema44.addRequiredItem("Optional.empty");
        schema44.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema44.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema44.$ref("#/components/schemas/");
        schema54.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setName("hi!");
        strComparableSchema57.setNot((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema60.name("hi!");
        java.lang.Integer int68 = schema67.getMaxLength();
        java.lang.Boolean boolean69 = schema67.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML70 = schema67.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.minimum(bigDecimal72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setName("hi!");
        strComparableSchema71.setNot((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema71.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema71.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema83.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema83.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema87 = schema81.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema89 = schema87.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = schema67.properties(strMap90);
        io.swagger.oas.models.media.Schema schema92 = schema54.properties(strMap90);
        schema35.setProperties(strMap90);
        schema35.setType("Optional[[]]");
        boolean boolean96 = strComparableSchema0.equals((java.lang.Object) "Optional[[]]");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList97 = strComparableSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(xML70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(strComparableList97);
    }

    @Test
    public void test04550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04550");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema13.setDiscriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.externalDocs(externalDocumentation23);
        schema24.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setName("hi!");
        strComparableSchema27.setNot((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema27.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema27.pattern("");
        io.swagger.oas.models.media.Schema schema41 = schema39.type("default");
        io.swagger.oas.models.media.Schema schema42 = schema39.getAdditionalProperties();
        schema39.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setName("hi!");
        strComparableSchema45.setNot((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema45.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema39.example((java.lang.Object) strComparableSchema45);
        strComparableSchema45.setUniqueItems((java.lang.Boolean) false);
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema59 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema24.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test04551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04551");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema40.setName("hi!");
        strComparableSchema40.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML46 = null;
        strComparableSchema40.setXml(xML46);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList53 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean56 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean57 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean58 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList53);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema40.maximum(bigDecimal60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.externalDocs(externalDocumentation62);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList64 = schema61.getEnum();
        schema12.setEnum(strComparableList64);
        java.lang.String str66 = schema12.getDescription();
        java.lang.String str67 = schema12.getFormat();
        java.lang.String str68 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strComparableList64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test04552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04552");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = schema9.name("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema13 = schema9.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean14 = schema9.getDeprecated();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema9.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04553");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str21 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema34.setName("hi!");
        strComparableSchema34.setName("Optional.empty");
        java.math.BigDecimal bigDecimal40 = null;
        strComparableSchema34.setMaximum(bigDecimal40);
        java.lang.String str42 = strComparableSchema34.getDescription();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.maximum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema22.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema22.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema48 = schema18.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema22.xml(xML49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.pattern("");
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema51.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = strComparableSchema51.getExternalDocs();
        strComparableSchema51.setDeprecated((java.lang.Boolean) true);
        strComparableSchema51.setMaxProperties((java.lang.Integer) 1);
        strComparableSchema51.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test04554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04554");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.minProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema12.getDescription();
        schema12.setType("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test04555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04555");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema38.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema38.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.format("");
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        io.swagger.oas.models.media.Schema schema55 = schema52.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj56 = null;
        boolean boolean57 = schema55.equals(obj56);
        java.lang.Integer int58 = schema55.getMinItems();
        io.swagger.oas.models.media.Schema schema60 = schema55.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema37.setAdditionalProperties(schema60);
        schema60.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test04556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04556");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema10.getNot();
        io.swagger.oas.models.media.Schema schema15 = schema13.title("Optional[[]]");
        io.swagger.oas.models.media.Schema schema17 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema13.minimum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04557");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.description("Optional.empty");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("default");
        java.math.BigDecimal bigDecimal27 = schema24.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema24.setExternalDocs(externalDocumentation28);
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema31 = schema24.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test04558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04558");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema9.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        schema9.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema9.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04559");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getName();
        io.swagger.oas.models.media.Schema schema23 = schema20.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.pattern("");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema24.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema24.example((java.lang.Object) 100);
        schema20.setExample((java.lang.Object) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minimum(bigDecimal56);
        boolean boolean58 = schema50.equals((java.lang.Object) bigDecimal56);
        java.lang.Boolean boolean59 = schema50.getNullable();
        schema50.setDescription("hi!");
        schema50.setMinLength((java.lang.Integer) 100);
        strComparableSchema24.addExtension("#/components/schemas/hi!", (java.lang.Object) 100);
        java.lang.Boolean boolean65 = strComparableSchema24.getUniqueItems();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(boolean65);
    }

    @Test
    public void test04560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04560");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema33.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMaximum(bigDecimal38);
        schema37.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04561");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        io.swagger.oas.annotations.media.Content[] contentArray37 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray37, produces40, produces41, components42);
        io.swagger.oas.models.media.Schema schema44 = schema15.example((java.lang.Object) components42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setName("hi!");
        strComparableSchema45.setNot((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema45.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema45.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema45.pattern("");
        io.swagger.oas.models.media.Schema schema59 = schema57.type("default");
        io.swagger.oas.models.media.Schema schema60 = schema57.getAdditionalProperties();
        schema57.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema73 = schema71.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList75 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        schema73.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        io.swagger.oas.models.media.Schema schema78 = schema57.additionalProperties(schema73);
        io.swagger.oas.models.media.XML xML79 = schema57.getXml();
        java.lang.String str80 = schema57.getDescription();
        io.swagger.oas.models.media.Schema schema81 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema83 = schema57.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema57.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = schema85.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema85.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema44.additionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema92 = schema44.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema92.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(contentArray37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test04562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04562");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Boolean boolean17 = strComparableSchema12.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.lang.Boolean boolean38 = strComparableSchema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema34.format("");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema34.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = schema42.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema42.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("default", schema45);
        schema45.set$ref("");
        strComparableSchema12.setAdditionalProperties(schema45);
        java.lang.String str50 = schema45.getName();
        schema45.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test04563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04563");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray21);
        java.lang.String str23 = tagSetOptional22.toString();
        java.lang.String[] strArray30 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional31 = io.swagger.jaxrs2.OperationParser.getTags(strArray30);
        java.lang.String[] strArray32 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        io.swagger.oas.models.tags.Tag[] tagArray34 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet35 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet35, tagArray34);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet37 = tagSetOptional33.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet35);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional31.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet35);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional22.orElse(tagSet38);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional7.orElse(tagSet38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setName("hi!");
        strComparableSchema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema41.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema41.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema57 = schema51.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema59 = schema51.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean60 = schema59.getNullable();
        boolean boolean61 = tagSetOptional7.equals((java.lang.Object) boolean60);
        boolean boolean62 = tagSetOptional7.isPresent();
        java.lang.String str63 = tagSetOptional7.toString();
        java.lang.String str64 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(tagSetOptional22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str23, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(tagSetOptional31);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(tagArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(tagSet37);
        org.junit.Assert.assertNotNull(tagSet38);
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str63, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str64, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04564");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema6.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema6.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str17 = schema16.getName();
        io.swagger.oas.models.media.Schema schema19 = schema16.type("");
        io.swagger.oas.models.media.Schema schema21 = schema16.maxProperties((java.lang.Integer) 100);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema16.multipleOf(bigDecimal24);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04565");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        java.lang.Integer int11 = schema8.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.pattern("");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj20 = schema19.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema19.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setName("hi!");
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema30 = schema19.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str31 = strComparableSchema26.getName();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        strComparableSchema26.setDiscriminator(discriminator34);
        java.lang.String str36 = strComparableSchema26.getTitle();
        strComparableSchema26.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str40 = schema8.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "default" + "'", str40, "default");
    }

    @Test
    public void test04566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04566");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces31, produces32, components33);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
    }

    @Test
    public void test04567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04567");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        schema10.setTitle("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test04568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04568");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema3.getTitle();
        strComparableSchema3.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        boolean boolean27 = schema19.equals((java.lang.Object) bigDecimal25);
        io.swagger.oas.models.media.Schema schema29 = schema19.type("Optional.empty");
        boolean boolean30 = schema14.equals((java.lang.Object) schema29);
        boolean boolean31 = strComparableSchema0.equals((java.lang.Object) schema29);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.discriminator(discriminator32);
        schema33.setFormat("Optional[[]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema37.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str44 = strComparableSchema37.getPattern();
        java.lang.String str45 = strComparableSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema37.pattern("default");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema37.minimum(bigDecimal48);
        java.lang.Integer int50 = strComparableSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema51 = schema33.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema37.name("Optional[[]]");
        java.math.BigDecimal bigDecimal54 = null;
        strComparableSchema37.setMaximum(bigDecimal54);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test04569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04569");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema10.setExternalDocs(externalDocumentation19);
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04570");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema12.$ref("hi!");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema3.example((java.lang.Object) strComparableSchema12);
        java.lang.Object obj20 = schema19.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test04571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04571");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.xml(xML11);
        java.lang.String str13 = strComparableSchema3.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.name("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.pattern("");
        java.lang.String[] strArray28 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        io.swagger.oas.models.media.Schema schema31 = schema26.required((java.util.List<java.lang.String>) strList29);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList29);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema3.maxLength((java.lang.Integer) (-1));
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04572");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema28 = schema22.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema22.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema41.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema43.setMaximum(bigDecimal48);
        java.util.List<java.lang.String> strList50 = strComparableSchema43.getRequired();
        java.math.BigDecimal bigDecimal51 = null;
        strComparableSchema43.setMaximum(bigDecimal51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema43.minimum(bigDecimal53);
        strComparableSchema43.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema43.uniqueItems((java.lang.Boolean) false);
        schema30.setExample((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test04573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04573");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("Optional.empty");
        schema19.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        schema9.setExample((java.lang.Object) schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMinimum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.multipleOf(bigDecimal29);
        java.lang.Boolean boolean31 = schema30.getExclusiveMaximum();
        schema30.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test04574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04574");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.required(strList17);
        java.math.BigDecimal bigDecimal19 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema21 = schema14.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04575");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinItems();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.minimum(bigDecimal29);
        java.lang.Integer int31 = schema27.getMaxItems();
        java.lang.String str32 = schema27.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04576");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.name("hi!");
        io.swagger.oas.models.media.Schema schema31 = schema29.pattern("");
        java.lang.String[] strArray33 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        io.swagger.oas.models.media.Schema schema36 = schema31.required((java.util.List<java.lang.String>) strList34);
        schema18.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Boolean boolean38 = schema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = schema18.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = null;
        schema18.setXml(xML41);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test04577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04577");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.externalDocs(externalDocumentation13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema9.getProperties();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.maximum(bigDecimal16);
        io.swagger.oas.models.media.XML xML18 = null;
        schema9.setXml(xML18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04578");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema12.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 0);
        schema18.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04579");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String str8 = tagSetOptional7.toString();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.lang.String[] strArray17 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray17);
        io.swagger.oas.models.tags.Tag[] tagArray19 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet20 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet20, tagArray19);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet22 = tagSetOptional18.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet23 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet24 = tagSetOptional7.orElse(tagSet23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.minimum(bigDecimal35);
        boolean boolean37 = schema29.equals((java.lang.Object) bigDecimal35);
        io.swagger.oas.models.media.Schema schema39 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema40 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema29.setExample((java.lang.Object) tagSetOptionalSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = schema29.not(schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        schema51.set$ref("");
        boolean boolean56 = tagSetOptional7.equals((java.lang.Object) schema51);
        java.lang.String str57 = tagSetOptional7.toString();
        java.lang.String str58 = tagSetOptional7.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet59 = tagSetOptional7.get();
        java.lang.String str60 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str8, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSetOptional18);
        org.junit.Assert.assertNotNull(tagArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(tagSet22);
        org.junit.Assert.assertNotNull(tagSet23);
        org.junit.Assert.assertNotNull(tagSet24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str57, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str58, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str60, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04580");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        java.lang.String str20 = schema14.getType();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema14.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strComparableList21);
    }

    @Test
    public void test04581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04581");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int19 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04582");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04583");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema12.setPattern("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema24.readOnly((java.lang.Boolean) true);
        schema28.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04584");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.util.List<java.lang.String> strList34 = schema25.getRequired();
        schema25.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int37 = schema25.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema25.title("Optional.empty");
        schema39.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema43 = schema39.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int44 = schema43.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        schema46.setDiscriminator(discriminator47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test04585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04585");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.xml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        strComparableSchema49.setNot((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema49.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema49.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema61.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema59.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.math.BigDecimal bigDecimal66 = null;
        strComparableSchema61.setMaximum(bigDecimal66);
        java.util.List<java.lang.String> strList68 = strComparableSchema61.getRequired();
        java.math.BigDecimal bigDecimal69 = null;
        strComparableSchema61.setMaximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema61.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema61.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema48.setAdditionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema77 = schema48.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema48.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.minimum(bigDecimal80);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema82.setName("hi!");
        strComparableSchema79.setNot((io.swagger.oas.models.media.Schema) strComparableSchema82);
        strComparableSchema79.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema88 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema88.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int91 = strComparableSchema88.getMinProperties();
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema88.type("hi!");
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema79.additionalProperties(schema93);
        java.lang.Boolean boolean95 = schema93.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema97 = schema93.pattern("");
        schema48.setNot(schema97);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test04586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04586");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema20.getMinItems();
        schema20.setNullable((java.lang.Boolean) false);
        schema20.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test04587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04587");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema29.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema31.getExternalDocs();
        schema31.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str35 = schema31.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test04588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04588");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.$ref("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema20.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema33.minimum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test04589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04589");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema3.getTitle();
        strComparableSchema3.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        boolean boolean27 = schema19.equals((java.lang.Object) bigDecimal25);
        io.swagger.oas.models.media.Schema schema29 = schema19.type("Optional.empty");
        boolean boolean30 = schema14.equals((java.lang.Object) schema29);
        boolean boolean31 = strComparableSchema0.equals((java.lang.Object) schema29);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.discriminator(discriminator32);
        io.swagger.oas.models.media.Schema schema35 = schema29.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = null;
        schema35.setMinimum(bigDecimal36);
        java.lang.Integer int38 = schema35.getMaxProperties();
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test04590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04590");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setMinLength((java.lang.Integer) 0);
        strComparableSchema39.setExample((java.lang.Object) strComparableSchema49);
        java.lang.String str54 = strComparableSchema49.getTitle();
        schema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList56 = strComparableSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.maxItems((java.lang.Integer) 100);
        java.lang.String str59 = strComparableSchema49.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strComparableList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test04591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04591");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema28.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        java.lang.Boolean boolean41 = strComparableSchema37.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema37.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema37.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = schema45.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema48 = schema45.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean49 = schema48.getExclusiveMaximum();
        schema28.setExample((java.lang.Object) schema48);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
    }

    @Test
    public void test04592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04592");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema4.getProperties();
        io.swagger.oas.models.media.XML xML14 = schema4.getXml();
        java.lang.String str15 = schema4.getPattern();
        io.swagger.oas.models.media.Schema schema17 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema17.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.multipleOf(bigDecimal20);
        java.lang.Object obj22 = schema21.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test04593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04593");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema4.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema4.minimum(bigDecimal17);
        java.lang.Object obj19 = schema18.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test04594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04594");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.maximum(bigDecimal9);
        java.lang.String str11 = schema6.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test04595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04595");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema26.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema34 = schema26.maxItems((java.lang.Integer) 100);
        java.lang.Integer int35 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema36 = schema15.not(schema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema43 = schema41.name("");
        schema41.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML46 = schema41.getXml();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema41.minimum(bigDecimal47);
        boolean boolean49 = schema15.equals((java.lang.Object) schema48);
        schema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema15.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema15.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean56 = schema15.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test04596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04596");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        strComparableSchema3.setName("");
        java.lang.Boolean boolean13 = strComparableSchema3.getDeprecated();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.maximum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test04597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04597");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema20.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test04598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04598");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        strComparableSchema0.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test04599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04599");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema15.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.name("Optional.empty");
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        schema19.setRequired((java.util.List<java.lang.String>) strList22);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Boolean boolean26 = strComparableSchema3.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        strComparableSchema31.setTitle("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.Boolean boolean45 = strComparableSchema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema41.format("");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema41.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema49.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema31.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema3.addProperties("#/components/schemas/", schema51);
        java.lang.Integer int53 = schema52.getMinItems();
        io.swagger.oas.models.media.XML xML54 = schema52.getXml();
        java.lang.String str55 = schema52.getType();
        io.swagger.oas.models.media.Schema schema57 = schema52.nullable((java.lang.Boolean) false);
        java.lang.String str58 = schema52.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(xML54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test04600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04600");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int25 = schema24.getMinProperties();
        java.lang.String str26 = schema24.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04601");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.discriminator(discriminator30);
        java.lang.Integer int32 = schema31.getMaxItems();
        java.lang.Integer int33 = schema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(schema34);
    }

    @Test
    public void test04602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04602");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        strComparableSchema19.setDescription("default");
        java.lang.Integer int26 = strComparableSchema19.getMaxItems();
        java.lang.Boolean boolean27 = strComparableSchema19.getWriteOnly();
        java.math.BigDecimal bigDecimal28 = strComparableSchema19.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema18.not(schema32);
        java.lang.String str34 = schema32.get$ref();
        schema32.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04603");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema26.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean32 = schema26.getReadOnly();
        io.swagger.oas.models.media.Schema schema34 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema34.getDeprecated();
        schema34.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test04604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04604");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.lang.Boolean boolean34 = schema33.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.minimum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema45.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema52 = schema50.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        io.swagger.oas.models.media.Schema schema55 = schema33.example((java.lang.Object) schema52);
        schema33.setPattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean58 = schema33.getExclusiveMaximum();
        schema33.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test04605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04605");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        schema25.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal32 = schema25.getMultipleOf();
        schema25.setMaxItems((java.lang.Integer) 0);
        java.lang.Object obj35 = schema25.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema25.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04606");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        java.lang.String str47 = schema45.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str61 = schema60.getType();
        io.swagger.oas.models.media.Schema schema62 = schema45.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema67.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema74 = schema72.maxLength((java.lang.Integer) 100);
        schema74.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema45.addProperties("", schema74);
        schema45.setType("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        java.math.BigDecimal bigDecimal81 = schema80.getMinimum();
        io.swagger.oas.models.media.Schema schema83 = schema80.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test04607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04607");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.getNot();
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema36 = schema33.getNot();
        io.swagger.oas.models.media.Schema schema37 = schema15.not(schema36);
        java.lang.Boolean boolean38 = schema15.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test04608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04608");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional[[]]\n    description: Optional[[]]\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema18.addRequiredItem("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema18.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        java.lang.String str31 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.maximum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema33.minItems((java.lang.Integer) (-1));
        schema33.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema46 = schema44.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.pattern("");
        io.swagger.oas.models.media.Schema schema52 = schema46.not(schema51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setUniqueItems((java.lang.Boolean) false);
        schema33.setNot(schema54);
        java.math.BigDecimal bigDecimal60 = null;
        schema54.setMultipleOf(bigDecimal60);
        io.swagger.oas.models.media.Schema schema62 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema54);
        java.math.BigDecimal bigDecimal63 = schema62.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal63);
    }

    @Test
    public void test04609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04609");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema6.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = null;
        schema10.setAdditionalProperties(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema10.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04610");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        schema14.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        strComparableSchema35.setExtensions(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema35.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setMinLength((java.lang.Integer) 0);
        strComparableSchema35.setExample((java.lang.Object) strComparableSchema45);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema45.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema14.example((java.lang.Object) strComparableSchema45);
        java.lang.String str53 = schema52.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test04611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04611");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setName("hi!");
        strComparableSchema37.setNot((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema37.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema37.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema47.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema54.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema54.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema54.format("");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.discriminator(discriminator71);
        java.lang.String[] strArray75 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema72.setRequired((java.util.List<java.lang.String>) strList76);
        schema47.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = schema36.required((java.util.List<java.lang.String>) strList76);
        schema36.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test04612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04612");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        java.lang.String str9 = schema8.toString();
        java.lang.Boolean boolean10 = schema8.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean14 = strComparableSchema11.getWriteOnly();
        io.swagger.oas.models.media.XML xML15 = null;
        strComparableSchema11.setXml(xML15);
        strComparableSchema11.setMaxProperties((java.lang.Integer) 100);
        schema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test04613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04613");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = strComparableSchema10.getMaximum();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema10.multipleOf(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema10.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test04614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04614");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema22.not(schema27);
        java.lang.Boolean boolean29 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema27.writeOnly((java.lang.Boolean) false);
        schema14.setNot(schema31);
        io.swagger.oas.models.media.XML xML33 = schema14.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML33);
    }

    @Test
    public void test04615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04615");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        schema33.setMinProperties((java.lang.Integer) 0);
        java.lang.String str36 = schema33.getFormat();
        java.lang.String str37 = schema33.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test04616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04616");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema46.setName("hi!");
        strComparableSchema46.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.minimum(bigDecimal62);
        boolean boolean64 = schema56.equals((java.lang.Object) bigDecimal62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setName("hi!");
        strComparableSchema65.setNot((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema65.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema65.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema65.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema65.format("");
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        java.lang.String[] strArray87 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        io.swagger.oas.models.media.Schema schema90 = schema81.required((java.util.List<java.lang.String>) strList88);
        schema56.setRequired((java.util.List<java.lang.String>) strList88);
        strComparableSchema46.setRequired((java.util.List<java.lang.String>) strList88);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional93 = java.util.Optional.ofNullable(strList88);
        io.swagger.oas.models.media.Schema schema94 = schema40.required((java.util.List<java.lang.String>) strList88);
        java.math.BigDecimal bigDecimal95 = null;
        schema94.setMaximum(bigDecimal95);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(strListOptional93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test04617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04617");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.additionalProperties(schema24);
        java.lang.String str26 = schema25.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04618");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.minimum(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = schema23.getMaximum();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.maximum(bigDecimal27);
        java.lang.String str29 = schema28.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.name("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema40.pattern("");
        java.lang.String[] strArray44 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema42.required((java.util.List<java.lang.String>) strList45);
        java.lang.Object obj48 = schema42.getExample();
        schema28.setDefault(obj48);
        io.swagger.oas.annotations.media.Content[] contentArray50 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContent(contentArray50, produces53, produces54, components55);
        io.swagger.oas.models.media.Schema schema57 = schema28.example((java.lang.Object) components55);
        io.swagger.oas.models.media.Schema schema58 = schema9.addProperties("default", schema28);
        schema9.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = schema9.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setName("hi!");
        strComparableSchema63.setNot((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema63.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema63.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema75.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema79 = schema73.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema75);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema73.properties(strMap80);
        java.util.Optional<java.lang.Object> objOptional82 = java.util.Optional.ofNullable((java.lang.Object) schema81);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = schema81.getExternalDocs();
        io.swagger.oas.models.media.Schema schema85 = schema81.description("");
        io.swagger.oas.models.media.Schema schema87 = schema85.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema87.additionalProperties(schema88);
        schema62.setNot(schema87);
        java.lang.String str91 = schema62.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(contentArray50);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(objOptional82);
        org.junit.Assert.assertNull(externalDocumentation83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test04619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04619");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        schema11.setFormat("");
        io.swagger.oas.models.media.Schema schema16 = schema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.type("default");
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema21 = schema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04620");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.String str15 = strComparableSchema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.Object obj27 = schema26.getExample();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.addRequiredItem("Optional.empty");
        strComparableSchema10.setDefault((java.lang.Object) schema26);
        strComparableSchema10.setType("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = schema36.getMultipleOf();
        io.swagger.oas.models.media.Schema schema39 = schema36.maxItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test04621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04621");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        java.lang.String str9 = schema4.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setMinLength((java.lang.Integer) 0);
        strComparableSchema10.setExample((java.lang.Object) strComparableSchema20);
        java.lang.String str25 = strComparableSchema20.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema30.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.name("Optional.empty");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema20.required((java.util.List<java.lang.String>) strList37);
        schema4.setDefault((java.lang.Object) strComparableSchema20);
        java.math.BigDecimal bigDecimal42 = null;
        schema4.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema4.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test04622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04622");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setName("hi!");
        strComparableSchema43.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML49 = null;
        strComparableSchema43.setXml(xML49);
        java.lang.Boolean boolean51 = strComparableSchema43.getNullable();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.$ref("hi!");
        java.math.BigDecimal bigDecimal54 = null;
        strComparableSchema43.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema38.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int59 = strComparableSchema43.getMaxItems();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema43.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04623");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        java.lang.Integer int45 = schema44.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.maxItems((java.lang.Integer) 0);
        strComparableSchema49.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        schema61.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema61.name("Optional.empty");
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema65.setRequired((java.util.List<java.lang.String>) strList68);
        strComparableSchema49.setRequired((java.util.List<java.lang.String>) strList68);
        schema44.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema74 = schema44.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test04624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04624");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray22 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        io.swagger.oas.models.tags.Tag[] tagArray24 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet25 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet25, tagArray24);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet27 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet25);
        java.lang.String str28 = tagSetOptional23.toString();
        boolean boolean30 = tagSetOptional23.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema14.example((java.lang.Object) boolean30);
        strComparableSchema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema3.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal35 = null;
        strComparableSchema3.setMinimum(bigDecimal35);
        java.lang.String[] strArray41 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        java.lang.String str43 = tagSetOptional42.toString();
        java.lang.String[] strArray47 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional48 = io.swagger.jaxrs2.OperationParser.getTags(strArray47);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional48.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional42.orElse(tagSet49);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = java.util.Optional.ofNullable(tagSet49);
        strComparableSchema3.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional51);
        java.lang.String str53 = tagSetOptional51.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet54 = tagSetOptional51.get();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(tagSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str43, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(tagSetOptional48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str53, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet54);
    }

    @Test
    public void test04625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04625");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        strComparableSchema0.setDiscriminator(discriminator7);
        java.lang.Integer int9 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema11.setExternalDocs(externalDocumentation12);
        java.lang.Object obj14 = schema11.getExample();
        java.lang.Integer int15 = schema11.getMaxProperties();
        java.lang.Object obj16 = schema11.getExample();
        java.lang.String str17 = schema11.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04626");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema2.maxItems((java.lang.Integer) 1);
        schema6.setMinProperties((java.lang.Integer) 1);
        java.lang.Integer int9 = schema6.getMaxLength();
        io.swagger.oas.models.media.Schema schema10 = schema6.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test04627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04627");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        schema17.setReadOnly((java.lang.Boolean) false);
        schema17.setMaxItems((java.lang.Integer) 100);
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema17.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema17.format("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04628");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema schema36 = schema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema33.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        strComparableSchema39.setDescription("default");
        java.lang.Integer int46 = strComparableSchema39.getMaxItems();
        strComparableSchema39.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema52.setName("hi!");
        strComparableSchema52.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML58 = null;
        strComparableSchema52.setXml(xML58);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList65 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean68 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean70 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList65);
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema52.maximum(bigDecimal72);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.externalDocs(externalDocumentation74);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList76 = schema73.getEnum();
        strComparableSchema39.setEnum(strComparableList76);
        schema33.setExample((java.lang.Object) strComparableList76);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strComparableList76);
    }

    @Test
    public void test04629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04629");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema schema36 = schema33.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema33.multipleOf(bigDecimal37);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04630");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        schema19.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema29.not(schema34);
        java.lang.Boolean boolean36 = schema34.getUniqueItems();
        schema34.setUniqueItems((java.lang.Boolean) true);
        schema19.addExtension("", (java.lang.Object) schema34);
        boolean boolean40 = schema14.equals((java.lang.Object) schema34);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema14.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema14.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema44.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.pattern("");
        java.lang.Integer int61 = strComparableSchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema64 = schema44.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList65 = schema64.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strComparableList65);
    }

    @Test
    public void test04631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04631");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.externalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        schema8.setDiscriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema21.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema23.setMaximum(bigDecimal28);
        strComparableSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema23.setPattern("");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema23.format("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        strComparableSchema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema41.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema44.minimum(bigDecimal46);
        boolean boolean48 = schema40.equals((java.lang.Object) bigDecimal46);
        io.swagger.oas.models.media.Schema schema50 = schema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema51 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema40.setExample((java.lang.Object) tagSetOptionalSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema56.setName("hi!");
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema62 = schema40.not(schema61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.math.BigDecimal bigDecimal65 = schema64.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema66.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema66.format("");
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.multipleOf(bigDecimal81);
        java.lang.String[] strArray88 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema82.required((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema93 = schema82.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema94 = schema64.example((java.lang.Object) schema93);
        boolean boolean95 = schema35.equals((java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema schema96 = schema8.example((java.lang.Object) boolean95);
        schema8.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test04632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04632");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("");
        schema21.setFormat("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04633");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minimum(bigDecimal19);
        boolean boolean21 = schema13.equals((java.lang.Object) bigDecimal19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema13.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        io.swagger.oas.models.media.Schema schema36 = schema30.not(schema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.properties(strMap39);
        io.swagger.oas.models.media.Schema schema41 = schema13.addProperties("", schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        boolean boolean54 = schema46.equals((java.lang.Object) bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setName("hi!");
        strComparableSchema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema55.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema55.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema55.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema55.format("");
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema71.required((java.util.List<java.lang.String>) strList78);
        schema46.setRequired((java.util.List<java.lang.String>) strList78);
        schema13.setRequired((java.util.List<java.lang.String>) strList78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema13.getProperties();
        schema7.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema86.getExternalDocs();
        schema86.setUniqueItems((java.lang.Boolean) false);
        schema86.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int92 = schema86.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator93 = schema86.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(externalDocumentation87);
        org.junit.Assert.assertNull(int92);
        org.junit.Assert.assertNull(discriminator93);
    }

    @Test
    public void test04634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04634");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.externalDocs(externalDocumentation7);
        java.lang.Integer int9 = schema4.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj17 = schema16.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema16.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema27 = schema16.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.String str28 = strComparableSchema23.getName();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = strComparableSchema23.getMaxProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList32 = strComparableSchema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema41.minimum(bigDecimal43);
        boolean boolean45 = schema37.equals((java.lang.Object) bigDecimal43);
        io.swagger.oas.models.media.Schema schema47 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema37.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str50 = schema49.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setName("hi!");
        strComparableSchema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema55.name("hi!");
        java.lang.Integer int63 = schema62.getMaxLength();
        java.lang.Boolean boolean64 = schema62.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML65 = schema62.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema78.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema78.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema82 = schema76.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema78);
        io.swagger.oas.models.media.Schema schema84 = schema82.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema86 = schema62.properties(strMap85);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap85);
        strComparableSchema23.setProperties(strMap85);
        schema4.setProperties(strMap85);
        io.swagger.oas.models.media.Schema schema91 = schema4.readOnly((java.lang.Boolean) true);
        java.lang.Integer int92 = schema4.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(strComparableList32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(xML65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(int92);
    }

    @Test
    public void test04635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04635");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        schema27.setProperties(strMap28);
        java.lang.Boolean boolean30 = schema27.getExclusiveMinimum();
        schema27.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setName("hi!");
        strComparableSchema45.setName("Optional.empty");
        java.math.BigDecimal bigDecimal51 = null;
        strComparableSchema45.setMaximum(bigDecimal51);
        java.lang.String str53 = strComparableSchema45.getDescription();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema45.maximum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema33.additionalProperties(schema55);
        java.util.List<java.lang.String> strList57 = schema56.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setName("hi!");
        strComparableSchema58.setNot((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema58.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        strComparableSchema67.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema67.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema70.setName("hi!");
        strComparableSchema70.setName("Optional.empty");
        java.math.BigDecimal bigDecimal76 = null;
        strComparableSchema70.setMaximum(bigDecimal76);
        java.lang.String str78 = strComparableSchema70.getDescription();
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema70.maximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema58.additionalProperties(schema80);
        java.util.List<java.lang.String> strList82 = schema81.getRequired();
        schema56.setAdditionalProperties(schema81);
        schema81.set$ref("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema27.setAdditionalProperties(schema81);
        schema27.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema27.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test04636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04636");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = schema4.getExtensions();
        java.lang.Boolean boolean6 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema8 = schema4.readOnly((java.lang.Boolean) false);
        schema4.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setName("hi!");
        strComparableSchema23.setName("Optional.empty");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema23.setMaximum(bigDecimal29);
        java.lang.String str31 = strComparableSchema23.getDescription();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema11.additionalProperties(schema33);
        schema33.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList37 = schema33.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema33.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.Boolean boolean47 = strComparableSchema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema43.format("");
        java.lang.String str50 = schema49.getName();
        schema49.setExclusiveMaximum((java.lang.Boolean) true);
        boolean boolean53 = schema33.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema54 = schema4.not(schema33);
        io.swagger.oas.models.media.Schema schema56 = schema54.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema54.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema58.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test04637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04637");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema26.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean32 = schema26.getReadOnly();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema26.minimum(bigDecimal33);
        java.lang.String str35 = schema34.getType();
        java.lang.Object obj36 = schema34.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04638");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        strComparableSchema3.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.multipleOf(bigDecimal15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04639");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional7.orElse(tagSet29);
        java.lang.String str31 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str31, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04640");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema15 = schema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema19.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema30.setName("hi!");
        strComparableSchema30.setName("Optional.empty");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema30.setMaximum(bigDecimal36);
        java.lang.String str38 = strComparableSchema30.getDescription();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema30.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema26.not(schema40);
        schema41.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema45.getNot();
        schema11.setAdditionalProperties(schema45);
        java.lang.Boolean boolean48 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        strComparableSchema49.setNot((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int61 = strComparableSchema58.getMinProperties();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.type("hi!");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema63.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema63.xml(xML67);
        schema63.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Integer int71 = schema63.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = null;
        strComparableSchema72.setExtensions(strMap73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema72.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema75);
        io.swagger.oas.models.media.Schema schema78 = schema76.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.minimum(bigDecimal80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema79.pattern("");
        io.swagger.oas.models.media.Schema schema84 = schema78.not(schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema84.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema88 = schema63.example((java.lang.Object) schema87);
        io.swagger.oas.models.media.Schema schema89 = schema11.example((java.lang.Object) schema63);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema11.maximum(bigDecimal90);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test04641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04641");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        schema26.set$ref("");
        io.swagger.oas.models.media.Schema schema32 = schema26.maxProperties((java.lang.Integer) (-1));
        schema26.setUniqueItems((java.lang.Boolean) true);
        schema26.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema26.title("");
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test04642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04642");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = strComparableSchema3.getExternalDocs();
        java.lang.String str10 = strComparableSchema3.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04643");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema38 = schema4.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema41 = schema4.maxLength((java.lang.Integer) 10);
        schema4.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04644");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        schema35.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        schema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        schema10.addExtension("default", (java.lang.Object) strComparableList37);
        io.swagger.oas.models.media.Schema schema43 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int44 = schema43.getMaxProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.exclusiveMinimum((java.lang.Boolean) true);
        schema43.setFormat("");
        io.swagger.oas.models.media.Schema schema50 = schema43.name("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema43.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema43.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test04645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04645");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML37 = schema12.getXml();
        schema12.setDescription("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(xML37);
    }

    @Test
    public void test04646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04646");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        java.lang.Boolean boolean12 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04647");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        java.lang.Object obj13 = strComparableSchema3.getExample();
        strComparableSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        strComparableSchema3.setProperties(strMap16);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test04648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04648");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setTitle("hi!");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.maximum(bigDecimal9);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema10.pattern("");
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04649");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.lang.Integer int9 = schema8.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema20.type("Optional.empty");
        java.lang.Boolean boolean26 = schema20.getExclusiveMaximum();
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema20.example(obj27);
        io.swagger.oas.models.media.Schema schema30 = schema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("default");
        schema35.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal38 = schema35.getMaximum();
        java.lang.Boolean boolean39 = schema35.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.Boolean boolean47 = strComparableSchema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema43.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.discriminator(discriminator50);
        java.math.BigDecimal bigDecimal52 = null;
        schema51.setMaximum(bigDecimal52);
        java.lang.String str54 = schema51.getName();
        io.swagger.oas.models.media.Schema schema56 = schema51.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = schema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema51.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema61.pattern("");
        schema65.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = schema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema70 = schema65.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.minimum(bigDecimal72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setName("hi!");
        strComparableSchema71.setNot((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema71.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema71.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema83.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema83.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema87 = schema81.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema89 = schema87.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        schema70.setProperties(strMap90);
        io.swagger.oas.models.media.Schema schema92 = schema51.properties(strMap90);
        io.swagger.oas.models.media.Schema schema93 = schema35.properties(strMap90);
        schema20.setProperties(strMap90);
        io.swagger.oas.models.media.Schema schema95 = schema8.properties(strMap90);
        java.lang.Integer int96 = schema8.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test04650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04650");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("Optional.empty");
        java.lang.String str15 = schema12.getType();
        java.lang.String str16 = schema12.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test04651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04651");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str17 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableSchema18.getEnum();
        strComparableSchema10.setEnum(strComparableList22);
        schema9.setEnum(strComparableList22);
        io.swagger.oas.models.media.Schema schema26 = schema9.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMultipleOf(bigDecimal27);
        schema26.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema26.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04652");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema12.getNullable();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.nullable((java.lang.Boolean) true);
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj30 = null;
        strComparableSchema12.setDefault(obj30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema12.maximum(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test04653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04653");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minLength((java.lang.Integer) (-1));
        schema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.maxItems((java.lang.Integer) 1);
        schema10.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test04654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04654");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema schema36 = schema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema33.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal39 = schema33.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test04655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04655");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setMinLength((java.lang.Integer) 0);
        strComparableSchema13.setExample((java.lang.Object) strComparableSchema23);
        java.math.BigDecimal bigDecimal28 = strComparableSchema23.getMaximum();
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema23.getDefault();
        java.lang.String str30 = strComparableSchema23.getType();
        java.math.BigDecimal bigDecimal31 = null;
        strComparableSchema23.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema33 = schema4.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test04656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04656");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.math.BigDecimal bigDecimal11 = schema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema12 = schema8.getAdditionalProperties();
        schema8.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema8.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema18.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test04657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04657");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema25 = schema10.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) 10);
        java.lang.Object obj28 = null;
        schema25.setDefault(obj28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema25.setXml(xML30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04658");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = schema26.getExternalDocs();
        schema26.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema26.setMinItems((java.lang.Integer) (-1));
        java.lang.Object obj35 = schema26.getExample();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema26.multipleOf(bigDecimal36);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04659");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema23.getProperties();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema23.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema28.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema28.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04660");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        java.lang.Integer int9 = strComparableSchema3.getMinProperties();
        strComparableSchema3.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean14 = strComparableSchema3.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test04661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04661");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        java.lang.Integer int8 = schema4.getMaxItems();
        java.lang.Object obj9 = null;
        schema4.setDefault(obj9);
        java.lang.String[] strArray15 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet17 = tagSetOptional16.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setName("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.name("Optional.empty");
        schema26.setName("Optional.empty");
        java.lang.String str29 = schema26.get$ref();
        boolean boolean30 = tagSetOptional16.equals((java.lang.Object) str29);
        schema4.addExtension("", (java.lang.Object) tagSetOptional16);
        java.lang.String str32 = tagSetOptional16.toString();
        java.lang.String[] strArray39 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        java.lang.String[] strArray41 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        io.swagger.oas.models.tags.Tag[] tagArray43 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet44 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet44, tagArray43);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet46 = tagSetOptional42.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet47 = tagSetOptional40.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional48 = java.util.Optional.ofNullable((java.util.HashSet<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional49 = java.util.Optional.ofNullable((java.util.HashSet<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.lang.Class<?> wildcardClass51 = tagSet44.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSet17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str32, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertNotNull(tagArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(tagSet46);
        org.junit.Assert.assertNotNull(tagSet47);
        org.junit.Assert.assertNotNull(tagSetOptional48);
        org.junit.Assert.assertNotNull(tagSetOptional49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test04662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04662");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema11.setXml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema16.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04663");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.util.List<java.lang.String> strList34 = schema25.getRequired();
        schema25.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int37 = schema25.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema25.title("Optional.empty");
        schema39.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema43 = schema39.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.xml(xML44);
        schema43.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test04664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04664");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str11 = schema6.getTitle();
        io.swagger.oas.models.media.XML xML12 = schema6.getXml();
        java.lang.Boolean boolean13 = schema6.getExclusiveMaximum();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema6.name("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML18 = schema6.getXml();
        java.lang.Integer int19 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(xML18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test04665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04665");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema7.maxItems((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema7.getProperties();
        java.math.BigDecimal bigDecimal12 = null;
        schema7.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema7.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04666");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = schema12.getTitle();
        java.lang.Integer int14 = schema12.getMinProperties();
        java.lang.Integer int15 = schema12.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test04667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04667");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getDescription();
        schema20.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal24 = schema20.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test04668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04668");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str6 = tagSetOptional5.toString();
        java.lang.String str7 = tagSetOptional5.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet8 = tagSetOptional5.get();
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = java.util.Optional.of(tagSet8);
        java.lang.String[] strArray10 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray10);
        io.swagger.oas.models.tags.Tag[] tagArray12 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet13 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet13, tagArray12);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional11.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet13);
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = java.util.Optional.ofNullable(tagSet13);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet17 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet13);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str6, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str7, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNotNull(tagArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSet17);
    }

    @Test
    public void test04669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04669");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        java.util.Optional<java.lang.Cloneable> cloneableOptional21 = java.util.Optional.ofNullable((java.lang.Cloneable) contentArray0);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(cloneableOptional21);
    }

    @Test
    public void test04670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04670");
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(serverArrayOptional0);
    }

    @Test
    public void test04671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04671");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        java.lang.String[] strArray14 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray14);
        io.swagger.oas.models.tags.Tag[] tagArray16 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet17 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet17, tagArray16);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet19 = tagSetOptional15.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet17);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet20 = tagSetOptional13.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet17);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet21 = tagSetOptional13.get();
        java.lang.String[] strArray28 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        java.lang.String[] strArray30 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional31 = io.swagger.jaxrs2.OperationParser.getTags(strArray30);
        io.swagger.oas.models.tags.Tag[] tagArray32 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet33 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet33, tagArray32);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional31.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet33);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional29.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet33);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet37 = tagSetOptional13.orElse(tagSet36);
        io.swagger.oas.models.tags.Tag[] tagArray38 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet39 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet39, tagArray38);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional41 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet39);
        boolean boolean42 = tagSetOptional41.isPresent();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet43 = tagSetOptional41.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional13.orElse(tagSet43);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional5.orElse(tagSet44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.getAdditionalProperties();
        strComparableSchema46.setDeprecated((java.lang.Boolean) false);
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema46.addRequiredItem("");
        java.lang.String str56 = strComparableSchema46.toString();
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableSchema46.getDefault();
        java.lang.String[] strArray58 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional59 = io.swagger.jaxrs2.OperationParser.getTags(strArray58);
        java.lang.String str60 = tagSetOptional59.toString();
        java.lang.String[] strArray61 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional62 = io.swagger.jaxrs2.OperationParser.getTags(strArray61);
        java.lang.String str63 = tagSetOptional62.toString();
        boolean boolean64 = tagSetOptional59.equals((java.lang.Object) str63);
        java.lang.String str65 = tagSetOptional59.toString();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema46.example((java.lang.Object) str65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema46.nullable((java.lang.Boolean) false);
        boolean boolean69 = tagSetOptional5.equals((java.lang.Object) schema68);
        java.lang.String str70 = tagSetOptional5.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(tagArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(tagSet19);
        org.junit.Assert.assertNotNull(tagSet20);
        org.junit.Assert.assertNotNull(tagSet21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNotNull(tagSetOptional31);
        org.junit.Assert.assertNotNull(tagArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertNotNull(tagSet37);
        org.junit.Assert.assertNotNull(tagArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(tagSetOptional41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(tagSet43);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str56, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(strComparable57);
        org.junit.Assert.assertNotNull(tagSetOptional59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Optional.empty" + "'", str60, "Optional.empty");
        org.junit.Assert.assertNotNull(tagSetOptional62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional.empty" + "'", str63, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Optional.empty" + "'", str65, "Optional.empty");
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str70, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04672");
        io.swagger.oas.models.tags.Tag[] tagArray0 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet1 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet1, tagArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet1);
        boolean boolean4 = tagSetOptional3.isPresent();
        boolean boolean5 = tagSetOptional3.isPresent();
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet11 = tagSetOptional10.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.name("Optional.empty");
        schema20.setName("Optional.empty");
        java.lang.String str23 = schema20.get$ref();
        boolean boolean24 = tagSetOptional10.equals((java.lang.Object) str23);
        boolean boolean25 = tagSetOptional10.isPresent();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        java.lang.String[] strArray34 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional35 = io.swagger.jaxrs2.OperationParser.getTags(strArray34);
        io.swagger.oas.models.tags.Tag[] tagArray36 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet37 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet37, tagArray36);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional35.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet37);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional33.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet37);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet41 = tagSetOptional33.get();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional49 = io.swagger.jaxrs2.OperationParser.getTags(strArray48);
        java.lang.String[] strArray50 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        io.swagger.oas.models.tags.Tag[] tagArray52 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet53 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet53, tagArray52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional49.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet57 = tagSetOptional33.orElse(tagSet56);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet58 = tagSetOptional10.orElse(tagSet57);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setName("hi!");
        strComparableSchema67.setNot((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema67.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema67.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema67.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema67.format("");
        boolean boolean82 = tagSetOptional66.equals((java.lang.Object) schema81);
        java.lang.String str83 = tagSetOptional66.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet84 = tagSetOptional66.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet85 = tagSetOptional66.get();
        java.lang.String[] strArray86 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional87 = io.swagger.jaxrs2.OperationParser.getTags(strArray86);
        io.swagger.oas.models.tags.Tag[] tagArray88 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet89 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet89, tagArray88);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet91 = tagSetOptional87.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet89);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet92 = tagSetOptional66.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet89);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet93 = tagSetOptional10.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet89);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet94 = tagSetOptional3.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet89);
        org.junit.Assert.assertNotNull(tagArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tagSetOptional3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagSet11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(tagSetOptional35);
        org.junit.Assert.assertNotNull(tagArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(tagSet41);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(tagSetOptional49);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(tagArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(tagSet57);
        org.junit.Assert.assertNotNull(tagSet58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str83, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet84);
        org.junit.Assert.assertNotNull(tagSet85);
        org.junit.Assert.assertNotNull(tagSetOptional87);
        org.junit.Assert.assertNotNull(tagArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(tagSet91);
        org.junit.Assert.assertNotNull(tagSet92);
        org.junit.Assert.assertNotNull(tagSet93);
        org.junit.Assert.assertNotNull(tagSet94);
    }

    @Test
    public void test04673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04673");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        schema11.setExtensions(strMap16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema11.minimum(bigDecimal18);
        schema19.setName("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/hi!\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04674");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema4.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema44.getNot();
        schema44.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        strComparableSchema50.setExtensions(strMap51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema53.setName("hi!");
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema53.deprecated((java.lang.Boolean) true);
        schema44.setDefault((java.lang.Object) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema61 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.multipleOf(bigDecimal62);
        schema63.addEnumItemObject((java.lang.Comparable<java.lang.String>) "default");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04675");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getNullable();
        schema14.setNot(schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema48.setName("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema32.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = schema14.additionalProperties(schema32);
        schema14.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema14.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test04676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04676");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test04677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04677");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        java.lang.Integer int13 = schema12.getMinLength();
        schema12.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = schema12.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test04678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04678");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        io.swagger.oas.models.media.Schema schema21 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema24 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04679");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema3.setMaximum(bigDecimal12);
        java.lang.String str14 = strComparableSchema3.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setName("hi!");
        strComparableSchema18.setTitle("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.maximum(bigDecimal24);
        schema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass32 = schema31.getClass();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema3.example((java.lang.Object) schema31);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04680");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setMinLength((java.lang.Integer) 0);
        strComparableSchema39.setExample((java.lang.Object) strComparableSchema49);
        java.lang.String str54 = strComparableSchema49.getTitle();
        schema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        schema12.setExternalDocs(externalDocumentation56);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema12.xml(xML58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test04681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04681");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema25 = schema19.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema27 = schema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str30 = schema29.getDescription();
        io.swagger.oas.models.media.Schema schema31 = schema29.getNot();
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema2.example((java.lang.Object) schema35);
        schema36.setTitle("class Schema {\n    title: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test04682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04682");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setTitle("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04683");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.getAdditionalProperties();
        strComparableSchema19.setDeprecated((java.lang.Boolean) false);
        strComparableSchema19.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema19.externalDocs(externalDocumentation27);
        java.lang.Integer int29 = schema28.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema14.additionalProperties(schema28);
        schema32.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04684");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("Optional.empty");
        schema19.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        schema9.setExample((java.lang.Object) schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMinimum(bigDecimal27);
        schema25.setTitle("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema25.not(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.pattern("");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj40 = schema39.getExample();
        io.swagger.oas.models.media.Schema schema42 = schema39.deprecated((java.lang.Boolean) false);
        java.lang.String str43 = schema39.getFormat();
        schema32.setExample((java.lang.Object) str43);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema32.getDiscriminator();
        java.lang.String str46 = schema32.getFormat();
        java.lang.String str47 = schema32.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional.empty" + "'", str47, "Optional.empty");
    }

    @Test
    public void test04685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04685");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
    }

    @Test
    public void test04686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04686");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList13 = schema10.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strComparableList13);
    }

    @Test
    public void test04687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04687");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.name("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("");
        schema23.setMinLength((java.lang.Integer) 10);
        boolean boolean26 = schema9.equals((java.lang.Object) schema23);
        java.lang.Integer int27 = schema9.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        schema9.setDiscriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema31 = schema9.minItems((java.lang.Integer) 0);
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        schema31.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04688");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.lang.String str12 = schema10.get$ref();
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema18.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        io.swagger.oas.models.media.Schema schema26 = schema20.not(schema25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema20.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema20.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema31.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema31.format("");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        java.lang.String[] strArray53 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        io.swagger.oas.models.media.Schema schema56 = schema47.required((java.util.List<java.lang.String>) strList54);
        schema30.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema30.externalDocs(externalDocumentation58);
        java.lang.Boolean boolean60 = schema59.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema61 = schema10.not(schema59);
        schema61.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema64.$ref("hi!");
        io.swagger.oas.models.media.Schema schema72 = schema70.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema74 = schema70.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str75 = schema70.getTitle();
        java.util.List<java.lang.String> strList76 = schema70.getRequired();
        io.swagger.oas.models.media.Schema schema77 = schema61.required(strList76);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test04689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04689");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema12.setXml(xML13);
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04690");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.tags.Tag[] tagArray2 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet3 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet3, tagArray2);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional1.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet3);
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = java.util.Optional.ofNullable(tagSet3);
        java.util.Optional<java.util.AbstractSet<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = java.util.Optional.of((java.util.AbstractSet<io.swagger.oas.models.tags.Tag>) tagSet3);
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
    }

    @Test
    public void test04691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04691");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.getNot();
        java.lang.Object obj16 = schema15.getExample();
        io.swagger.oas.models.media.XML xML17 = schema15.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test04692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04692");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 10);
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema27.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema27.minimum(bigDecimal33);
        io.swagger.oas.models.media.XML xML35 = schema27.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(xML35);
    }

    @Test
    public void test04693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04693");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema15.getProperties();
        strComparableSchema3.setAdditionalProperties(schema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = schema23.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema25.not(schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema25.xml(xML32);
        schema33.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj43 = schema42.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema42.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setName("hi!");
        strComparableSchema46.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema53 = schema42.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema55 = schema42.name("");
        schema42.setDescription("Optional.empty");
        schema33.setNot(schema42);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setName("hi!");
        strComparableSchema61.setNot((io.swagger.oas.models.media.Schema) strComparableSchema64);
        strComparableSchema61.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema61.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = null;
        strComparableSchema72.setExtensions(strMap73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema72.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema75);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema75.minimum(bigDecimal77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema75.maxItems((java.lang.Integer) 0);
        strComparableSchema75.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema83 = schema71.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema75);
        io.swagger.oas.models.media.Schema schema85 = schema83.maxLength((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema83.getProperties();
        schema60.setNot(schema83);
        boolean boolean88 = schema15.equals((java.lang.Object) schema60);
        schema60.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04694");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = schema21.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema21.setExternalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test04695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04695");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = schema14.getEnum();
        java.lang.Integer int20 = schema14.getMaxProperties();
        schema14.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test04696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04696");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        schema6.set$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.$ref("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema19 = schema15.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.example(obj20);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("Optional.empty");
        boolean boolean24 = schema6.equals((java.lang.Object) "Optional.empty");
        schema6.setType("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema27.minLength((java.lang.Integer) (-1));
        schema33.setName("Optional[[]]");
        io.swagger.oas.models.media.Schema schema36 = schema6.additionalProperties(schema33);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema6.multipleOf(bigDecimal37);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04697");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList4 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList4);
        strComparableSchema0.setTitle("default");
        java.lang.Integer int9 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.discriminator(discriminator10);
        java.lang.Boolean boolean12 = schema11.getWriteOnly();
        schema11.setFormat("class Schema {\n    title: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test04698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04698");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema7 = schema5.description("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test04699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04699");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 1);
        java.lang.String str18 = schema4.getName();
        io.swagger.oas.models.media.Schema schema20 = schema4.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.minimum(bigDecimal21);
        schema22.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04700");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.lang.Boolean boolean11 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        strComparableSchema16.setDescription("default");
        java.lang.String[] strArray25 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema16.required((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema16.setExtensions(strMap29);
        java.lang.String str31 = strComparableSchema16.getPattern();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema16.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema16.minProperties((java.lang.Integer) (-1));
        java.lang.Object obj36 = strComparableSchema16.getExample();
        strComparableSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        schema13.setDefault((java.lang.Object) strComparableSchema16);
        java.lang.Integer int40 = schema13.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test04701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04701");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.lang.Integer int9 = strComparableSchema3.getMaxLength();
        java.lang.String str10 = strComparableSchema3.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.discriminator(discriminator11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test04702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04702");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.minimum(bigDecimal14);
        schema15.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema18 = schema6.not(schema15);
        schema6.setUniqueItems((java.lang.Boolean) true);
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04703");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        io.swagger.oas.annotations.media.Content[] contentArray37 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray37, produces40, produces41, components42);
        io.swagger.oas.models.media.Schema schema44 = schema15.example((java.lang.Object) components42);
        io.swagger.oas.models.media.Schema schema46 = schema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        java.lang.String str54 = strComparableSchema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema49.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean57 = schema56.getDeprecated();
        schema46.setNot(schema56);
        io.swagger.oas.models.media.Schema schema60 = schema46.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(contentArray37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test04704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04704");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.type("#/components/schemas/");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema6.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.pattern("");
        io.swagger.oas.models.media.Schema schema26 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema27 = schema24.getAdditionalProperties();
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema24.example((java.lang.Object) strComparableSchema30);
        strComparableSchema30.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = strComparableSchema30.getMaxLength();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema30.$ref("");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema46.getNot();
        boolean boolean48 = schema6.equals((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema50 = schema46.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema46.maxItems((java.lang.Integer) 10);
        java.lang.Integer int53 = schema46.getMinLength();
        java.math.BigDecimal bigDecimal54 = null;
        schema46.setMultipleOf(bigDecimal54);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test04705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04705");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = schema38.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxItems((java.lang.Integer) 10);
        java.lang.String str46 = schema45.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test04706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04706");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema10.setMinimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.maxItems((java.lang.Integer) 0);
        strComparableSchema29.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean37 = strComparableSchema29.getReadOnly();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.nullable((java.lang.Boolean) false);
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema42 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test04707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04707");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        schema19.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema29.not(schema34);
        java.lang.Boolean boolean36 = schema34.getUniqueItems();
        schema34.setUniqueItems((java.lang.Boolean) true);
        schema19.addExtension("", (java.lang.Object) schema34);
        boolean boolean40 = schema14.equals((java.lang.Object) schema34);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema14.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        schema48.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema48.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = schema52.pattern("default");
        java.lang.Integer int55 = schema52.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.pattern("");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema57.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj64 = schema63.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema63.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setName("hi!");
        strComparableSchema67.setNot((io.swagger.oas.models.media.Schema) strComparableSchema70);
        io.swagger.oas.models.media.Schema schema74 = schema63.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.String str75 = strComparableSchema70.getName();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator78 = null;
        strComparableSchema70.setDiscriminator(discriminator78);
        java.lang.String str80 = strComparableSchema70.getTitle();
        strComparableSchema70.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema52.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        schema83.setMinItems((java.lang.Integer) (-1));
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList86 = schema83.getEnum();
        io.swagger.oas.models.media.Schema schema87 = schema42.addProperties("", schema83);
        io.swagger.oas.models.media.Schema schema89 = schema83.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strComparableList86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test04708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04708");
        java.lang.String[] strArray4 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "default", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
    }

    @Test
    public void test04709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04709");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema30.getExternalDocs();
        schema30.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema64 = schema58.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema66 = schema58.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema58.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean69 = schema68.getReadOnly();
        java.math.BigDecimal bigDecimal70 = schema68.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema68.maxItems((java.lang.Integer) 100);
        java.lang.Integer int73 = schema68.getMinItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema68.getProperties();
        io.swagger.oas.models.media.Schema schema75 = schema30.properties(strMap74);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test04710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04710");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        schema26.set$ref("");
        java.lang.Integer int31 = schema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = schema26.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator34 = schema26.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test04711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04711");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        schema4.setMaxItems((java.lang.Integer) 100);
        java.lang.Integer int19 = schema4.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setName("hi!");
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema23.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = schema33.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema33.properties(strMap40);
        java.util.Optional<java.lang.Object> objOptional42 = java.util.Optional.ofNullable((java.lang.Object) schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = schema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = schema41.description("");
        io.swagger.oas.models.media.Schema schema47 = schema45.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        boolean boolean48 = schema22.equals((java.lang.Object) schema45);
        java.math.BigDecimal bigDecimal49 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema schema51 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(objOptional42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04712");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        schema16.setReadOnly((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema23.setFormat("hi!");
        schema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setDeprecated((java.lang.Boolean) false);
        strComparableSchema23.setMinItems((java.lang.Integer) 0);
        strComparableSchema23.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test04713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04713");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema2.minimum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setName("hi!");
        strComparableSchema2.setNot((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema5.name("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("");
        java.lang.String[] strArray16 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        schema14.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.minimum(bigDecimal23);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional32 = io.swagger.jaxrs2.OperationParser.getTags(strArray31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema33.format("");
        boolean boolean48 = tagSetOptional32.equals((java.lang.Object) schema47);
        java.lang.String[] strArray49 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional50 = io.swagger.jaxrs2.OperationParser.getTags(strArray49);
        io.swagger.oas.models.tags.Tag[] tagArray51 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet52 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet52, tagArray51);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet54 = tagSetOptional50.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional32.orElse(tagSet54);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional32.get();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional61 = io.swagger.jaxrs2.OperationParser.getTags(strArray60);
        java.lang.String str62 = tagSetOptional61.toString();
        java.lang.String str63 = tagSetOptional61.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet64 = tagSetOptional61.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet65 = tagSetOptional61.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet66 = tagSetOptional32.orElse(tagSet65);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional74 = io.swagger.jaxrs2.OperationParser.getTags(strArray73);
        java.lang.String[] strArray75 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional76 = io.swagger.jaxrs2.OperationParser.getTags(strArray75);
        io.swagger.oas.models.tags.Tag[] tagArray77 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet78 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet78, tagArray77);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet80 = tagSetOptional76.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet81 = tagSetOptional74.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet82 = tagSetOptional32.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        io.swagger.oas.models.media.Schema schema83 = schema14.example((java.lang.Object) tagSet82);
        boolean boolean84 = tagSetOptional1.equals((java.lang.Object) schema14);
        boolean boolean85 = tagSetOptional1.isPresent();
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(tagSetOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(tagSetOptional50);
        org.junit.Assert.assertNotNull(tagArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(tagSet54);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(tagSetOptional61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str62, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str63, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet64);
        org.junit.Assert.assertNotNull(tagSet65);
        org.junit.Assert.assertNotNull(tagSet66);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(tagSetOptional74);
        org.junit.Assert.assertNotNull(tagSetOptional76);
        org.junit.Assert.assertNotNull(tagArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(tagSet80);
        org.junit.Assert.assertNotNull(tagSet81);
        org.junit.Assert.assertNotNull(tagSet82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test04714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04714");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str5 = tagSetOptional4.toString();
        java.lang.String str6 = tagSetOptional4.toString();
        boolean boolean7 = tagSetOptional4.isPresent();
        boolean boolean8 = tagSetOptional4.isPresent();
        java.lang.String[] strArray9 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        java.lang.String str11 = tagSetOptional10.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema20.format("");
        boolean boolean35 = tagSetOptional19.equals((java.lang.Object) schema34);
        java.lang.String str36 = tagSetOptional19.toString();
        boolean boolean37 = tagSetOptional19.isPresent();
        java.lang.String[] strArray41 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        java.lang.String str43 = tagSetOptional42.toString();
        java.lang.String str44 = tagSetOptional42.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet46 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet47 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet48 = tagSetOptional19.orElse(tagSet47);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional10.orElse(tagSet48);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional4.orElse(tagSet49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.minimum(bigDecimal61);
        boolean boolean63 = schema55.equals((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema schema65 = schema55.type("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema78.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema78.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema82 = schema76.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema76.properties(strMap83);
        java.util.Optional<java.lang.Object> objOptional85 = java.util.Optional.ofNullable((java.lang.Object) schema84);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema84.getExtensions();
        schema84.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema55.setNot(schema84);
        boolean boolean90 = tagSetOptional4.equals((java.lang.Object) schema84);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str5, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str6, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(tagSetOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str36, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str43, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str44, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNotNull(tagSet46);
        org.junit.Assert.assertNotNull(tagSet47);
        org.junit.Assert.assertNotNull(tagSet48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(objOptional85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04715");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.lang.String str10 = strComparableSchema0.toString();
        java.lang.Comparable<java.lang.String> strComparable11 = strComparableSchema0.getDefault();
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        java.lang.String str14 = tagSetOptional13.toString();
        java.lang.String[] strArray15 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.lang.String str17 = tagSetOptional16.toString();
        boolean boolean18 = tagSetOptional13.equals((java.lang.Object) str17);
        java.lang.String str19 = tagSetOptional13.toString();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.example((java.lang.Object) str19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.discriminator(discriminator24);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(strComparable11);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Optional.empty" + "'", str17, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Optional.empty" + "'", str19, "Optional.empty");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04716");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema schema8 = schema6.type("default");
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        java.util.Optional<java.lang.Object> objOptional15 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema10.maxItems((java.lang.Integer) 10);
        java.lang.String str18 = strComparableSchema10.getType();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema10.setMultipleOf(bigDecimal19);
        java.lang.Integer int21 = strComparableSchema10.getMinItems();
        schema6.setDefault((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema23.$ref("hi!");
        io.swagger.oas.models.media.Schema schema31 = schema29.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema33 = schema31.addRequiredItem("default");
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema31.discriminator(discriminator35);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList39 = schema36.getRequired();
        schema6.setDefault((java.lang.Object) schema36);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(objOptional15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test04717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04717");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.getNot();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema6);
    }

    @Test
    public void test04718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04718");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema18.setMinProperties((java.lang.Integer) (-1));
        schema18.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema26.setName("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema26.discriminator(discriminator32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema51.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = schema56.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        schema58.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList60);
        schema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList60);
        schema33.addExtension("default", (java.lang.Object) strComparableList60);
        io.swagger.oas.models.media.Schema schema66 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema33.getExtensions();
        schema18.setExtensions(strMap67);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema18.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema18.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test04719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04719");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        io.swagger.oas.models.media.Schema schema12 = schema9.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema17 = schema12.minLength((java.lang.Integer) 0);
        schema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.pattern("");
        strComparableSchema20.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        strComparableSchema20.setDiscriminator(discriminator27);
        java.lang.Integer int29 = strComparableSchema20.getMinItems();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.writeOnly((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 100);
        schema31.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema36.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema46.setMinLength((java.lang.Integer) 0);
        strComparableSchema36.setExample((java.lang.Object) strComparableSchema46);
        strComparableSchema36.setName("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setName("hi!");
        strComparableSchema53.setNot((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema53.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema53.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal64 = null;
        strComparableSchema53.setMultipleOf(bigDecimal64);
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema53.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema53.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema31.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        schema12.setDefault((java.lang.Object) schema31);
        java.math.BigDecimal bigDecimal73 = null;
        schema31.setMultipleOf(bigDecimal73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test04720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04720");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        schema29.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.minimum(bigDecimal33);
        java.lang.Integer int35 = schema29.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = schema29.minProperties((java.lang.Integer) 100);
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04721");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        java.math.BigDecimal bigDecimal18 = null;
        schema12.setMaximum(bigDecimal18);
        schema12.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str24 = schema12.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04722");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.minimum(bigDecimal21);
        boolean boolean23 = schema15.equals((java.lang.Object) bigDecimal21);
        io.swagger.oas.models.media.Schema schema25 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema26 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema15.setExample((java.lang.Object) tagSetOptionalSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema37 = schema15.not(schema36);
        io.swagger.oas.models.media.Schema schema38 = schema8.not(schema37);
        schema8.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal43 = schema8.getMaximum();
        schema8.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = schema8.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + true + "'", boolean46, true);
    }

    @Test
    public void test04723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04723");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.lang.String str31 = schema30.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema30.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional.empty" + "'", str31, "Optional.empty");
        org.junit.Assert.assertNull(externalDocumentation32);
    }

    @Test
    public void test04724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04724");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean26 = schema25.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema25.getExtensions();
        java.lang.Boolean boolean28 = schema25.getReadOnly();
        schema25.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test04725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04725");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04726");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        java.lang.String str26 = strComparableSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema29.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema43 = schema41.type("default");
        io.swagger.oas.models.media.Schema schema44 = schema41.getAdditionalProperties();
        schema41.setExclusiveMinimum((java.lang.Boolean) true);
        schema41.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = schema41.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema28.setDefault((java.lang.Object) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema52 = schema28.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema52);
    }

    @Test
    public void test04727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04727");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.maximum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxProperties();
        schema15.setFormat("Optional[[]]");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.minimum(bigDecimal19);
        schema20.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04728");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema19 = schema6.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setName("Optional.empty");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema32.setMaximum(bigDecimal38);
        java.lang.String str40 = strComparableSchema32.getDescription();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema20.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema44 = schema6.additionalProperties(schema43);
        java.lang.Boolean boolean45 = schema44.getDeprecated();
        schema44.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test04729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04729");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        schema14.setType("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema20.format("");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema36.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.XML xML46 = null;
        schema36.setXml(xML46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema48.format("");
        java.lang.Boolean boolean63 = schema62.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema62.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema36.additionalProperties(schema62);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema36.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema schema69 = schema36.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema70 = schema14.not(schema36);
        schema70.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test04730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04730");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        java.lang.Object obj29 = schema26.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test04731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04731");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04732");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean30 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean32 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema14.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList27);
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        java.lang.Boolean boolean39 = schema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = null;
        schema36.setNot(schema40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test04733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04733");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04734");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("default");
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.xml(xML31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.externalDocs(externalDocumentation33);
        schema32.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04735");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        java.lang.Boolean boolean19 = schema16.getWriteOnly();
        java.util.List<java.lang.String> strList20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema16.required(strList20);
        io.swagger.oas.models.media.Schema schema23 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.name("Optional.empty");
        java.lang.String str33 = strComparableSchema27.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema27.properties(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema39.setName("hi!");
        strComparableSchema39.setName("Optional.empty");
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema39.setMaximum(bigDecimal45);
        java.lang.String str47 = strComparableSchema39.getDescription();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema39.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema35.example((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.XML xML51 = null;
        schema35.setXml(xML51);
        schema16.setDefault((java.lang.Object) schema35);
        java.lang.String str54 = schema35.get$ref();
        java.lang.Class<?> wildcardClass55 = schema35.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test04736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04736");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema4.xml(xML16);
        java.lang.Integer int18 = schema17.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test04737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04737");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema8.discriminator(discriminator15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04738");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test04739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04739");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema18 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.description("default");
        java.lang.Object obj21 = schema20.getExample();
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str24 = schema20.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04740");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(charSequenceOptional0);
    }

    @Test
    public void test04741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04741");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int14 = strComparableSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.type("hi!");
        java.lang.Class<?> wildcardClass17 = schema16.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional18 = java.util.Optional.of(wildcardClass17);
        schema10.setDefault((java.lang.Object) wildcardClass17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema10.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema21.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema31.name("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.pattern("");
        java.lang.String[] strArray42 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema40.required((java.util.List<java.lang.String>) strList43);
        schema40.setTitle("default");
        java.util.List<java.lang.String> strList48 = schema40.getRequired();
        strComparableSchema21.setRequired(strList48);
        io.swagger.oas.models.media.Schema schema50 = schema10.required(strList48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList56 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList56);
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema52.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean63 = strComparableSchema52.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema64 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.Comparable<java.lang.String> strComparable65 = strComparableSchema52.getDefault();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClassOptional18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strComparable65);
    }

    @Test
    public void test04742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04742");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        schema10.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML14 = schema10.getXml();
        schema10.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test04743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04743");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema22 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj23 = schema12.getExample();
        schema12.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int28 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test04744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04744");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj18 = null;
        boolean boolean19 = schema17.equals(obj18);
        java.lang.Integer int20 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema22 = schema17.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema22.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04745");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema4.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int12 = schema4.getMaxProperties();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema4.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema4.maxProperties((java.lang.Integer) 100);
        java.lang.String str17 = schema4.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test04746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04746");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test04747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04747");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        schema24.setType("");
        io.swagger.oas.models.media.XML xML29 = schema24.getXml();
        java.lang.Integer int30 = schema24.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(xML29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test04748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04748");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        strComparableSchema3.setName("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04749");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema69.maxLength((java.lang.Integer) 10);
        schema69.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema75 = schema69.minLength((java.lang.Integer) 1);
        java.lang.String str76 = schema75.getType();
        java.lang.String str77 = schema75.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test04750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04750");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        java.lang.String str21 = schema16.get$ref();
        java.lang.Boolean boolean22 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema16.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        java.lang.Integer int26 = schema24.getMinLength();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        io.swagger.oas.models.media.XML xML29 = schema24.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(xML29);
    }

    @Test
    public void test04751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04751");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.set$ref("default");
        io.swagger.oas.models.media.Schema schema21 = schema12.deprecated((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getName();
        java.util.List<java.lang.String> strList23 = schema21.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test04752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04752");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema20.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        java.lang.Integer int30 = strComparableSchema27.getMinLength();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.readOnly((java.lang.Boolean) true);
        strComparableSchema27.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema20.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        java.lang.Integer int39 = strComparableSchema36.getMinLength();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.readOnly((java.lang.Boolean) true);
        strComparableSchema36.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema35.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema46 = schema35.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test04753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04753");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int14 = strComparableSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.type("hi!");
        java.lang.Class<?> wildcardClass17 = schema16.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional18 = java.util.Optional.of(wildcardClass17);
        schema10.setDefault((java.lang.Object) wildcardClass17);
        io.swagger.oas.models.media.Schema schema21 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Comparable<java.lang.String> strComparable22 = null;
        schema10.addEnumItemObject(strComparable22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClassOptional18);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04754");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = schema4.getExtensions();
        java.lang.Boolean boolean6 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema8 = schema4.readOnly((java.lang.Boolean) false);
        schema4.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setName("hi!");
        strComparableSchema23.setName("Optional.empty");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema23.setMaximum(bigDecimal29);
        java.lang.String str31 = strComparableSchema23.getDescription();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema11.additionalProperties(schema33);
        schema33.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList37 = schema33.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema33.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.Boolean boolean47 = strComparableSchema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema43.format("");
        java.lang.String str50 = schema49.getName();
        schema49.setExclusiveMaximum((java.lang.Boolean) true);
        boolean boolean53 = schema33.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema54 = schema4.not(schema33);
        io.swagger.oas.models.media.Schema schema56 = schema54.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema56.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test04755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04755");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        java.lang.Integer int8 = schema4.getMaxItems();
        java.lang.Object obj9 = null;
        schema4.setDefault(obj9);
        java.lang.String[] strArray15 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet17 = tagSetOptional16.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setName("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.name("Optional.empty");
        schema26.setName("Optional.empty");
        java.lang.String str29 = schema26.get$ref();
        boolean boolean30 = tagSetOptional16.equals((java.lang.Object) str29);
        schema4.addExtension("", (java.lang.Object) tagSetOptional16);
        java.lang.String str32 = tagSetOptional16.toString();
        java.lang.String[] strArray39 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        java.lang.String[] strArray41 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        io.swagger.oas.models.tags.Tag[] tagArray43 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet44 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet44, tagArray43);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet46 = tagSetOptional42.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet47 = tagSetOptional40.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional48 = java.util.Optional.of((java.util.HashSet<io.swagger.oas.models.tags.Tag>) tagSet44);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet44);
        boolean boolean51 = tagSetOptional16.equals((java.lang.Object) 1L);
        java.lang.String str52 = tagSetOptional16.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSet17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str32, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertNotNull(tagArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(tagSet46);
        org.junit.Assert.assertNotNull(tagSet47);
        org.junit.Assert.assertNotNull(tagSetOptional48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str52, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04756");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema16.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema16.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema26.setDiscriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04757");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema9.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema13.getUniqueItems();
        java.lang.String str15 = schema13.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test04758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04758");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        schema18.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema18.description("#/components/schemas/");
        schema24.setMaxLength((java.lang.Integer) 0);
        schema24.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04759");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.String str7 = strComparableSchema0.getTitle();
        strComparableSchema0.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format("hi!");
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema11.setDiscriminator(discriminator13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test04760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04760");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList26 = schema22.getRequired();
        java.math.BigDecimal bigDecimal27 = null;
        schema22.setMultipleOf(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.maximum(bigDecimal29);
        java.lang.Boolean boolean31 = schema30.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test04761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04761");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        schema14.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04762");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        schema22.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.pattern("");
        io.swagger.oas.models.media.Schema schema38 = schema32.not(schema37);
        java.lang.Boolean boolean39 = schema37.getUniqueItems();
        schema37.setUniqueItems((java.lang.Boolean) true);
        schema22.addExtension("", (java.lang.Object) schema37);
        schema22.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = strComparableSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = schema22.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        schema16.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) strComparableSchema46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = strComparableSchema46.getProperties();
        java.lang.Integer int57 = strComparableSchema46.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema46.exclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test04763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04763");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.xml(xML11);
        java.lang.String str13 = strComparableSchema3.getName();
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.not(schema14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.format("#/components/schemas/");
        strComparableSchema3.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04764");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        schema8.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Boolean boolean11 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema schema13 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test04765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04765");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04766");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        java.lang.String str22 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema24 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        schema8.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        schema27.set$ref("default");
        io.swagger.oas.models.media.XML xML30 = schema27.getXml();
        java.math.BigDecimal bigDecimal31 = schema27.getMaximum();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.minimum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04767");
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(annotatedElementOptional0);
    }

    @Test
    public void test04768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04768");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        java.lang.String str22 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema24 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        schema8.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMinimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.multipleOf(bigDecimal30);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04769");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = schema6.getMinimum();
        java.lang.String str14 = schema6.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test04770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04770");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int32 = strComparableSchema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.type("hi!");
        schema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int37 = schema34.getMaxProperties();
        schema34.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.discriminator(discriminator40);
        java.lang.Integer int42 = schema34.getMaxItems();
        schema28.setAdditionalProperties(schema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema28.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema28.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04771");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema6.title("#/components/schemas/");
        java.lang.String str13 = schema12.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema12.$ref("#/components/schemas/");
        java.lang.Integer int16 = schema15.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test04772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04772");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        schema8.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test04773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04773");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = strComparableSchema18.getMaxLength();
        java.lang.Comparable<java.lang.String> strComparable31 = strComparableSchema18.getDefault();
        java.lang.String str32 = strComparableSchema18.getTitle();
        java.lang.Object obj33 = strComparableSchema18.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strComparableSchema34.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strComparableSchema34.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str45 = schema44.getType();
        strComparableSchema18.setNot(schema44);
        strComparableSchema18.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.getAdditionalProperties();
        strComparableSchema49.setDeprecated((java.lang.Boolean) false);
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.addRequiredItem("");
        java.lang.String str59 = strComparableSchema49.toString();
        java.lang.Comparable<java.lang.String> strComparable60 = strComparableSchema49.getDefault();
        java.lang.String[] strArray61 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional62 = io.swagger.jaxrs2.OperationParser.getTags(strArray61);
        java.lang.String str63 = tagSetOptional62.toString();
        java.lang.String[] strArray64 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        java.lang.String str66 = tagSetOptional65.toString();
        boolean boolean67 = tagSetOptional62.equals((java.lang.Object) str66);
        java.lang.String str68 = tagSetOptional62.toString();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema49.example((java.lang.Object) str68);
        io.swagger.oas.models.media.Schema schema71 = schema69.description("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.discriminator(discriminator72);
        strComparableSchema18.setExample((java.lang.Object) schema73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema76.$ref("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(strComparable31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str59, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(strComparable60);
        org.junit.Assert.assertNotNull(tagSetOptional62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional.empty" + "'", str63, "Optional.empty");
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Optional.empty" + "'", str66, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Optional.empty" + "'", str68, "Optional.empty");
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test04774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04774");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional14 = java.util.Optional.ofNullable(strComparableSchema0);
        java.lang.Integer int15 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test04775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04775");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str8 = strComparableSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.lang.Boolean boolean18 = strComparableSchema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getType();
        schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema20.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.not(schema25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        strComparableSchema0.setDiscriminator(discriminator27);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.xml(xML29);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test04776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04776");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setName("hi!");
        strComparableSchema18.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML24 = null;
        strComparableSchema18.setXml(xML24);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean34 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean36 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema18.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        schema12.setDefault((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setPattern("Optional.empty");
        strComparableSchema18.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal43 = strComparableSchema18.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(bigDecimal43);
    }

    @Test
    public void test04777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04777");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setTitle("hi!");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMinimum(bigDecimal9);
        java.util.List<java.lang.String> strList11 = strComparableSchema3.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        boolean boolean35 = schema27.equals((java.lang.Object) bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema36.format("");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        java.lang.String[] strArray58 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema52.required((java.util.List<java.lang.String>) strList59);
        schema27.setRequired((java.util.List<java.lang.String>) strList59);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList59);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional64 = java.util.Optional.ofNullable(strList59);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema3.required((java.util.List<java.lang.String>) strList59);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional66 = java.util.Optional.of(strList59);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strListOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strListOptional66);
    }

    @Test
    public void test04778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04778");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        java.lang.Boolean boolean12 = schema10.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test04779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04779");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema27.setMaximum(bigDecimal33);
        java.lang.String str35 = strComparableSchema27.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema23.not(schema37);
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema10.not(schema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        schema8.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema48 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal53 = null;
        schema52.setMinimum(bigDecimal53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test04780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04780");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.String str15 = strComparableSchema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.Object obj27 = schema26.getExample();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.addRequiredItem("Optional.empty");
        strComparableSchema10.setDefault((java.lang.Object) schema26);
        strComparableSchema10.setType("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        java.lang.Object obj46 = schema45.getExample();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema45.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        strComparableSchema50.setExtensions(strMap51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema50.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema60.setMinLength((java.lang.Integer) 0);
        strComparableSchema50.setExample((java.lang.Object) strComparableSchema60);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema60.minimum(bigDecimal65);
        schema45.addExtension("", (java.lang.Object) strComparableSchema60);
        strComparableSchema10.setExample((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema10.type("");
        java.lang.Integer int73 = schema72.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test04781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04781");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema27.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList38 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema34.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.lang.Boolean boolean42 = strComparableSchema34.getWriteOnly();
        java.lang.String str43 = strComparableSchema34.getFormat();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema34.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setName("hi!");
        strComparableSchema47.setNot((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema47.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema47.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema63 = schema57.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema65 = schema57.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema57.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean68 = schema67.getReadOnly();
        java.math.BigDecimal bigDecimal69 = schema67.getMaximum();
        io.swagger.oas.models.media.Schema schema71 = schema67.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema34.addProperties("", schema71);
        io.swagger.oas.models.media.Schema schema73 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.lang.Integer int74 = schema73.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test04782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04782");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        schema5.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int8 = schema5.getMaxProperties();
        schema5.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        schema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test04783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04783");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal9 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = schema8.getExtensions();
        java.lang.Integer int11 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.maxItems((java.lang.Integer) 0);
        strComparableSchema15.setName("Optional.empty");
        java.lang.Boolean boolean23 = strComparableSchema15.getNullable();
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema15.setMaximum(bigDecimal24);
        java.lang.Integer int26 = strComparableSchema15.getMinLength();
        strComparableSchema15.setType("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setName("hi!");
        strComparableSchema51.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema51.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema51.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema51.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema51.format("");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.String[] strArray73 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = schema67.required((java.util.List<java.lang.String>) strList74);
        schema42.setRequired((java.util.List<java.lang.String>) strList74);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList74);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema80 = schema8.required((java.util.List<java.lang.String>) strList74);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test04784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04784");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setName("hi!");
        strComparableSchema5.setNot((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema5.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema5.format("");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        strComparableSchema0.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = schema21.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        java.lang.String str30 = strComparableSchema25.getFormat();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema34.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML37 = schema34.getXml();
        io.swagger.oas.models.media.Schema schema39 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema45.$ref("hi!");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema45.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema45.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema58 = schema56.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema59 = schema39.additionalProperties(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema58.exclusiveMinimum((java.lang.Boolean) true);
        schema21.setExample((java.lang.Object) schema58);
        java.math.BigDecimal bigDecimal63 = null;
        schema58.setMaximum(bigDecimal63);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(xML37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test04785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04785");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.name("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("");
        java.lang.String[] strArray25 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema23.required((java.util.List<java.lang.String>) strList26);
        java.lang.Object obj29 = schema23.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema40.setMinLength((java.lang.Integer) 0);
        strComparableSchema30.setExample((java.lang.Object) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema45 = schema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema47 = schema23.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema64 = schema58.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setName("hi!");
        strComparableSchema65.setNot((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema65.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema65.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema65.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema65.format("");
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        io.swagger.oas.models.media.Discriminator discriminator82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.discriminator(discriminator82);
        java.lang.String[] strArray86 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema83.setRequired((java.util.List<java.lang.String>) strList87);
        schema58.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema47.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema91.externalDocs(externalDocumentation92);
        io.swagger.oas.models.media.Schema schema95 = schema91.uniqueItems((java.lang.Boolean) true);
        boolean boolean96 = strComparableSchema3.equals((java.lang.Object) schema95);
        io.swagger.oas.models.media.Schema schema98 = schema95.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test04786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04786");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema11.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMinimum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test04787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04787");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        boolean boolean6 = strComparableSchema0.equals((java.lang.Object) 0);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04788");
        io.swagger.oas.models.tags.Tag[] tagArray0 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet1 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet1, tagArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet1);
        boolean boolean4 = tagSetOptional3.isPresent();
        java.lang.String[] strArray11 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        boolean boolean28 = tagSetOptional12.equals((java.lang.Object) schema27);
        java.lang.String[] strArray32 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional33.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional12.orElse(tagSet34);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional3.orElse(tagSet35);
        java.lang.String str37 = tagSetOptional3.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional3.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setMinLength((java.lang.Integer) 0);
        strComparableSchema39.setExample((java.lang.Object) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema57.name("hi!");
        io.swagger.oas.models.media.Schema schema66 = schema64.pattern("");
        schema66.setMinLength((java.lang.Integer) 10);
        strComparableSchema49.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema49.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.externalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema71.maxLength((java.lang.Integer) 10);
        schema75.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean78 = tagSetOptional3.equals((java.lang.Object) schema75);
        org.junit.Assert.assertNotNull(tagArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tagSetOptional3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional[[]]" + "'", str37, "Optional[[]]");
        org.junit.Assert.assertNotNull(tagSet38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04789");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.name("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema27.setMinLength((java.lang.Integer) 10);
        strComparableSchema10.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema32.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema32.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test04790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04790");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema10.minProperties((java.lang.Integer) 10);
        java.lang.String str13 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04791");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema17.description("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 10);
        schema19.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        schema19.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema19.discriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04792");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean32 = schema29.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal33 = schema29.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(bigDecimal33);
    }

    @Test
    public void test04793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04793");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema4.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj39 = schema38.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema38.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema49 = schema38.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema51 = schema38.name("");
        io.swagger.oas.models.media.Schema schema53 = schema51.exclusiveMaximum((java.lang.Boolean) false);
        schema4.setExample((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test04794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04794");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema15.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema15.format("");
        java.lang.Boolean boolean30 = schema29.getUniqueItems();
        java.lang.Boolean boolean31 = schema29.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema44.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema29.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test04795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04795");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setMinLength((java.lang.Integer) 0);
        strComparableSchema39.setExample((java.lang.Object) strComparableSchema49);
        java.lang.String str54 = strComparableSchema49.getTitle();
        schema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema12.not(schema56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = schema57.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap58);
    }

    @Test
    public void test04796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04796");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.title("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.pattern("");
        strComparableSchema13.setDescription("default");
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        schema29.setNullable((java.lang.Boolean) true);
        java.lang.String str32 = schema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema37.setName("hi!");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema37.discriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema46 = schema44.type("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setName("hi!");
        strComparableSchema50.setNot((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.lang.String str57 = strComparableSchema50.getTitle();
        strComparableSchema50.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema50.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        strComparableSchema62.setExtensions(strMap63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema62.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        strComparableSchema67.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema67.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema70.minimum(bigDecimal72);
        boolean boolean74 = schema66.equals((java.lang.Object) bigDecimal72);
        io.swagger.oas.models.media.Schema schema76 = schema66.type("Optional.empty");
        boolean boolean77 = schema61.equals((java.lang.Object) schema76);
        boolean boolean78 = strComparableSchema47.equals((java.lang.Object) schema76);
        io.swagger.oas.models.media.Discriminator discriminator79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.discriminator(discriminator79);
        schema80.setFormat("Optional[[]]");
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.xml(xML83);
        io.swagger.oas.models.media.Schema schema85 = schema46.example((java.lang.Object) schema84);
        io.swagger.oas.models.media.Schema schema86 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema46);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema29.setTitle("hi!");
        schema12.setNot(schema29);
        schema12.setFormat("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04797");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.lang.String str15 = schema14.get$ref();
        java.lang.Boolean boolean16 = schema14.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        schema29.setTitle("default");
        java.util.List<java.lang.String> strList37 = schema29.getRequired();
        java.lang.String str38 = schema29.getDescription();
        schema14.setExample((java.lang.Object) str38);
        java.util.List<java.lang.String> strList40 = schema14.getRequired();
        java.lang.String str41 = schema14.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test04798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04798");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema4.not(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.xml(xML38);
        io.swagger.oas.models.media.Schema schema40 = schema4.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema4.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04799");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        java.util.Optional<java.lang.Object> objOptional19 = java.util.Optional.ofNullable((java.lang.Object) schema18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = schema18.getEnum();
        java.lang.String str21 = schema18.get$ref();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = schema18.getMultipleOf();
        io.swagger.oas.models.media.Schema schema28 = schema18.readOnly((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass29 = schema18.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(objOptional19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test04800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04800");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        java.util.List<java.lang.String> strList17 = schema14.getRequired();
        java.lang.Boolean boolean18 = schema14.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal19 = null;
        schema14.setMinimum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test04801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04801");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema6.setExtensions(strMap13);
        java.lang.Boolean boolean15 = schema6.getWriteOnly();
        schema6.setMaxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema6.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04802");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj18 = null;
        boolean boolean19 = schema17.equals(obj18);
        java.lang.Integer int20 = schema17.getMinItems();
        schema17.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal23 = schema17.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test04803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04803");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.setTitle("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema33 = schema29.getNot();
        java.lang.String str34 = schema33.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04804");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String str9 = tagSetOptional8.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema10.format("");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema29 = schema26.getNot();
        java.math.BigDecimal bigDecimal30 = schema29.getMultipleOf();
        boolean boolean31 = tagSetOptional8.equals((java.lang.Object) bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        boolean boolean44 = schema36.equals((java.lang.Object) bigDecimal42);
        io.swagger.oas.models.media.Schema schema46 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema47 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema36.setExample((java.lang.Object) tagSetOptionalSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema52.setName("hi!");
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema58 = schema36.not(schema57);
        schema57.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional68 = io.swagger.jaxrs2.OperationParser.getTags(strArray67);
        io.swagger.oas.models.media.Schema schema69 = schema57.example((java.lang.Object) tagSetOptional68);
        java.lang.String str70 = schema69.getName();
        java.lang.Integer int71 = schema69.getMinLength();
        boolean boolean72 = tagSetOptional8.equals((java.lang.Object) schema69);
        schema69.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str9, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(tagSetOptional68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Optional.empty" + "'", str70, "Optional.empty");
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test04805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04805");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        io.swagger.oas.models.media.Schema schema21 = schema18.minItems((java.lang.Integer) 100);
        schema21.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04806");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema17 = schema14.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.xml(xML18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = schema14.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strComparableList20);
    }

    @Test
    public void test04807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04807");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.lang.String str10 = strComparableSchema0.toString();
        java.lang.Integer int11 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minimum(bigDecimal17);
        schema18.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        io.swagger.oas.models.media.Schema schema23 = schema18.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        schema23.setDeprecated((java.lang.Boolean) false);
        schema23.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.example((java.lang.Object) false);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test04808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04808");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema5.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = schema6.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema6);
    }

    @Test
    public void test04809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04809");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema17.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
    }

    @Test
    public void test04810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04810");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.XML xML26 = null;
        schema16.setXml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema16.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema16.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema34.format("");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.discriminator(discriminator51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        schema50.setProperties(strMap53);
        schema33.setAdditionalProperties(schema50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test04811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04811");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test04812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04812");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema10.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test04813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04813");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema10.setMinimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.maxItems((java.lang.Integer) 0);
        strComparableSchema29.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean37 = strComparableSchema29.getReadOnly();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.nullable((java.lang.Boolean) false);
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema42 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.lang.String str43 = schema10.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test04814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04814");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.String str2 = tagSetOptional1.toString();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema11.format("");
        boolean boolean26 = tagSetOptional10.equals((java.lang.Object) schema25);
        java.lang.String str27 = tagSetOptional10.toString();
        boolean boolean28 = tagSetOptional10.isPresent();
        java.lang.String[] strArray32 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        java.lang.String str34 = tagSetOptional33.toString();
        java.lang.String str35 = tagSetOptional33.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional33.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet37 = tagSetOptional33.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional33.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional10.orElse(tagSet38);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional1.orElse(tagSet39);
        java.util.Optional<java.lang.Iterable<io.swagger.oas.models.tags.Tag>> tagIterableOptional41 = java.util.Optional.ofNullable((java.lang.Iterable<io.swagger.oas.models.tags.Tag>) tagSet39);
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str27, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str34, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str35, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertNotNull(tagSet37);
        org.junit.Assert.assertNotNull(tagSet38);
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(tagIterableOptional41);
    }

    @Test
    public void test04815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04815");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional36);
    }

    @Test
    public void test04816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04816");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean30 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean32 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema14.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList27);
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema36.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test04817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04817");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        schema10.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        strComparableSchema15.setDescription("default");
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.required((java.util.List<java.lang.String>) strList25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema15.setExtensions(strMap28);
        java.lang.String str30 = strComparableSchema15.getPattern();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema15.xml(xML31);
        java.util.List<java.lang.String> strList33 = schema32.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema14.required(strList33);
        java.lang.String str35 = schema14.getDescription();
        schema14.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test04818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04818");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.discriminator(discriminator23);
        java.lang.String str25 = schema16.getFormat();
        java.lang.Boolean boolean26 = schema16.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test04819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04819");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML15 = null;
        schema11.setXml(xML15);
        java.lang.Integer int17 = schema11.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test04820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04820");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema4.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = schema19.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.pattern("");
        io.swagger.oas.models.media.Schema schema27 = schema21.not(schema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.properties(strMap30);
        io.swagger.oas.models.media.Schema schema32 = schema4.addProperties("", schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal44 = null;
        schema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema4.example((java.lang.Object) bigDecimal44);
        java.util.List<java.lang.String> strList47 = schema4.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test04821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04821");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        strComparableSchema19.setDescription("default");
        java.lang.Integer int26 = strComparableSchema19.getMaxItems();
        java.lang.Boolean boolean27 = strComparableSchema19.getWriteOnly();
        java.math.BigDecimal bigDecimal28 = strComparableSchema19.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema18.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean36 = schema35.getExclusiveMaximum();
        schema35.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test04822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04822");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.discriminator(discriminator10);
        java.lang.Object obj12 = schema11.getExample();
        schema11.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test04823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04823");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.lang.String str31 = schema30.getName();
        schema30.setType("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Class<?> wildcardClass34 = schema30.getClass();
        java.util.Optional<java.lang.reflect.Type> typeOptional35 = java.util.Optional.ofNullable((java.lang.reflect.Type) wildcardClass34);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional.empty" + "'", str31, "Optional.empty");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeOptional35);
    }

    @Test
    public void test04824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04824");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.discriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema24.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(externalDocumentation26);
    }

    @Test
    public void test04825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04825");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional7.get();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.orElse(tagSet30);
        java.util.Optional<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalOptional32 = java.util.Optional.ofNullable(tagSetOptional7);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(tagSetOptionalOptional32);
    }

    @Test
    public void test04826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04826");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        schema7.setExternalDocs(externalDocumentation9);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
    }

    @Test
    public void test04827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04827");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        schema19.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema29.not(schema34);
        java.lang.Boolean boolean36 = schema34.getUniqueItems();
        schema34.setUniqueItems((java.lang.Boolean) true);
        schema19.addExtension("", (java.lang.Object) schema34);
        boolean boolean40 = schema14.equals((java.lang.Object) schema34);
        java.math.BigDecimal bigDecimal41 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema14.maxItems((java.lang.Integer) 1);
        schema14.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test04828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04828");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema37 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional[[]]\n    description: Optional[[]]\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean42 = schema41.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema49 = schema47.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.pattern("");
        io.swagger.oas.models.media.Schema schema55 = schema49.not(schema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.multipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.pattern("");
        schema62.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        strComparableSchema66.setExtensions(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema66.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema schema72 = schema70.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.minimum(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema73.pattern("");
        io.swagger.oas.models.media.Schema schema78 = schema72.not(schema77);
        java.lang.Boolean boolean79 = schema77.getUniqueItems();
        schema77.setUniqueItems((java.lang.Boolean) true);
        schema62.addExtension("", (java.lang.Object) schema77);
        boolean boolean83 = schema57.equals((java.lang.Object) schema77);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema57.minimum(bigDecimal84);
        java.lang.Object obj86 = schema85.getExample();
        io.swagger.oas.models.media.Schema schema88 = schema85.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema89 = schema88.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML90 = schema89.getXml();
        schema41.setDefault((java.lang.Object) schema89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(xML90);
    }

    @Test
    public void test04829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04829");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        schema17.setReadOnly((java.lang.Boolean) false);
        schema17.setMaxItems((java.lang.Integer) 100);
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema17.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMaximum(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04830");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = schema17.getMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema17.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        java.lang.String str26 = strComparableSchema21.getFormat();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray29 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional30 = io.swagger.jaxrs2.OperationParser.getTags(strArray29);
        io.swagger.oas.models.tags.Tag[] tagArray31 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet32 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet32, tagArray31);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional30.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet32);
        java.lang.String str35 = tagSetOptional30.toString();
        boolean boolean37 = tagSetOptional30.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema21.example((java.lang.Object) boolean37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.minimum(bigDecimal44);
        schema45.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema48 = schema45.getNot();
        io.swagger.oas.models.media.Schema schema50 = schema45.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema21.not(schema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.maxItems((java.lang.Integer) 0);
        strComparableSchema55.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        schema67.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema67.name("Optional.empty");
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        schema71.setRequired((java.util.List<java.lang.String>) strList74);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema84 = schema82.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema85 = schema17.not(schema84);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(tagSetOptional30);
        org.junit.Assert.assertNotNull(tagArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional.empty" + "'", str35, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test04831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04831");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = schema23.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema25.not(schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema31.getProperties();
        java.math.BigDecimal bigDecimal33 = schema31.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema31.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema37 = schema31.readOnly((java.lang.Boolean) false);
        schema10.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema37.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = schema37.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test04832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04832");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.String str25 = strComparableSchema12.get$ref();
        java.lang.Boolean boolean26 = strComparableSchema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str29 = schema28.getFormat();
        io.swagger.oas.models.media.Schema schema31 = schema28.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str32 = schema31.getPattern();
        java.lang.Boolean boolean33 = schema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = schema31.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str32, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04833");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        io.swagger.oas.models.media.XML xML29 = null;
        schema28.setXml(xML29);
        schema28.setWriteOnly((java.lang.Boolean) true);
        schema28.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04834");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setName("hi!");
        strComparableSchema6.setNot((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema6.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema16.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema18.setMaximum(bigDecimal23);
        java.util.List<java.lang.String> strList25 = strComparableSchema18.getRequired();
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        strComparableSchema18.set$ref("");
        java.lang.Boolean boolean34 = strComparableSchema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema3.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        java.lang.Integer int38 = schema35.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test04835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04835");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "Optional[[]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        io.swagger.oas.models.tags.Tag[] tagArray7 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet8 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet8, tagArray7);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet8);
        java.util.Optional<java.util.AbstractCollection<io.swagger.oas.models.tags.Tag>> tagCollectionOptional11 = java.util.Optional.ofNullable((java.util.AbstractCollection<io.swagger.oas.models.tags.Tag>) tagSet8);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet12 = tagSetOptional6.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet8);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(tagSetOptional3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagCollectionOptional11);
        org.junit.Assert.assertNotNull(tagSet12);
    }

    @Test
    public void test04836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04836");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = schema12.getMultipleOf();
        java.lang.Integer int14 = schema12.getMinLength();
        io.swagger.oas.models.media.Schema schema16 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        schema16.setType("class Schema {\n    title: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04837");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        java.lang.Integer int13 = schema10.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test04838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04838");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.multipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.format("");
        java.lang.String str23 = schema22.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test04839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04839");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        schema33.setPattern("");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.maximum(bigDecimal38);
        io.swagger.oas.models.media.XML xML40 = schema39.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(xML40);
    }

    @Test
    public void test04840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04840");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.pattern("");
        io.swagger.oas.models.media.Schema schema40 = schema34.not(schema39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        java.math.BigDecimal bigDecimal42 = schema40.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema40.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema12.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.pattern("");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        java.lang.String str56 = schema54.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setName("hi!");
        strComparableSchema57.setNot((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema57.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema57.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema57.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str70 = schema69.getType();
        io.swagger.oas.models.media.Schema schema71 = schema54.additionalProperties(schema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = null;
        strComparableSchema73.setExtensions(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema73.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema76);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema76.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema83 = schema81.maxLength((java.lang.Integer) 100);
        schema83.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema54.addProperties("", schema83);
        io.swagger.oas.models.media.Schema schema87 = schema47.not(schema54);
        io.swagger.oas.models.media.Discriminator discriminator88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema87.discriminator(discriminator88);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema87.multipleOf(bigDecimal90);
        schema87.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test04841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04841");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        schema55.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema22.setNot(schema55);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema22.discriminator(discriminator59);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test04842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04842");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Boolean boolean17 = schema15.getExclusiveMinimum();
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = schema15.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(discriminator20);
    }

    @Test
    public void test04843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04843");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str10 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.XML xML11 = strComparableSchema0.getXml();
        java.lang.Integer int12 = strComparableSchema0.getMinProperties();
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test04844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04844");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.minimum(bigDecimal27);
        boolean boolean29 = schema21.equals((java.lang.Object) bigDecimal27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema21.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        io.swagger.oas.models.media.Schema schema44 = schema38.not(schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.multipleOf(bigDecimal45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.properties(strMap47);
        io.swagger.oas.models.media.Schema schema49 = schema21.addProperties("", schema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        strComparableSchema50.setExtensions(strMap51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema58.minimum(bigDecimal60);
        boolean boolean62 = schema54.equals((java.lang.Object) bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setName("hi!");
        strComparableSchema63.setNot((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema63.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema63.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema63.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema63.format("");
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.multipleOf(bigDecimal78);
        java.lang.String[] strArray85 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        io.swagger.oas.models.media.Schema schema88 = schema79.required((java.util.List<java.lang.String>) strList86);
        schema54.setRequired((java.util.List<java.lang.String>) strList86);
        schema21.setRequired((java.util.List<java.lang.String>) strList86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema92 = schema14.properties(strMap91);
        io.swagger.oas.models.media.Schema schema94 = schema92.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema96 = schema94.uniqueItems((java.lang.Boolean) true);
        java.lang.String str97 = schema94.getPattern();
        io.swagger.oas.models.media.Schema schema99 = schema94.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04845");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.lang.Integer int9 = strComparableSchema3.getMaxLength();
        java.lang.String str10 = strComparableSchema3.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.discriminator(discriminator11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.lang.String str15 = schema12.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test04846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04846");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setName("hi!");
        strComparableSchema5.setNot((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema5.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema5.format("");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        strComparableSchema0.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.nullable((java.lang.Boolean) true);
        schema24.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04847");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04848");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        strComparableSchema10.setDescription("default");
        java.lang.Integer int17 = strComparableSchema10.getMaxItems();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.Boolean boolean27 = strComparableSchema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema23.format("");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema23.exclusiveMaximum((java.lang.Boolean) false);
        schema31.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.example((java.lang.Object) schema31);
        strComparableSchema0.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMaximum(bigDecimal38);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04849");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int30 = strComparableSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.type("hi!");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema18.additionalProperties(schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = schema43.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        io.swagger.oas.models.media.Schema schema51 = schema45.not(schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema45.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema45.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema56.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema56.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema56.format("");
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        java.lang.String[] strArray78 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema72.required((java.util.List<java.lang.String>) strList79);
        schema55.setRequired((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema55.externalDocs(externalDocumentation83);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema55.multipleOf(bigDecimal85);
        schema86.setNullable((java.lang.Boolean) false);
        boolean boolean89 = schema36.equals((java.lang.Object) schema86);
        io.swagger.oas.models.media.Schema schema90 = schema17.not(schema86);
        io.swagger.oas.models.media.Schema schema92 = schema90.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema90.discriminator(discriminator93);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test04850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04850");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema13 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema10.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test04851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04851");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean30 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean32 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema14.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList27);
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema36.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04852");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean26 = strComparableSchema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema22.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema29.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str36 = strComparableSchema29.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema37.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = strComparableSchema37.getEnum();
        strComparableSchema29.setEnum(strComparableList41);
        schema28.setEnum(strComparableList41);
        schema18.setEnum(strComparableList41);
        schema18.setDescription("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema48 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean49 = schema18.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test04853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04853");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.lang.Boolean boolean34 = schema33.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = schema33.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj37 = schema36.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test04854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04854");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        schema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.title("hi!");
        java.lang.String str16 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema18 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test04855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04855");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.String str7 = strComparableSchema0.getTitle();
        strComparableSchema0.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) false);
        schema13.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList18 = schema13.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strComparableList18);
    }

    @Test
    public void test04856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04856");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema16.uniqueItems((java.lang.Boolean) true);
        schema16.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema16.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator22);
    }

    @Test
    public void test04857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04857");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        java.lang.String str39 = schema38.getName();
        io.swagger.oas.models.media.Schema schema41 = schema38.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test04858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04858");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.getAdditionalProperties();
        strComparableSchema17.setDeprecated((java.lang.Boolean) false);
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.addRequiredItem("");
        java.lang.Integer int27 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.$ref("hi!");
        java.lang.Integer int35 = strComparableSchema28.getMaxItems();
        java.lang.Integer int36 = strComparableSchema28.getMinLength();
        schema26.setDefault((java.lang.Object) int36);
        schema12.setAdditionalProperties(schema26);
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test04859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04859");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.maximum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxProperties();
        schema15.setFormat("Optional[[]]");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        schema20.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04860");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getName();
        io.swagger.oas.models.media.Schema schema23 = schema20.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema26.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema26.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema26.pattern("");
        java.lang.Integer int39 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema26.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema43 = schema41.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema41.minLength((java.lang.Integer) 1);
        boolean boolean46 = schema25.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema48 = schema25.name("Optional.empty");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04861");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        java.lang.String str20 = schema19.getDescription();
        io.swagger.oas.models.media.Schema schema21 = schema19.getNot();
        java.lang.String str22 = schema19.getName();
        java.lang.String str23 = schema19.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test04862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04862");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema17.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema17.properties(strMap24);
        java.util.Optional<java.lang.Object> objOptional26 = java.util.Optional.ofNullable((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema6.additionalProperties(schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.getAdditionalProperties();
        strComparableSchema30.setDeprecated((java.lang.Boolean) false);
        strComparableSchema30.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.String str45 = strComparableSchema38.getTitle();
        java.lang.Integer int46 = strComparableSchema38.getMinProperties();
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema30.xml(xML48);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList50 = strComparableSchema30.getEnum();
        schema25.setEnum(strComparableList50);
        io.swagger.oas.models.media.Schema schema53 = schema25.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(objOptional26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strComparableList50);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test04863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04863");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("Optional.empty", (java.lang.Object) strComparableSchema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema17.getName();
        java.lang.Boolean boolean26 = strComparableSchema17.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema17.example((java.lang.Object) strList52);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.Object obj58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema9.example(obj58);
        strComparableSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = strComparableSchema9.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test04864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04864");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = strComparableSchema12.getMinimum();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema12.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        strComparableSchema12.setDiscriminator(discriminator25);
        java.lang.String str27 = strComparableSchema12.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test04865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04865");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema4.exclusiveMaximum((java.lang.Boolean) true);
        schema16.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema16.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04866");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        strComparableSchema0.setDiscriminator(discriminator8);
        java.lang.Object obj10 = strComparableSchema0.getExample();
        java.lang.String str11 = strComparableSchema0.getPattern();
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test04867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04867");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.setTitle("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema33 = schema29.getNot();
        schema29.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04868");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        schema4.setMaxItems((java.lang.Integer) 100);
        java.lang.String str19 = schema4.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema4.externalDocs(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04869");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema10.getNot();
        io.swagger.oas.models.media.Schema schema15 = schema13.title("Optional[[]]");
        io.swagger.oas.models.media.Schema schema17 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema13.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test04870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04870");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray9 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components12);
        strComparableSchema3.setDefault((java.lang.Object) components12);
        java.lang.Boolean boolean15 = strComparableSchema3.getExclusiveMaximum();
        java.lang.Boolean boolean16 = strComparableSchema3.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(parameterArray9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(parameterListOptional13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04871");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.maxItems((java.lang.Integer) 0);
        strComparableSchema34.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        schema46.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.name("Optional.empty");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        schema50.setRequired((java.util.List<java.lang.String>) strList53);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema0.xml(xML59);
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema0.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test04872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04872");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        java.lang.Boolean boolean30 = schema10.getReadOnly();
        schema10.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test04873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04873");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema69.maxLength((java.lang.Integer) 10);
        schema69.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML74 = null;
        schema69.setXml(xML74);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test04874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04874");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.name("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema27.setMinLength((java.lang.Integer) 10);
        strComparableSchema10.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.type("hi!");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema10.setMaximum(bigDecimal33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema10.setExtensions(strMap35);
        java.math.BigDecimal bigDecimal37 = null;
        strComparableSchema10.setMultipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema40.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test04875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04875");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.String str25 = strComparableSchema12.getTitle();
        java.math.BigDecimal bigDecimal26 = strComparableSchema12.getMinimum();
        strComparableSchema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test04876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04876");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.Integer int8 = schema6.getMaxProperties();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema25 = schema23.type("default");
        io.swagger.oas.models.media.Schema schema26 = schema23.getAdditionalProperties();
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema29.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema23.example((java.lang.Object) strComparableSchema29);
        strComparableSchema29.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = strComparableSchema29.getMaxLength();
        java.lang.Boolean boolean42 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema51 = schema49.name("");
        schema49.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML54 = schema49.getXml();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema49.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema60.setName("hi!");
        strComparableSchema60.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML66 = null;
        strComparableSchema60.setXml(xML66);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList73 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean76 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean77 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean78 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema60.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList73);
        java.lang.Integer int80 = strComparableSchema60.getMaxItems();
        java.lang.String[] strArray84 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        strComparableSchema60.setRequired((java.util.List<java.lang.String>) strList85);
        schema56.setRequired((java.util.List<java.lang.String>) strList85);
        schema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema29.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema93 = schema91.maxItems((java.lang.Integer) 10);
        schema6.setNot(schema93);
        io.swagger.oas.models.media.XML xML95 = null;
        schema6.setXml(xML95);
        io.swagger.oas.models.media.Schema schema98 = schema6.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(xML54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test04877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04877");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema16.format("");
        boolean boolean31 = tagSetOptional15.equals((java.lang.Object) schema30);
        java.lang.String str32 = tagSetOptional15.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet33 = tagSetOptional15.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional15.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional7.orElse(tagSet34);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional7.get();
        java.lang.String str37 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str32, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet33);
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str37, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04878");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        java.lang.Object obj18 = null;
        boolean boolean19 = schema12.equals(obj18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int23 = strComparableSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        java.lang.String str31 = strComparableSchema26.getFormat();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList59 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        schema57.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema46.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        strComparableSchema26.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema25.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema12.discriminator(discriminator66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        schema12.setExternalDocs(externalDocumentation68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = null;
        strComparableSchema70.setExtensions(strMap71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema70.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema73);
        schema74.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema74.name("Optional.empty");
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema78.setRequired((java.util.List<java.lang.String>) strList81);
        java.lang.Boolean boolean84 = schema78.getDeprecated();
        java.lang.Boolean boolean85 = schema78.getWriteOnly();
        io.swagger.oas.models.media.Schema schema86 = schema12.not(schema78);
        schema12.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04879");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        java.lang.Integer int7 = schema4.getMinProperties();
        java.lang.Boolean boolean8 = schema4.getWriteOnly();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema4.multipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema4.maximum(bigDecimal11);
        java.lang.String str13 = schema12.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04880");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        schema47.setMinLength((java.lang.Integer) 10);
        schema47.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean53 = schema47.getDeprecated();
        io.swagger.oas.models.media.Schema schema55 = schema47.$ref("");
        schema55.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04881");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Optional<java.lang.Object> objOptional5 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema0);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        java.lang.String str8 = strComparableSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema0.setMultipleOf(bigDecimal9);
        java.lang.Integer int11 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema24.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema40.type("default");
        io.swagger.oas.models.media.Schema schema43 = schema24.not(schema42);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema0.additionalProperties(schema43);
        java.math.BigDecimal bigDecimal45 = strComparableSchema0.getMinimum();
        java.lang.Comparable<java.lang.String> strComparable46 = strComparableSchema0.getDefault();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(objOptional5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(strComparable46);
    }

    @Test
    public void test04882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04882");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.minimum(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = schema23.getMaximum();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.maximum(bigDecimal27);
        java.lang.String str29 = schema28.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.name("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema40.pattern("");
        java.lang.String[] strArray44 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema42.required((java.util.List<java.lang.String>) strList45);
        java.lang.Object obj48 = schema42.getExample();
        schema28.setDefault(obj48);
        io.swagger.oas.annotations.media.Content[] contentArray50 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContent(contentArray50, produces53, produces54, components55);
        io.swagger.oas.models.media.Schema schema57 = schema28.example((java.lang.Object) components55);
        io.swagger.oas.models.media.Schema schema58 = schema9.addProperties("default", schema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setName("hi!");
        strComparableSchema59.setNot((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema59.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema59.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema59.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema59.format("");
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.multipleOf(bigDecimal74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        schema73.setExtensions(strMap76);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.additionalProperties(schema78);
        java.lang.Integer int80 = schema73.getMinItems();
        io.swagger.oas.models.media.Schema schema82 = schema73.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema82.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema28.not(schema84);
        java.lang.Class<?> wildcardClass86 = schema28.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(contentArray50);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test04883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04883");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj18 = schema17.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema17.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema28 = schema17.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        schema28.setPattern("default");
        java.lang.Object obj31 = schema28.getExample();
        boolean boolean32 = schema10.equals((java.lang.Object) schema28);
        java.lang.String str33 = schema28.getName();
        java.lang.String[] strArray37 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional38 = io.swagger.jaxrs2.OperationParser.getTags(strArray37);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional39 = io.swagger.jaxrs2.OperationParser.getTags(strArray37);
        java.lang.String str40 = tagSetOptional39.toString();
        java.lang.String str41 = tagSetOptional39.toString();
        schema28.setDefault((java.lang.Object) str41);
        java.lang.Object obj43 = schema28.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(tagSetOptional38);
        org.junit.Assert.assertNotNull(tagSetOptional39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str40, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str41, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test04884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04884");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema16.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04885");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema69.maxLength((java.lang.Integer) 10);
        schema69.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema75 = schema69.minLength((java.lang.Integer) 1);
        java.lang.String str76 = schema75.getType();
        schema75.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test04886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04886");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema27.minimum(bigDecimal29);
        boolean boolean31 = schema23.equals((java.lang.Object) bigDecimal29);
        io.swagger.oas.models.media.Schema schema33 = schema23.type("Optional.empty");
        schema23.setUniqueItems((java.lang.Boolean) true);
        schema23.setMaxLength((java.lang.Integer) 0);
        schema11.setAdditionalProperties(schema23);
        java.lang.String str39 = schema23.getPattern();
        java.lang.String str40 = schema23.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Optional.empty" + "'", str40, "Optional.empty");
    }

    @Test
    public void test04887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04887");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04888");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        schema11.setExtensions(strMap16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema11.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMinimum((java.lang.Boolean) false);
        schema21.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema21.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04889");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema10.getNot();
        io.swagger.oas.models.media.Schema schema15 = schema13.title("Optional[[]]");
        io.swagger.oas.models.media.Schema schema17 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj18 = schema13.getExample();
        schema13.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test04890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04890");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test04891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04891");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("default");
        schema9.setType("hi!");
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema9.getNullable();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test04892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04892");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        java.lang.String str7 = schema6.getType();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema6.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int24 = strComparableSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.type("hi!");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.additionalProperties(schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema26.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.discriminator(discriminator31);
        schema30.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema30.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema38 = schema30.description("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema6.additionalProperties(schema40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema40.setExternalDocs(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04893");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        schema29.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema36.format("");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.discriminator(discriminator53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        schema52.setProperties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema52.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema60 = schema58.$ref("Optional.empty");
        java.util.List<java.lang.String> strList61 = schema58.getRequired();
        io.swagger.oas.models.media.Schema schema62 = schema33.not(schema58);
        java.lang.Object obj63 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema65 = schema33.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test04894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04894");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        schema14.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema14.getAdditionalProperties();
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        java.lang.Integer int19 = schema14.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test04895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04895");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema16.setName("hi!");
        strComparableSchema16.setTitle("hi!");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.maximum(bigDecimal22);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = strComparableSchema16.getEnum();
        boolean boolean25 = schema12.equals((java.lang.Object) strComparableSchema16);
        schema12.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strComparableList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04896");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema37 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList38 = schema37.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema45.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema56.setName("hi!");
        strComparableSchema56.setName("Optional.empty");
        java.math.BigDecimal bigDecimal62 = null;
        strComparableSchema56.setMaximum(bigDecimal62);
        java.lang.String str64 = strComparableSchema56.getDescription();
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.maximum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema67 = schema52.not(schema66);
        schema67.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema67.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema39.not(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema72.name("#/components/schemas/");
        boolean boolean75 = schema37.equals((java.lang.Object) schema74);
        io.swagger.oas.models.media.Schema schema77 = schema74.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int78 = schema74.getMaxItems();
        io.swagger.oas.models.media.Schema schema80 = schema74.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema74.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Integer int83 = schema82.getMinLength();
        java.lang.Boolean boolean84 = schema82.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNull(boolean84);
    }

    @Test
    public void test04897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04897");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.minItems((java.lang.Integer) 1);
        java.lang.Comparable<java.lang.String> strComparable28 = strComparableSchema12.getDefault();
        strComparableSchema12.setPattern("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparable28);
    }

    @Test
    public void test04898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04898");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        schema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04899");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.nullable((java.lang.Boolean) false);
        strComparableSchema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal16 = strComparableSchema3.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML19 = null;
        strComparableSchema3.setXml(xML19);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04900");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema24 = schema22.type("default");
        io.swagger.oas.models.media.Schema schema25 = schema22.getAdditionalProperties();
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList40 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        schema38.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList40);
        io.swagger.oas.models.media.Schema schema43 = schema22.additionalProperties(schema38);
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int50 = strComparableSchema47.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.type("hi!");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema47.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str55 = strComparableSchema47.getName();
        java.lang.Boolean boolean56 = strComparableSchema47.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema67 = schema65.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList69 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        schema67.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.minimum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema72.pattern("");
        strComparableSchema72.setDescription("default");
        java.lang.String[] strArray81 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema72.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema85 = schema67.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema47.example((java.lang.Object) strList82);
        io.swagger.oas.models.media.XML xML87 = strComparableSchema47.getXml();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList88 = strComparableSchema47.getEnum();
        schema45.setEnum(strComparableList88);
        schema9.setEnum(strComparableList88);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(xML87);
        org.junit.Assert.assertNotNull(strComparableList88);
    }

    @Test
    public void test04901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04901");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Optional<java.lang.Object> objOptional5 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema0);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.name("default");
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(objOptional5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test04902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04902");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        schema5.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int8 = schema5.getMaxProperties();
        schema5.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04903");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        schema64.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema schema71 = schema64.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema71.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test04904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04904");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema27.setMaximum(bigDecimal33);
        java.lang.String str35 = strComparableSchema27.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema23.not(schema37);
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema10.not(schema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        schema8.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema48 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int51 = schema50.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test04905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04905");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 1);
        java.lang.String str18 = schema4.getName();
        schema4.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema4.nullable((java.lang.Boolean) true);
        java.lang.Integer int23 = schema4.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test04906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04906");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema schema40 = schema35.maxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean41 = schema40.getNullable();
        java.lang.Boolean boolean42 = schema40.getUniqueItems();
        java.lang.String str43 = schema40.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test04907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04907");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String str9 = tagSetOptional8.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema10.format("");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema29 = schema26.getNot();
        java.math.BigDecimal bigDecimal30 = schema29.getMultipleOf();
        boolean boolean31 = tagSetOptional8.equals((java.lang.Object) bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        boolean boolean44 = schema36.equals((java.lang.Object) bigDecimal42);
        io.swagger.oas.models.media.Schema schema46 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema47 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema36.setExample((java.lang.Object) tagSetOptionalSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema52.setName("hi!");
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema58 = schema36.not(schema57);
        schema57.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional68 = io.swagger.jaxrs2.OperationParser.getTags(strArray67);
        io.swagger.oas.models.media.Schema schema69 = schema57.example((java.lang.Object) tagSetOptional68);
        java.lang.String str70 = schema69.getName();
        java.lang.Integer int71 = schema69.getMinLength();
        boolean boolean72 = tagSetOptional8.equals((java.lang.Object) schema69);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet73 = tagSetOptional8.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet74 = tagSetOptional8.get();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str9, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(tagSetOptional68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Optional.empty" + "'", str70, "Optional.empty");
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(tagSet73);
        org.junit.Assert.assertNotNull(tagSet74);
    }

    @Test
    public void test04908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04908");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        java.lang.String str26 = strComparableSchema20.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setName("Optional.empty");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema32.setMaximum(bigDecimal38);
        java.lang.String str40 = strComparableSchema32.getDescription();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = schema28.example((java.lang.Object) strComparableSchema32);
        java.lang.String str44 = schema28.get$ref();
        java.lang.String str45 = schema28.getType();
        schema28.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.pattern("");
        io.swagger.oas.models.media.Schema schema60 = schema54.not(schema59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        java.math.BigDecimal bigDecimal62 = schema60.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema60.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setName("hi!");
        strComparableSchema67.setNot((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean74 = strComparableSchema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema70.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.pattern("");
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema77.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str84 = strComparableSchema77.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema85.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList89 = strComparableSchema85.getEnum();
        strComparableSchema77.setEnum(strComparableList89);
        schema76.setEnum(strComparableList89);
        schema66.setEnum(strComparableList89);
        schema28.setEnum(strComparableList89);
        schema28.setUniqueItems((java.lang.Boolean) true);
        schema16.setNot(schema28);
        io.swagger.oas.models.media.Schema schema98 = schema28.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(strComparableList89);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test04909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04909");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.String str2 = tagSetOptional1.toString();
        java.lang.String str3 = tagSetOptional1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<io.swagger.oas.models.tags.Tag> tagSet4 = tagSetOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Optional.empty" + "'", str3, "Optional.empty");
    }

    @Test
    public void test04910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04910");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setName("hi!");
        strComparableSchema24.setMaxLength((java.lang.Integer) 0);
        strComparableSchema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema24.xml(xML32);
        java.lang.String str34 = strComparableSchema24.getName();
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.format("#/components/schemas/");
        java.lang.Integer int39 = strComparableSchema24.getMaxProperties();
        java.lang.Boolean boolean40 = strComparableSchema24.getDeprecated();
        io.swagger.oas.models.media.Schema schema41 = schema20.example((java.lang.Object) boolean40);
        schema41.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04911");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.addRequiredItem("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema27.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema37.setMinLength((java.lang.Integer) 0);
        strComparableSchema27.setExample((java.lang.Object) strComparableSchema37);
        strComparableSchema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.name("Optional.empty");
        java.lang.String str53 = strComparableSchema47.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema59.setName("hi!");
        strComparableSchema59.setName("Optional.empty");
        java.math.BigDecimal bigDecimal65 = null;
        strComparableSchema59.setMaximum(bigDecimal65);
        java.lang.String str67 = strComparableSchema59.getDescription();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema59.maximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema70 = schema55.example((java.lang.Object) strComparableSchema59);
        java.lang.String str71 = schema55.get$ref();
        java.lang.String str72 = schema55.getType();
        io.swagger.oas.models.media.Schema schema74 = schema55.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema55.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema76.maxProperties((java.lang.Integer) 0);
        strComparableSchema27.setNot(schema76);
        boolean boolean80 = schema24.equals((java.lang.Object) strComparableSchema27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test04912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04912");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getNullable();
        schema14.setNot(schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema48.setName("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema32.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = schema14.additionalProperties(schema32);
        schema14.setTitle("Optional.empty");
        java.lang.Integer int58 = schema14.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test04913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04913");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema10.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema10.maximum(bigDecimal17);
        java.lang.Boolean boolean19 = strComparableSchema10.getExclusiveMaximum();
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema10.getDefault();
        java.lang.String str21 = strComparableSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        strComparableSchema10.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04914");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema21.getTitle();
        boolean boolean27 = schema13.equals((java.lang.Object) schema21);
        schema13.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str34 = schema33.getTitle();
        io.swagger.oas.models.media.Schema schema36 = schema33.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test04915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04915");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML18 = null;
        schema17.setXml(xML18);
        io.swagger.oas.models.media.Schema schema21 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.pattern("");
        schema28.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        io.swagger.oas.models.media.Schema schema44 = schema38.not(schema43);
        java.lang.Boolean boolean45 = schema43.getUniqueItems();
        schema43.setUniqueItems((java.lang.Boolean) true);
        schema28.addExtension("", (java.lang.Object) schema43);
        schema28.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML51 = null;
        schema28.setXml(xML51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema28.maximum(bigDecimal53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.xml(xML55);
        schema23.setExample((java.lang.Object) xML55);
        java.lang.String str58 = schema23.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test04916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04916");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String str11 = tagSetOptional10.toString();
        boolean boolean12 = tagSetOptional10.isPresent();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str11, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test04917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04917");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        schema8.setName("Optional.empty");
        schema8.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema8.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean15 = schema8.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
    }

    @Test
    public void test04918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04918");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 10);
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        schema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = schema27.getMaximum();
        java.lang.Object obj35 = schema27.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test04919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04919");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        java.lang.Integer int11 = schema10.getMaxLength();
        java.lang.Boolean boolean12 = schema10.getUniqueItems();
        java.lang.String str13 = schema10.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04920");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema28 = schema22.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        io.swagger.oas.models.media.Schema schema44 = schema38.not(schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = schema44.getProperties();
        java.lang.Boolean boolean46 = schema44.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.not(schema47);
        io.swagger.oas.models.media.Schema schema50 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema50.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema53.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema57 = schema55.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema59.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema59.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema62.setName("hi!");
        strComparableSchema62.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML68 = null;
        strComparableSchema62.setXml(xML68);
        java.lang.Boolean boolean70 = strComparableSchema62.getNullable();
        strComparableSchema62.setType("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        strComparableSchema62.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional.empty");
        java.lang.String str75 = strComparableSchema62.getPattern();
        schema55.addExtension("default", (java.lang.Object) strComparableSchema62);
        schema28.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema62);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test04921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04921");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.util.List<java.lang.String> strList34 = schema25.getRequired();
        schema25.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = null;
        schema25.setXml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema25.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test04922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04922");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        java.lang.String str26 = strComparableSchema20.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setName("Optional.empty");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema32.setMaximum(bigDecimal38);
        java.lang.String str40 = strComparableSchema32.getDescription();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = schema28.example((java.lang.Object) strComparableSchema32);
        java.lang.String str44 = schema28.get$ref();
        java.lang.String str45 = schema28.getType();
        schema28.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.pattern("");
        io.swagger.oas.models.media.Schema schema60 = schema54.not(schema59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        java.math.BigDecimal bigDecimal62 = schema60.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema60.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setName("hi!");
        strComparableSchema67.setNot((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean74 = strComparableSchema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema70.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.pattern("");
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema77.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str84 = strComparableSchema77.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema85.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList89 = strComparableSchema85.getEnum();
        strComparableSchema77.setEnum(strComparableList89);
        schema76.setEnum(strComparableList89);
        schema66.setEnum(strComparableList89);
        schema28.setEnum(strComparableList89);
        schema28.setUniqueItems((java.lang.Boolean) true);
        schema16.setNot(schema28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap97 = schema28.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(strComparableList89);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test04923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04923");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        io.swagger.oas.models.media.Schema schema46 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.maxItems((java.lang.Integer) 0);
        strComparableSchema50.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean58 = strComparableSchema50.getReadOnly();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema50.nullable((java.lang.Boolean) false);
        strComparableSchema50.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema50.readOnly((java.lang.Boolean) false);
        boolean boolean65 = schema30.equals((java.lang.Object) strComparableSchema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strComparableSchema50.getExtensions();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema50.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test04924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04924");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 1);
        schema12.setMinLength((java.lang.Integer) 0);
        schema12.setReadOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema23 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04925");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        io.swagger.oas.models.media.Schema schema30 = schema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04926");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema4.setExternalDocs(externalDocumentation13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema4.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        schema16.setFormat("");
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMaximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test04927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04927");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        io.swagger.oas.models.media.XML xML13 = schema12.getXml();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        schema22.set$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.example((java.lang.Object) schema22);
        java.lang.Boolean boolean28 = schema22.getWriteOnly();
        java.lang.Integer int29 = schema22.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test04928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04928");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        schema30.setDeprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList33 = schema30.getRequired();
        java.lang.Integer int34 = schema30.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test04929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04929");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean3 = strComparableSchema0.getExclusiveMinimum();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
    }

    @Test
    public void test04930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04930");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional7 = java.util.Optional.ofNullable(contentArray0);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional8 = java.util.Optional.ofNullable(contentArray0);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentArrayOptional7);
        org.junit.Assert.assertNotNull(contentArrayOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
    }

    @Test
    public void test04931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04931");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema2.setMinProperties((java.lang.Integer) 1);
        schema2.set$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema8 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        schema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04932");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Optional<java.lang.Object> objOptional5 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema0);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        java.lang.String str8 = strComparableSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema0.setMultipleOf(bigDecimal9);
        java.lang.Integer int11 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema24.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema40.type("default");
        io.swagger.oas.models.media.Schema schema43 = schema24.not(schema42);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema0.additionalProperties(schema43);
        schema43.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema43.type("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(objOptional5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test04933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04933");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema10.setProperties(strMap19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema10.multipleOf(bigDecimal21);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04934");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray11);
        java.lang.String str13 = tagSetOptional12.toString();
        java.lang.String str14 = tagSetOptional12.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional12.get();
        strComparableSchema0.setDefault((java.lang.Object) tagSetOptional12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.externalDocs(externalDocumentation17);
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        java.lang.String str31 = schema30.getFormat();
        java.lang.String str32 = schema30.get$ref();
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        java.lang.String str34 = schema30.getDescription();
        schema18.setExample((java.lang.Object) str34);
        schema18.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str13, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str14, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04935");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04936");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional7.get();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.orElse(tagSet30);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet32 = tagSetOptional7.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet33 = tagSetOptional7.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        java.lang.String str42 = schema40.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema43.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema43.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str56 = schema55.getType();
        io.swagger.oas.models.media.Schema schema57 = schema40.additionalProperties(schema55);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = schema55.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean62 = tagSetOptional7.equals((java.lang.Object) schema61);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet63 = tagSetOptional7.get();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(tagSet32);
        org.junit.Assert.assertNotNull(tagSet33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(tagSet63);
    }

    @Test
    public void test04937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04937");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional7.get();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.orElse(tagSet30);
        java.lang.String str32 = tagSetOptional7.toString();
        java.lang.String str33 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str32, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str33, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test04938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04938");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema3.getTitle();
        strComparableSchema3.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        boolean boolean27 = schema19.equals((java.lang.Object) bigDecimal25);
        io.swagger.oas.models.media.Schema schema29 = schema19.type("Optional.empty");
        boolean boolean30 = schema14.equals((java.lang.Object) schema29);
        boolean boolean31 = strComparableSchema0.equals((java.lang.Object) schema29);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.discriminator(discriminator32);
        schema33.setFormat("Optional[[]]");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema33.setDiscriminator(discriminator36);
        schema33.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04939");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.Integer int13 = schema12.getMaxItems();
        java.lang.String str14 = schema12.getType();
        java.lang.Boolean boolean15 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = null;
        schema12.setAdditionalProperties(schema16);
        java.lang.Boolean boolean18 = schema12.getExclusiveMinimum();
        schema12.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema12.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test04940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04940");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        strComparableSchema12.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.minimum(bigDecimal22);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int26 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema28 = schema23.title("");
        schema23.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04941");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema0.setExtensions(strMap13);
        java.lang.String str15 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.nullable((java.lang.Boolean) true);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        schema23.setMaximum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04942");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int14 = strComparableSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.type("hi!");
        java.lang.Class<?> wildcardClass17 = schema16.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional18 = java.util.Optional.of(wildcardClass17);
        schema10.setDefault((java.lang.Object) wildcardClass17);
        java.lang.String str20 = schema10.toString();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        schema10.setExternalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClassOptional18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04943");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        java.lang.Boolean boolean32 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema48 = schema46.type("default");
        io.swagger.oas.models.media.Schema schema49 = schema46.getAdditionalProperties();
        schema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setName("hi!");
        strComparableSchema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema52.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema46.example((java.lang.Object) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema52.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema52.setNullable((java.lang.Boolean) true);
        strComparableSchema33.setDefault((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.pattern("");
        strComparableSchema69.setDescription("default");
        java.lang.Integer int76 = strComparableSchema69.getMaxItems();
        java.lang.Boolean boolean77 = strComparableSchema69.getWriteOnly();
        java.math.BigDecimal bigDecimal78 = strComparableSchema69.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema69.externalDocs(externalDocumentation79);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema69.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema68.additionalProperties(schema82);
        schema25.setNot(schema68);
        java.lang.String str85 = schema25.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
    }

    @Test
    public void test04944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04944");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema22.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema38.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema40.setMaximum(bigDecimal45);
        java.util.List<java.lang.String> strList47 = strComparableSchema40.getRequired();
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema40.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema40.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema27.setExample((java.lang.Object) schema51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema27.minimum(bigDecimal53);
        schema27.setMaxLength((java.lang.Integer) 100);
        java.lang.Integer int57 = schema27.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test04945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04945");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema14.format("");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema30.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML40 = null;
        schema30.setXml(xML40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema42.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema42.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema42.format("");
        java.lang.Boolean boolean57 = schema56.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema56.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema30.additionalProperties(schema56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema3.not(schema60);
        java.lang.Object obj62 = strComparableSchema3.getExample();
        strComparableSchema3.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test04946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04946");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray22 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        io.swagger.oas.models.tags.Tag[] tagArray24 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet25 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet25, tagArray24);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet27 = tagSetOptional23.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet25);
        java.lang.String str28 = tagSetOptional23.toString();
        boolean boolean30 = tagSetOptional23.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema14.example((java.lang.Object) boolean30);
        strComparableSchema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema3.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal35 = null;
        strComparableSchema3.setMinimum(bigDecimal35);
        java.util.List<java.lang.String> strList37 = strComparableSchema3.getRequired();
        java.util.List<java.lang.String> strList38 = strComparableSchema3.getRequired();
        java.lang.String str39 = strComparableSchema3.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(tagSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#/components/schemas/hi!" + "'", str39, "#/components/schemas/hi!");
    }

    @Test
    public void test04947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04947");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        java.lang.Object obj13 = strComparableSchema3.getExample();
        strComparableSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema3.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = strComparableSchema3.toString();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test04948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04948");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema0.getDefault();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strComparable16);
    }

    @Test
    public void test04949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04949");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema18 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        schema23.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.lang.Boolean boolean40 = schema38.getUniqueItems();
        schema38.setUniqueItems((java.lang.Boolean) true);
        schema23.addExtension("", (java.lang.Object) schema38);
        java.lang.Boolean boolean44 = schema38.getNullable();
        schema38.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema48 = schema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema48.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema18.not(schema48);
        schema18.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04950");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Optional<java.lang.Object> objOptional5 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema0);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(objOptional5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04951");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04952");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema12.getTitle();
        java.lang.String str39 = schema12.getTitle();
        io.swagger.oas.models.media.Schema schema41 = schema12.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04953");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema13.xml(xML20);
        schema21.setWriteOnly((java.lang.Boolean) false);
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = schema21.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test04954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04954");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        schema8.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.media.XML xML45 = schema8.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(xML45);
    }

    @Test
    public void test04955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04955");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema2.setMinProperties((java.lang.Integer) 1);
        schema2.setExample((java.lang.Object) 100.0d);
        java.util.List<java.lang.String> strList7 = schema2.getRequired();
        schema2.setMaxLength((java.lang.Integer) 100);
        schema2.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema2.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04956");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        java.lang.Integer int7 = schema4.getMinProperties();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema4.xml(xML8);
        java.lang.String str10 = schema4.getType();
        schema4.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04957");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean5 = schema4.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setName("hi!");
        strComparableSchema6.setNot((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema9.getUniqueItems();
        java.lang.Boolean boolean14 = strComparableSchema9.getNullable();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema9.pattern("default");
        io.swagger.oas.models.media.Schema schema20 = schema18.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.xml(xML23);
        io.swagger.oas.models.media.Schema schema25 = schema4.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.description("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        java.lang.String str33 = strComparableSchema28.getFormat();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema28.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema37.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML40 = schema37.getXml();
        io.swagger.oas.models.media.Schema schema42 = schema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema48.$ref("hi!");
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema48.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema48.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema61 = schema59.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema62 = schema42.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setName("hi!");
        strComparableSchema63.setNot((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema63.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema63.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema63.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema63.format("");
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.multipleOf(bigDecimal78);
        schema77.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str82 = schema77.getType();
        io.swagger.oas.models.media.Schema schema84 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema85 = schema77.getNot();
        io.swagger.oas.models.media.Schema schema87 = schema77.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema88 = schema61.example((java.lang.Object) schema77);
        schema61.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema91 = schema24.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema93 = schema91.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test04958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04958");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        java.lang.String str13 = schema12.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema21.$ref("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema31 = schema29.addRequiredItem("default");
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema33.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setMinLength((java.lang.Integer) 0);
        strComparableSchema33.setExample((java.lang.Object) strComparableSchema43);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema43.minimum(bigDecimal48);
        schema49.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema49.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema54.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema70 = schema64.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema72 = schema64.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema64.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean75 = schema74.getReadOnly();
        java.math.BigDecimal bigDecimal76 = schema74.getMaximum();
        io.swagger.oas.models.media.Schema schema78 = schema74.maxItems((java.lang.Integer) 100);
        java.lang.Integer int79 = schema74.getMinItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = schema74.getProperties();
        schema53.setProperties(strMap80);
        schema29.setProperties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema14.properties(strMap80);
        io.swagger.oas.models.media.Schema schema84 = schema12.properties(strMap80);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test04959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04959");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList26 = schema22.getRequired();
        io.swagger.oas.models.media.Schema schema28 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.lang.Boolean boolean36 = strComparableSchema32.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.format("");
        java.lang.String str39 = schema38.getName();
        schema38.setExclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = schema22.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema44 = schema22.maxLength((java.lang.Integer) 0);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema51.setName("hi!");
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema51.discriminator(discriminator57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList63 = strComparableSchema59.getEnum();
        schema58.setEnum(strComparableList63);
        io.swagger.oas.models.media.Schema schema66 = schema58.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema58.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.minimum(bigDecimal71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setName("hi!");
        strComparableSchema70.setNot((io.swagger.oas.models.media.Schema) strComparableSchema73);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema73.name("hi!");
        io.swagger.oas.models.media.Schema schema82 = schema80.pattern("");
        schema82.setMinLength((java.lang.Integer) 10);
        schema82.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str87 = schema82.get$ref();
        java.math.BigDecimal bigDecimal88 = null;
        schema82.setMaximum(bigDecimal88);
        schema82.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema92 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema82);
        schema82.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema82.getNot();
        boolean boolean96 = schema44.equals((java.lang.Object) schema82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(strComparableList63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(schema95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test04960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04960");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema9.title("hi!");
        java.lang.Boolean boolean15 = schema9.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema9.minItems((java.lang.Integer) 0);
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.maximum(bigDecimal20);
        java.lang.Boolean boolean22 = schema9.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test04961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04961");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        java.lang.Boolean boolean12 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.maxProperties((java.lang.Integer) (-1));
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04962");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional25 = java.util.Optional.of(contentArray0);
        javax.ws.rs.Produces produces26 = null;
        javax.ws.rs.Produces produces27 = null;
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces26, produces27, components28);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentArrayOptional25);
        org.junit.Assert.assertNotNull(contentOptional29);
    }

    @Test
    public void test04963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04963");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema0.setMaximum(bigDecimal38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04964");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal13 = null;
        schema10.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema10.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test04965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04965");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.lang.String str31 = schema30.getName();
        schema30.setType("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Class<?> wildcardClass34 = schema30.getClass();
        java.util.Optional<java.lang.reflect.Type> typeOptional35 = java.util.Optional.ofNullable((java.lang.reflect.Type) wildcardClass34);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional.empty" + "'", str31, "Optional.empty");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeOptional35);
    }

    @Test
    public void test04966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04966");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema10.setExternalDocs(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04967");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional15 = java.util.Optional.of(contentArray0);
        javax.ws.rs.Produces produces16 = null;
        javax.ws.rs.Produces produces17 = null;
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional19 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces16, produces17, components18);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentArrayOptional15);
        org.junit.Assert.assertNotNull(contentOptional19);
    }

    @Test
    public void test04968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04968");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema25.getExternalDocs();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray33 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces34 = null;
        javax.ws.rs.Produces produces35 = null;
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional37 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces34, produces35, components36);
        javax.ws.rs.Produces produces38 = null;
        javax.ws.rs.Produces produces39 = null;
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional41 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces38, produces39, components40);
        javax.ws.rs.Produces produces42 = null;
        javax.ws.rs.Produces produces43 = null;
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional45 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces42, produces43, components44);
        javax.ws.rs.Produces produces46 = null;
        javax.ws.rs.Produces produces47 = null;
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional49 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces46, produces47, components48);
        javax.ws.rs.Produces produces50 = null;
        javax.ws.rs.Produces produces51 = null;
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional53 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces50, produces51, components52);
        javax.ws.rs.Produces produces54 = null;
        javax.ws.rs.Produces produces55 = null;
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional57 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces54, produces55, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces58, produces59, components60);
        javax.ws.rs.Produces produces62 = null;
        javax.ws.rs.Produces produces63 = null;
        io.swagger.oas.models.Components components64 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional65 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces62, produces63, components64);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional66 = java.util.Optional.of(apiResponseArray33);
        javax.ws.rs.Produces produces67 = null;
        javax.ws.rs.Produces produces68 = null;
        io.swagger.oas.models.Components components69 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional70 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces67, produces68, components69);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional71 = java.util.Optional.of(apiResponseArray33);
        io.swagger.oas.models.media.Schema schema72 = schema25.example((java.lang.Object) apiResponseArray33);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional73 = java.util.Optional.ofNullable(apiResponseArray33);
        javax.ws.rs.Produces produces74 = null;
        javax.ws.rs.Produces produces75 = null;
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional77 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces74, produces75, components76);
        javax.ws.rs.Produces produces78 = null;
        javax.ws.rs.Produces produces79 = null;
        io.swagger.oas.models.Components components80 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional81 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces78, produces79, components80);
        javax.ws.rs.Produces produces82 = null;
        javax.ws.rs.Produces produces83 = null;
        io.swagger.oas.models.Components components84 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional85 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray33, produces82, produces83, components84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(apiResponseArray33);
        org.junit.Assert.assertNotNull(apiResponsesOptional37);
        org.junit.Assert.assertNotNull(apiResponsesOptional41);
        org.junit.Assert.assertNotNull(apiResponsesOptional45);
        org.junit.Assert.assertNotNull(apiResponsesOptional49);
        org.junit.Assert.assertNotNull(apiResponsesOptional53);
        org.junit.Assert.assertNotNull(apiResponsesOptional57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNotNull(apiResponsesOptional65);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional66);
        org.junit.Assert.assertNotNull(apiResponsesOptional70);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional73);
        org.junit.Assert.assertNotNull(apiResponsesOptional77);
        org.junit.Assert.assertNotNull(apiResponsesOptional81);
        org.junit.Assert.assertNotNull(apiResponsesOptional85);
    }

    @Test
    public void test04969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04969");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        java.lang.Integer int22 = schema20.getMinLength();
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test04970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04970");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema20.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04971");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema54.setName("hi!");
        strComparableSchema54.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray60 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional62 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional64 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components63);
        strComparableSchema54.setDefault((java.lang.Object) components63);
        java.lang.Boolean boolean66 = strComparableSchema54.getWriteOnly();
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema3.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema3.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema71.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(parameterArray60);
        org.junit.Assert.assertNotNull(parameterListOptional62);
        org.junit.Assert.assertNotNull(parameterListOptional64);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test04972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04972");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        schema12.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema43.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.xml(xML46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04973");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        schema14.setTitle("default");
        schema14.setMinProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean23 = schema14.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema14.minimum(bigDecimal24);
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04974");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) false);
        schema15.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema15.minItems((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass26 = schema25.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test04975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04975");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.title("");
        java.lang.Integer int15 = schema14.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test04976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04976");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema23.getProperties();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema23.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema28.pattern("");
        java.lang.Class<?> wildcardClass31 = schema28.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04977");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.Integer int29 = schema28.getMaxLength();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        java.lang.String str31 = schema28.getType();
        io.swagger.oas.models.media.Schema schema33 = schema28.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04978");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        schema12.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema12.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema12.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema12.minProperties((java.lang.Integer) 0);
        java.lang.Integer int48 = schema47.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test04979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04979");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional4.get();
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet11 = tagSetOptional10.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet12 = tagSetOptional4.orElse(tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional4.get();
        java.util.Optional<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalOptional14 = java.util.Optional.ofNullable(tagSetOptional4);
        boolean boolean15 = tagSetOptional4.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema22.getNullable();
        schema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int26 = schema22.getMinItems();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.multipleOf(bigDecimal27);
        boolean boolean29 = tagSetOptional4.equals((java.lang.Object) schema28);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagSet11);
        org.junit.Assert.assertNotNull(tagSet12);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSetOptionalOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04980");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = strComparableSchema3.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        strComparableSchema3.setDiscriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.nullable((java.lang.Boolean) false);
        schema15.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04981");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.name("");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        schema6.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.minimum(bigDecimal13);
        schema14.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04982");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema54.setName("hi!");
        strComparableSchema54.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray60 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional62 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional64 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray60, components63);
        strComparableSchema54.setDefault((java.lang.Object) components63);
        java.lang.Boolean boolean66 = strComparableSchema54.getWriteOnly();
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema3.minItems((java.lang.Integer) 0);
        schema69.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(parameterArray60);
        org.junit.Assert.assertNotNull(parameterListOptional62);
        org.junit.Assert.assertNotNull(parameterListOptional64);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test04983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04983");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema14.getExternalDocs();
        schema14.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxLength((java.lang.Integer) (-1));
        schema21.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04984");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        java.lang.String str11 = schema6.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema6.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test04985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04985");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.lang.Integer int23 = strComparableSchema3.getMaxItems();
        java.lang.String[] strArray27 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Boolean boolean31 = strComparableSchema3.getWriteOnly();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema3.xml(xML32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.getAdditionalProperties();
        strComparableSchema34.setDeprecated((java.lang.Boolean) false);
        strComparableSchema34.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.lang.String str49 = strComparableSchema42.getTitle();
        java.lang.Integer int50 = strComparableSchema42.getMinProperties();
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema34.setPattern("");
        strComparableSchema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test04986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04986");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.xml(xML15);
        schema10.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04987");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.set$ref("default");
        io.swagger.oas.models.media.Schema schema21 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.Class<?> wildcardClass26 = schema25.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test04988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04988");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = strComparableSchema0.getEnum();
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema18.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        io.swagger.oas.models.media.Schema schema26 = schema20.not(schema25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema20.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema20.uniqueItems((java.lang.Boolean) false);
        schema20.setPattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean33 = schema20.getNullable();
        schema20.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.maxItems((java.lang.Integer) 0);
        strComparableSchema50.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema58 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.Integer int59 = strComparableSchema50.getMaxLength();
        schema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema0.setAdditionalProperties(schema20);
        java.lang.Integer int62 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test04989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04989");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema14.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        schema25.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        schema25.setDiscriminator(discriminator30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04990");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        java.lang.String str26 = strComparableSchema20.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setName("Optional.empty");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema32.setMaximum(bigDecimal38);
        java.lang.String str40 = strComparableSchema32.getDescription();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = schema28.example((java.lang.Object) strComparableSchema32);
        java.lang.String str44 = schema28.get$ref();
        java.lang.String str45 = schema28.getType();
        schema28.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.pattern("");
        io.swagger.oas.models.media.Schema schema60 = schema54.not(schema59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        java.math.BigDecimal bigDecimal62 = schema60.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema60.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setName("hi!");
        strComparableSchema67.setNot((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean74 = strComparableSchema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema70.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.pattern("");
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema77.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str84 = strComparableSchema77.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema85.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList89 = strComparableSchema85.getEnum();
        strComparableSchema77.setEnum(strComparableList89);
        schema76.setEnum(strComparableList89);
        schema66.setEnum(strComparableList89);
        schema28.setEnum(strComparableList89);
        schema28.setUniqueItems((java.lang.Boolean) true);
        schema16.setNot(schema28);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList97 = schema16.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(strComparableList89);
        org.junit.Assert.assertNull(strComparableList97);
    }

    @Test
    public void test04991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04991");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test04992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04992");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        schema9.setProperties(strMap13);
        schema9.setFormat("Optional[[]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
    }

    @Test
    public void test04993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04993");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        schema25.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04994");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema4.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = schema4.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test04995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04995");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04996");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("default");
        java.lang.String str29 = schema26.getPattern();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj34 = schema33.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04997");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema12.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        strComparableSchema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema41.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.minimum(bigDecimal51);
        boolean boolean53 = schema45.equals((java.lang.Object) bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema54.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema54.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema54.format("");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.multipleOf(bigDecimal69);
        java.lang.String[] strArray76 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        io.swagger.oas.models.media.Schema schema79 = schema70.required((java.util.List<java.lang.String>) strList77);
        schema45.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema81 = schema12.required((java.util.List<java.lang.String>) strList77);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal84 = null;
        schema12.setMinimum(bigDecimal84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test04998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04998");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04999");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList16 = strComparableSchema3.getRequired();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.multipleOf(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test05000");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        schema17.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.name("Optional.empty");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema21.setRequired((java.util.List<java.lang.String>) strList24);
        io.swagger.oas.models.media.Schema schema27 = schema6.required((java.util.List<java.lang.String>) strList24);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema30.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema40.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList51 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.lang.Boolean boolean55 = strComparableSchema47.getWriteOnly();
        java.lang.String str56 = strComparableSchema47.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        strComparableSchema47.setDiscriminator(discriminator57);
        schema29.setExample((java.lang.Object) strComparableSchema47);
        strComparableSchema47.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(str56);
    }
}

