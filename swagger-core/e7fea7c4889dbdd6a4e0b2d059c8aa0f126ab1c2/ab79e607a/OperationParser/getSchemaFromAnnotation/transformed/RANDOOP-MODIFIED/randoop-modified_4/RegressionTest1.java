import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test00501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00501");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.minimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        strComparableSchema0.setMinimum(bigDecimal10);
        java.lang.Integer int12 = strComparableSchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test00502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00502");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String str8 = tagSetOptional7.toString();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.lang.String[] strArray17 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray17);
        io.swagger.oas.models.tags.Tag[] tagArray19 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet20 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet20, tagArray19);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet22 = tagSetOptional18.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet23 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet24 = tagSetOptional7.orElse(tagSet23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.minimum(bigDecimal35);
        boolean boolean37 = schema29.equals((java.lang.Object) bigDecimal35);
        io.swagger.oas.models.media.Schema schema39 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema40 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema29.setExample((java.lang.Object) tagSetOptionalSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = schema29.not(schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        schema51.set$ref("");
        boolean boolean56 = tagSetOptional7.equals((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        schema61.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema61.name("Optional.empty");
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema65.setRequired((java.util.List<java.lang.String>) strList68);
        schema51.setRequired((java.util.List<java.lang.String>) strList68);
        java.lang.String str72 = schema51.getTitle();
        schema51.setFormat("Optional.empty");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str8, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSetOptional18);
        org.junit.Assert.assertNotNull(tagArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(tagSet22);
        org.junit.Assert.assertNotNull(tagSet23);
        org.junit.Assert.assertNotNull(tagSet24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test00503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00503");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        io.swagger.oas.models.media.Schema schema14 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test00504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00504");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        schema20.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00505");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = java.util.Optional.ofNullable((java.util.HashSet<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Optional<java.util.Collection<io.swagger.oas.models.tags.Tag>> tagCollectionOptional16 = java.util.Optional.of((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(tagCollectionOptional16);
    }

    @Test
    public void test00506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00506");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 1);
        java.lang.String str18 = schema4.getName();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema4.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test00507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00507");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.externalDocs(externalDocumentation13);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00508");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        schema14.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema19.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.format("");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.multipleOf(bigDecimal34);
        java.lang.String[] strArray41 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = schema35.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema46 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test00509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00509");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.pattern("");
        io.swagger.oas.models.media.Schema schema43 = schema37.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema47.name("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("");
        java.lang.String[] strArray58 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema56.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = schema43.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema30.additionalProperties(schema43);
        strComparableSchema0.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean67 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal68 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(bigDecimal68);
    }

    @Test
    public void test00510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00510");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass36 = schema33.getClass();
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional37 = java.util.Optional.of((java.lang.reflect.AnnotatedElement) wildcardClass36);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(annotatedElementOptional37);
    }

    @Test
    public void test00511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00511");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.Boolean boolean11 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test00512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00512");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.externalDocs(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00513");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "Optional[[]]";
    }

    @Test
    public void test00514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00514");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        boolean boolean26 = schema18.equals((java.lang.Object) bigDecimal24);
        io.swagger.oas.models.media.Schema schema28 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        schema6.addExtension("", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = schema6.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema6.minimum(bigDecimal32);
        schema6.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00515");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = schema20.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test00516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00516");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        java.lang.String str30 = schema12.getPattern();
        java.lang.Boolean boolean31 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.$ref("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema42 = schema38.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.example(obj43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        schema44.setName("");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema50);
        java.lang.Boolean boolean52 = schema12.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test00517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00517");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.lang.Boolean boolean15 = schema12.getWriteOnly();
        java.lang.String str16 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test00518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00518");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        schema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        strComparableSchema15.setDescription("default");
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.required((java.util.List<java.lang.String>) strList25);
        io.swagger.oas.models.media.Schema schema28 = schema10.required((java.util.List<java.lang.String>) strList25);
        schema28.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.String str31 = schema28.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str31, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test00519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00519");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setName("hi!");
        strComparableSchema43.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML49 = null;
        strComparableSchema43.setXml(xML49);
        java.lang.Boolean boolean51 = strComparableSchema43.getNullable();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.$ref("hi!");
        java.math.BigDecimal bigDecimal54 = null;
        strComparableSchema43.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema38.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema43.$ref("");
        strComparableSchema43.setDescription("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test00520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00520");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema39.setName("hi!");
        strComparableSchema39.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML45 = null;
        strComparableSchema39.setXml(xML45);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean55 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean57 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        java.lang.Integer int59 = strComparableSchema39.getMaxItems();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = schema12.example((java.lang.Object) strList64);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema67.getExtensions();
        io.swagger.oas.models.media.Schema schema70 = schema67.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test00521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00521");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int32 = strComparableSchema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.type("hi!");
        schema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int37 = schema34.getMaxProperties();
        schema34.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.discriminator(discriminator40);
        java.lang.Integer int42 = schema34.getMaxItems();
        schema28.setAdditionalProperties(schema34);
        java.math.BigDecimal bigDecimal44 = schema34.getMinimum();
        java.util.List<java.lang.String> strList45 = schema34.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test00522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00522");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.lang.String str37 = schema4.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test00523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00523");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setName("hi!");
        strComparableSchema18.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML24 = null;
        strComparableSchema18.setXml(xML24);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean34 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean36 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema18.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        schema12.setDefault((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setPattern("Optional.empty");
        strComparableSchema18.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = strComparableSchema18.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test00524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00524");
        java.util.AbstractCollection<io.swagger.oas.models.tags.Tag> tagCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<java.util.AbstractCollection<io.swagger.oas.models.tags.Tag>> tagCollectionOptional1 = java.util.Optional.of(tagCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00525");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema13 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test00526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00526");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.$ref("hi!");
        java.lang.Boolean boolean26 = strComparableSchema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema18.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.pattern("");
        java.lang.String str34 = strComparableSchema29.getFormat();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema29.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray37 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional38 = io.swagger.jaxrs2.OperationParser.getTags(strArray37);
        io.swagger.oas.models.tags.Tag[] tagArray39 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet40 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet40, tagArray39);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet42 = tagSetOptional38.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet40);
        java.lang.String str43 = tagSetOptional38.toString();
        boolean boolean45 = tagSetOptional38.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema29.example((java.lang.Object) boolean45);
        strComparableSchema29.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.lang.Boolean boolean50 = schema49.getNullable();
        strComparableSchema3.setNot(schema49);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema3.maxProperties((java.lang.Integer) (-1));
        strComparableSchema3.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(tagSetOptional38);
        org.junit.Assert.assertNotNull(tagArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(tagSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Optional.empty" + "'", str43, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test00527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00527");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema24.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList27 = schema24.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test00528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00528");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test00529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00529");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        java.lang.String str10 = schema9.getType();
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.writeOnly((java.lang.Boolean) true);
        schema14.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean21 = schema20.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = schema20.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema14.setExternalDocs(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test00530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00530");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minimum(bigDecimal19);
        boolean boolean21 = schema13.equals((java.lang.Object) bigDecimal19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema13.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        io.swagger.oas.models.media.Schema schema36 = schema30.not(schema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.properties(strMap39);
        io.swagger.oas.models.media.Schema schema41 = schema13.addProperties("", schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        boolean boolean54 = schema46.equals((java.lang.Object) bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setName("hi!");
        strComparableSchema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema55.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema55.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema55.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema55.format("");
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema71.required((java.util.List<java.lang.String>) strList78);
        schema46.setRequired((java.util.List<java.lang.String>) strList78);
        schema13.setRequired((java.util.List<java.lang.String>) strList78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema13.getProperties();
        schema7.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema86.getExternalDocs();
        io.swagger.oas.models.media.Schema schema88 = schema86.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(externalDocumentation87);
        org.junit.Assert.assertNull(schema88);
    }

    @Test
    public void test00531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00531");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = schema14.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strComparableList19);
    }

    @Test
    public void test00532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00532");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        java.lang.Integer int31 = schema30.getMinItems();
        java.lang.Integer int32 = schema30.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test00533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00533");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.example((java.lang.Object) 1.0d);
        schema16.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        java.lang.String str26 = schema25.getType();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxLength((java.lang.Integer) (-1));
        schema16.setExample((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema31 = schema25.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test00534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00534");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema15 = schema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema19.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema30.setName("hi!");
        strComparableSchema30.setName("Optional.empty");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema30.setMaximum(bigDecimal36);
        java.lang.String str38 = strComparableSchema30.getDescription();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema30.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema26.not(schema40);
        schema41.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema45.getNot();
        schema11.setAdditionalProperties(schema45);
        java.math.BigDecimal bigDecimal48 = null;
        schema45.setMultipleOf(bigDecimal48);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test00535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00535");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        java.lang.Integer int15 = schema12.getMaxProperties();
        java.lang.Integer int16 = schema12.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test00536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00536");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema27.setMaximum(bigDecimal33);
        java.lang.String str35 = strComparableSchema27.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema23.not(schema37);
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema38.description("");
        io.swagger.oas.models.media.Schema schema46 = schema38.type("");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.xml(xML47);
        java.lang.String str49 = schema48.getPattern();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema3.example((java.lang.Object) str49);
        strComparableSchema3.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test00537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00537");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        schema22.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.getAdditionalProperties();
        strComparableSchema26.setDeprecated((java.lang.Boolean) false);
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema26.addRequiredItem("");
        schema22.setNot(schema35);
        schema35.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00538");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        strComparableSchema12.set$ref("");
        java.math.BigDecimal bigDecimal28 = strComparableSchema12.getMaximum();
        java.lang.Object obj29 = strComparableSchema12.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test00539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00539");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema14.getProperties();
        java.lang.String str17 = schema14.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test00540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00540");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass10 = strComparableSchema0.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional11 = java.util.Optional.of(wildcardClass10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClassOptional11);
    }

    @Test
    public void test00541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00541");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("");
        schema12.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00542");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.minimum(bigDecimal28);
        boolean boolean30 = schema22.equals((java.lang.Object) bigDecimal28);
        io.swagger.oas.models.media.Schema schema32 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        strComparableSchema36.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        strComparableSchema36.setDiscriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema45 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        schema12.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema12.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema49.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj56 = schema55.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema55.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setName("hi!");
        strComparableSchema59.setNot((io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.media.Schema schema66 = schema55.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.media.Schema schema68 = schema55.name("");
        io.swagger.oas.models.media.Schema schema70 = schema68.exclusiveMaximum((java.lang.Boolean) false);
        schema48.setNot(schema70);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test00543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00543");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        schema11.setFormat("");
        io.swagger.oas.models.media.Schema schema16 = schema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.type("default");
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00544");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        java.lang.String str22 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema24 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        schema8.setDefault((java.lang.Object) schema24);
        schema24.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00545");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        java.lang.Boolean boolean18 = schema16.getDeprecated();
        java.lang.String str19 = schema16.getType();
        java.math.BigDecimal bigDecimal20 = schema16.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test00546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00546");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        schema11.setFormat("");
        io.swagger.oas.models.media.Schema schema15 = schema11.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema15.setName("#/components/schemas/hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test00547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00547");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        schema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test00548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00548");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.math.BigDecimal bigDecimal29 = schema28.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema30.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema30.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema30.format("");
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.multipleOf(bigDecimal45);
        java.lang.String[] strArray52 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        io.swagger.oas.models.media.Schema schema55 = schema46.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema57 = schema46.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema28.example((java.lang.Object) schema57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        schema28.setExternalDocs(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test00549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00549");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema17 = schema14.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.xml(xML18);
        schema14.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00550");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getDeprecated();
        io.swagger.oas.models.media.Schema schema10 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int11 = schema10.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test00551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00551");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema21 = schema16.getAdditionalProperties();
        java.lang.Boolean boolean22 = schema16.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
    }

    @Test
    public void test00552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00552");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.tags.Tag[] tagArray2 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet3 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet3, tagArray2);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional1.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet3);
        java.lang.String str6 = tagSetOptional1.toString();
        boolean boolean8 = tagSetOptional1.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema12.title("hi!");
        boolean boolean20 = tagSetOptional1.equals((java.lang.Object) "hi!");
        boolean boolean21 = tagSetOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<io.swagger.oas.models.tags.Tag> tagSet22 = tagSetOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test00553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00553");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.xml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        strComparableSchema49.setNot((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema49.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema49.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema61.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema59.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.math.BigDecimal bigDecimal66 = null;
        strComparableSchema61.setMaximum(bigDecimal66);
        java.util.List<java.lang.String> strList68 = strComparableSchema61.getRequired();
        java.math.BigDecimal bigDecimal69 = null;
        strComparableSchema61.setMaximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema61.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema61.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema48.setAdditionalProperties(schema74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema48.externalDocs(externalDocumentation76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = schema77.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(externalDocumentation78);
    }

    @Test
    public void test00554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00554");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        java.lang.Boolean boolean11 = schema9.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema12.format("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.multipleOf(bigDecimal27);
        java.lang.String[] strArray34 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema28.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.XML xML38 = null;
        schema28.setXml(xML38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema40.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema40.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema40.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema40.format("");
        java.lang.Boolean boolean55 = schema54.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema28.additionalProperties(schema54);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema28.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema60.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.pattern("");
        strComparableSchema63.setDescription("default");
        java.lang.String[] strArray72 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema63.required((java.util.List<java.lang.String>) strList73);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        strComparableSchema63.setExtensions(strMap76);
        java.lang.String str78 = strComparableSchema63.getPattern();
        io.swagger.oas.models.media.XML xML79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema63.xml(xML79);
        java.util.List<java.lang.String> strList81 = schema80.getRequired();
        io.swagger.oas.models.media.Schema schema83 = schema80.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema62.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setDefault((java.lang.Object) schema62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test00555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00555");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.maximum(bigDecimal8);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test00556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00556");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        java.lang.Integer int51 = strComparableSchema3.getMaxLength();
        java.lang.Boolean boolean52 = strComparableSchema3.getReadOnly();
        java.lang.Boolean boolean53 = strComparableSchema3.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test00557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00557");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.title("");
        io.swagger.oas.models.media.Schema schema20 = schema16.maxProperties((java.lang.Integer) 0);
        schema16.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00558");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "Optional[[]]";
    }

    @Test
    public void test00559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00559");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        strComparableSchema0.setDiscriminator(discriminator7);
        java.lang.Integer int9 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema11.setExternalDocs(externalDocumentation12);
        java.lang.Object obj14 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int17 = schema11.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test00560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00560");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int14 = strComparableSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.type("hi!");
        java.lang.Class<?> wildcardClass17 = schema16.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional18 = java.util.Optional.of(wildcardClass17);
        schema10.setDefault((java.lang.Object) wildcardClass17);
        io.swagger.oas.models.media.Schema schema21 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema10.xml(xML22);
        schema10.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClassOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00561");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.name("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("");
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema33.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema20.required((java.util.List<java.lang.String>) strList36);
        schema39.setName("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList54 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList58 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "");
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList58);
        schema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList58);
        java.math.BigDecimal bigDecimal62 = null;
        schema39.setMaximum(bigDecimal62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test00562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00562");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.minimum(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = schema23.getMaximum();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.maximum(bigDecimal27);
        java.lang.String str29 = schema28.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.name("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema40.pattern("");
        java.lang.String[] strArray44 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema42.required((java.util.List<java.lang.String>) strList45);
        java.lang.Object obj48 = schema42.getExample();
        schema28.setDefault(obj48);
        io.swagger.oas.annotations.media.Content[] contentArray50 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContent(contentArray50, produces53, produces54, components55);
        io.swagger.oas.models.media.Schema schema57 = schema28.example((java.lang.Object) components55);
        io.swagger.oas.models.media.Schema schema58 = schema9.addProperties("default", schema28);
        schema9.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(contentArray50);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test00563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00563");
        java.util.Optional<java.lang.String[]> strArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strArrayOptional0);
    }

    @Test
    public void test00564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00564");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema18.setMinProperties((java.lang.Integer) (-1));
        schema18.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema24.$ref("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema30.addRequiredItem("Optional.empty");
        schema30.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.minimum(bigDecimal35);
        java.lang.Integer int37 = schema30.getMaxProperties();
        java.lang.Integer int38 = schema30.getMinLength();
        schema18.addExtension("Optional.empty", (java.lang.Object) int38);
        java.lang.Class<?> wildcardClass40 = schema18.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test00565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00565");
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strComparableSchemaOptional0);
    }

    @Test
    public void test00566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00566");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj37 = schema36.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema36.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema47 = schema36.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        java.lang.Boolean boolean50 = schema47.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema47);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        schema12.setDiscriminator(discriminator52);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test00567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00567");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00568");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        io.swagger.oas.models.media.Schema schema30 = schema6.writeOnly((java.lang.Boolean) true);
        schema30.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00569");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minimum(bigDecimal19);
        boolean boolean21 = schema13.equals((java.lang.Object) bigDecimal19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema13.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        io.swagger.oas.models.media.Schema schema36 = schema30.not(schema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.properties(strMap39);
        io.swagger.oas.models.media.Schema schema41 = schema13.addProperties("", schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        boolean boolean54 = schema46.equals((java.lang.Object) bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setName("hi!");
        strComparableSchema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema55.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema55.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema55.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema55.format("");
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema71.required((java.util.List<java.lang.String>) strList78);
        schema46.setRequired((java.util.List<java.lang.String>) strList78);
        schema13.setRequired((java.util.List<java.lang.String>) strList78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema13.getProperties();
        schema7.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema86.getExternalDocs();
        schema86.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(externalDocumentation87);
    }

    @Test
    public void test00570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00570");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test00571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00571");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema20.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test00572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00572");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        java.util.Optional<java.lang.Object> objOptional19 = java.util.Optional.ofNullable((java.lang.Object) schema18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = schema18.getEnum();
        java.lang.String str21 = schema18.get$ref();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML33 = null;
        strComparableSchema27.setXml(xML33);
        java.lang.Boolean boolean35 = strComparableSchema27.getNullable();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.$ref("hi!");
        io.swagger.oas.models.media.XML xML38 = null;
        strComparableSchema27.setXml(xML38);
        schema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strComparableSchema27.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(objOptional19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation41);
    }

    @Test
    public void test00573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00573");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema10.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = schema18.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test00574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00574");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = schema23.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema25.not(schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema31.getProperties();
        java.math.BigDecimal bigDecimal33 = schema31.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema31.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema37 = schema31.readOnly((java.lang.Boolean) false);
        schema10.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema40 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema37.minimum(bigDecimal41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema37.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test00575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00575");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        java.lang.String str7 = schema6.getType();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxLength((java.lang.Integer) (-1));
        schema9.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test00576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00576");
        java.util.Optional<java.lang.Comparable<java.lang.String>> strComparableOptional1 = java.util.Optional.ofNullable((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strComparableOptional1);
    }

    @Test
    public void test00577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00577");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        java.lang.Object obj13 = strComparableSchema3.getExample();
        java.lang.Boolean boolean14 = strComparableSchema3.getExclusiveMaximum();
        strComparableSchema3.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test00578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00578");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema18.type("Optional.empty");
        java.lang.Boolean boolean25 = schema24.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test00579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00579");
        io.swagger.oas.annotations.links.Link[] linkArray0 = null;
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass2 = strMap1.getClass();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test00580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00580");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        java.lang.Boolean boolean26 = schema25.getExclusiveMaximum();
        java.lang.String str27 = schema25.getDescription();
        java.lang.Boolean boolean28 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.lang.Boolean boolean36 = strComparableSchema32.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.pattern("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str46 = strComparableSchema39.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema47.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = strComparableSchema47.getEnum();
        strComparableSchema39.setEnum(strComparableList51);
        schema38.setEnum(strComparableList51);
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema38.xml(xML54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema56.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.minProperties((java.lang.Integer) 100);
        java.lang.Object obj67 = schema66.getExample();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema66.minimum(bigDecimal68);
        java.lang.String[] strArray74 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema69.setRequired((java.util.List<java.lang.String>) strList75);
        boolean boolean78 = schema38.equals((java.lang.Object) schema69);
        schema25.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList84 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema80.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList84);
        boolean boolean87 = schema38.equals((java.lang.Object) strComparableList84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(strComparableList51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test00581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00581");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        schema14.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema14.getAdditionalProperties();
        java.lang.String str18 = schema17.get$ref();
        schema17.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test00582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00582");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        schema10.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        strComparableSchema15.setDescription("default");
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.required((java.util.List<java.lang.String>) strList25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema15.setExtensions(strMap28);
        java.lang.String str30 = strComparableSchema15.getPattern();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema15.xml(xML31);
        java.util.List<java.lang.String> strList33 = schema32.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema14.required(strList33);
        java.lang.String str35 = schema34.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test00583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00583");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        java.lang.String str23 = schema16.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        schema16.setMaximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test00584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00584");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.title("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00585");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        schema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML25 = schema20.getXml();
        schema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema20.writeOnly((java.lang.Boolean) false);
        schema20.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(xML25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00586");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        java.lang.String str20 = schema14.getType();
        schema14.setFormat("default");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test00587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00587");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional4.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        strComparableSchema6.setExtensions(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema9.setName("hi!");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.name("Optional.empty");
        schema14.setName("Optional.empty");
        java.lang.String str17 = schema14.get$ref();
        boolean boolean18 = tagSetOptional4.equals((java.lang.Object) str17);
        boolean boolean19 = tagSetOptional4.isPresent();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray26);
        java.lang.String[] strArray28 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        io.swagger.oas.models.tags.Tag[] tagArray30 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet31 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet31, tagArray30);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet33 = tagSetOptional29.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet31);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional27.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet31);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional27.get();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional43 = io.swagger.jaxrs2.OperationParser.getTags(strArray42);
        java.lang.String[] strArray44 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional45 = io.swagger.jaxrs2.OperationParser.getTags(strArray44);
        io.swagger.oas.models.tags.Tag[] tagArray46 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet47 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet47, tagArray46);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional45.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet47);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional43.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet47);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet51 = tagSetOptional27.orElse(tagSet50);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet52 = tagSetOptional4.orElse(tagSet51);
        boolean boolean53 = tagSetOptional4.isPresent();
        java.lang.String str54 = tagSetOptional4.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(tagSetOptional27);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNotNull(tagArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(tagSet33);
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(tagSetOptional43);
        org.junit.Assert.assertNotNull(tagSetOptional45);
        org.junit.Assert.assertNotNull(tagArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(tagSet51);
        org.junit.Assert.assertNotNull(tagSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str54, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test00588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00588");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema0.xml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema34.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test00589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00589");
        java.util.Optional<java.util.Map<java.lang.String, io.swagger.oas.models.links.Link>> strMapOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strMapOptional0);
    }

    @Test
    public void test00590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00590");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        schema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema18.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema28.setMinLength((java.lang.Integer) 0);
        strComparableSchema18.setExample((java.lang.Object) strComparableSchema28);
        java.lang.String str33 = strComparableSchema28.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        schema38.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema38.name("Optional.empty");
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema42.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema28.required((java.util.List<java.lang.String>) strList45);
        schema48.setExclusiveMaximum((java.lang.Boolean) false);
        schema11.setExample((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test00591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00591");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        java.math.BigDecimal bigDecimal23 = schema16.getMaximum();
        schema16.setMinItems((java.lang.Integer) 0);
        java.lang.Integer int26 = schema16.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test00592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00592");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema8.getTitle();
        java.lang.Integer int16 = strComparableSchema8.getMinProperties();
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.xml(xML18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setFormat("Optional[[]]");
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minimum(bigDecimal23);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00593");
        io.swagger.oas.models.media.Schema<java.util.List<java.lang.String>> strListSchema0 = new io.swagger.oas.models.media.Schema<java.util.List<java.lang.String>>();
        java.lang.Class<?> wildcardClass1 = strListSchema0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00594");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = schema17.getMinimum();
        java.lang.Boolean boolean19 = schema17.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test00595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00595");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema25.setMinLength((java.lang.Integer) 0);
        strComparableSchema15.setExample((java.lang.Object) strComparableSchema25);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema25.minimum(bigDecimal30);
        schema10.addExtension("", (java.lang.Object) strComparableSchema25);
        java.lang.Boolean boolean33 = strComparableSchema25.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = strComparableSchema25.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(externalDocumentation34);
    }

    @Test
    public void test00596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00596");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int15 = schema4.getMinProperties();
        schema4.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00597");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.XML xML26 = null;
        schema16.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema28.format("");
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema16.additionalProperties(schema42);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema16.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.discriminator(discriminator51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema54.pattern("");
        schema58.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        strComparableSchema62.setExtensions(strMap63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema62.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema68 = schema66.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.pattern("");
        io.swagger.oas.models.media.Schema schema74 = schema68.not(schema73);
        java.lang.Boolean boolean75 = schema73.getUniqueItems();
        schema73.setUniqueItems((java.lang.Boolean) true);
        schema58.addExtension("", (java.lang.Object) schema73);
        schema58.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema82.minimum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema82.pattern("");
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema82.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation89 = strComparableSchema82.getExternalDocs();
        io.swagger.oas.models.media.Schema schema90 = schema58.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema82);
        schema52.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "Optional.empty");
        java.lang.Object obj92 = schema52.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(externalDocumentation89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test00598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00598");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        java.lang.Boolean boolean32 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema48 = schema46.type("default");
        io.swagger.oas.models.media.Schema schema49 = schema46.getAdditionalProperties();
        schema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setName("hi!");
        strComparableSchema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema52.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema46.example((java.lang.Object) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema52.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema52.setNullable((java.lang.Boolean) true);
        strComparableSchema33.setDefault((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.pattern("");
        strComparableSchema69.setDescription("default");
        java.lang.Integer int76 = strComparableSchema69.getMaxItems();
        java.lang.Boolean boolean77 = strComparableSchema69.getWriteOnly();
        java.math.BigDecimal bigDecimal78 = strComparableSchema69.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema69.externalDocs(externalDocumentation79);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema69.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema68.additionalProperties(schema82);
        schema25.setNot(schema68);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema68.multipleOf(bigDecimal85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test00599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00599");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setName("hi!");
        strComparableSchema43.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML49 = null;
        strComparableSchema43.setXml(xML49);
        java.lang.Boolean boolean51 = strComparableSchema43.getNullable();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.$ref("hi!");
        java.math.BigDecimal bigDecimal54 = null;
        strComparableSchema43.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema38.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int59 = strComparableSchema43.getMaxItems();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema61.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test00600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00600");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test00601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00601");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test00602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00602");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema25.setMinLength((java.lang.Integer) 0);
        strComparableSchema15.setExample((java.lang.Object) strComparableSchema25);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema25.minimum(bigDecimal30);
        schema10.addExtension("", (java.lang.Object) strComparableSchema25);
        strComparableSchema25.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test00603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00603");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema25.getDiscriminator();
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList32 = schema25.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test00604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00604");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        io.swagger.oas.models.media.Schema schema21 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema14.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.$ref("");
        java.lang.Integer int33 = strComparableSchema27.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema23.example((java.lang.Object) discriminator34);
        schema35.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema35.name("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test00605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00605");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = schema25.addRequiredItem("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema25.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema25.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema39.setName("hi!");
        strComparableSchema39.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML45 = null;
        strComparableSchema39.setXml(xML45);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean55 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean57 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        java.math.BigDecimal bigDecimal59 = strComparableSchema39.getMinimum();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema62 = schema25.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test00606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00606");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        strComparableSchema0.setDiscriminator(discriminator7);
        java.lang.Integer int9 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema11.setExternalDocs(externalDocumentation12);
        java.lang.Object obj14 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int17 = schema11.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema19.setExternalDocs(externalDocumentation20);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = schema19.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparableList22);
    }

    @Test
    public void test00607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00607");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str17 = schema16.getTitle();
        java.lang.Boolean boolean18 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.format("");
        java.lang.Boolean boolean23 = schema20.getExclusiveMinimum();
        schema20.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test00608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00608");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema22 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean23 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema24 = schema12.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int25 = schema24.getMinLength();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(schema24);
    }

    @Test
    public void test00609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00609");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setFormat("hi!");
        io.swagger.oas.models.media.XML xML9 = strComparableSchema0.getXml();
        java.lang.Boolean boolean10 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.externalDocs(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00610");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00611");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00612");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        schema10.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        strComparableSchema15.setDescription("default");
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.required((java.util.List<java.lang.String>) strList25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema15.setExtensions(strMap28);
        java.lang.String str30 = strComparableSchema15.getPattern();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema15.xml(xML31);
        java.util.List<java.lang.String> strList33 = schema32.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema14.required(strList33);
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test00613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00613");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.lang.String str8 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.minimum(bigDecimal14);
        schema15.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema18 = schema15.getNot();
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList21 = null;
        schema20.setRequired(strList21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        boolean boolean35 = schema27.equals((java.lang.Object) bigDecimal33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema27.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema44 = schema42.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.pattern("");
        io.swagger.oas.models.media.Schema schema50 = schema44.not(schema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema27.addProperties("", schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = null;
        strComparableSchema61.setExtensions(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema61.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema64.minimum(bigDecimal66);
        boolean boolean68 = schema60.equals((java.lang.Object) bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setName("hi!");
        strComparableSchema69.setNot((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema69.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema69.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema69.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema69.format("");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.multipleOf(bigDecimal84);
        java.lang.String[] strArray91 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        io.swagger.oas.models.media.Schema schema94 = schema85.required((java.util.List<java.lang.String>) strList92);
        schema60.setRequired((java.util.List<java.lang.String>) strList92);
        schema27.setRequired((java.util.List<java.lang.String>) strList92);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap97 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema98 = schema20.properties(strMap97);
        strComparableSchema0.setProperties(strMap97);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test00614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00614");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.$ref("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema20.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str37 = schema36.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test00615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00615");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        java.lang.String str6 = strComparableSchema0.toString();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str6, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00616");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        schema22.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema22.getExternalDocs();
        java.lang.Integer int26 = schema22.getMaxItems();
        java.lang.Object obj27 = null;
        schema22.setDefault(obj27);
        java.lang.String[] strArray33 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional34.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema39.setName("hi!");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.name("Optional.empty");
        schema44.setName("Optional.empty");
        java.lang.String str47 = schema44.get$ref();
        boolean boolean48 = tagSetOptional34.equals((java.lang.Object) str47);
        schema22.addExtension("", (java.lang.Object) tagSetOptional34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int53 = strComparableSchema50.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.pattern("");
        java.lang.String str61 = strComparableSchema56.getFormat();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema56.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setName("hi!");
        strComparableSchema64.setNot((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema64.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema64.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema64.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = null;
        strComparableSchema77.setExtensions(strMap78);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema80);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema80.minimum(bigDecimal82);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema80.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema87 = schema85.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList89 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean90 = strComparableList89.add((java.lang.Comparable<java.lang.String>) "");
        schema87.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        schema76.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        strComparableSchema56.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        schema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        schema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList89);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test00617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00617");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        java.lang.String str22 = schema14.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test00618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00618");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setName("hi!");
        strComparableSchema37.setNot((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema37.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema37.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema47.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema54.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema54.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema54.format("");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.discriminator(discriminator71);
        java.lang.String[] strArray75 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema72.setRequired((java.util.List<java.lang.String>) strList76);
        schema47.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = schema36.required((java.util.List<java.lang.String>) strList76);
        schema36.setName("default");
        java.lang.Boolean boolean83 = schema36.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test00619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00619");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        schema30.setMinLength((java.lang.Integer) 1);
        schema30.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00620");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00621");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema16.name("");
        schema49.setFormat("hi!");
        java.lang.Integer int52 = schema49.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test00622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00622");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        java.lang.String str9 = schema4.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setMinLength((java.lang.Integer) 0);
        strComparableSchema10.setExample((java.lang.Object) strComparableSchema20);
        java.lang.String str25 = strComparableSchema20.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema30.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.name("Optional.empty");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema20.required((java.util.List<java.lang.String>) strList37);
        schema4.setDefault((java.lang.Object) strComparableSchema20);
        io.swagger.oas.models.media.XML xML42 = null;
        strComparableSchema20.setXml(xML42);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test00623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00623");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.lang.Boolean boolean11 = schema8.getUniqueItems();
        java.lang.Integer int12 = schema8.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test00624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00624");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMinimum(bigDecimal10);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test00625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00625");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.description("Optional.empty");
        java.lang.Boolean boolean15 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00626");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj23 = schema22.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema22.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema33 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        boolean boolean34 = schema15.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema36 = schema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str39 = schema15.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test00627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00627");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.maximum(bigDecimal20);
        java.lang.Integer int22 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.maximum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00628");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML9 = schema4.getXml();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.minimum(bigDecimal10);
        schema11.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        schema18.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema34 = schema28.not(schema33);
        java.lang.Boolean boolean35 = schema33.getUniqueItems();
        schema33.setUniqueItems((java.lang.Boolean) true);
        schema18.addExtension("", (java.lang.Object) schema33);
        schema18.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema42.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = strComparableSchema42.getExternalDocs();
        io.swagger.oas.models.media.Schema schema50 = schema18.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.minimum(bigDecimal62);
        boolean boolean64 = schema56.equals((java.lang.Object) bigDecimal62);
        io.swagger.oas.models.media.Schema schema66 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema67 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema56.setExample((java.lang.Object) tagSetOptionalSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        strComparableSchema69.setExtensions(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema72.setName("hi!");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema78 = schema56.not(schema77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        io.swagger.oas.models.media.Schema schema81 = schema18.addProperties("", schema78);
        java.lang.Boolean boolean82 = schema18.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema18.getExtensions();
        schema11.setExtensions(strMap83);
        java.lang.Class<?> wildcardClass85 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test00629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00629");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        schema6.setName("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.example(obj26);
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema36.not(schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema46.name("hi!");
        io.swagger.oas.models.media.Schema schema55 = schema53.pattern("");
        java.lang.String[] strArray57 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        io.swagger.oas.models.media.Schema schema60 = schema55.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema61 = schema42.required((java.util.List<java.lang.String>) strList58);
        schema29.setRequired((java.util.List<java.lang.String>) strList58);
        schema6.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema6.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        schema6.setDiscriminator(discriminator66);
        java.lang.Integer int68 = schema6.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test00630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00630");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema19.setName("hi!");
        strComparableSchema19.setName("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema19.setMaximum(bigDecimal25);
        java.lang.String str27 = strComparableSchema19.getDescription();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema7.additionalProperties(schema29);
        schema30.set$ref("default");
        schema4.setNot(schema30);
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        schema35.setExternalDocs(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00631");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.String str7 = strComparableSchema0.getTitle();
        strComparableSchema0.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema13.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test00632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00632");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema13.xml(xML20);
        strComparableSchema13.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00633");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.lang.Integer int23 = strComparableSchema3.getMaxItems();
        java.lang.Class<?> wildcardClass24 = strComparableSchema3.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test00634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00634");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema7 = schema5.description("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.$ref("Optional[[]]");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00635");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema16.setTitle("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test00636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00636");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.example((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema23.$ref("hi!");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema23.minimum(bigDecimal31);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema23);
        strComparableSchema23.setType("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test00637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00637");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = schema19.getEnum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test00638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00638");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema12.getTitle();
        java.lang.String str39 = schema12.getTitle();
        schema12.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test00639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00639");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema6.set$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema6.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00640");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00641");
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(genericDeclarationOptional0);
    }

    @Test
    public void test00642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00642");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet7 = tagSetOptional6.get();
        boolean boolean8 = tagSetOptional6.isPresent();
        java.lang.Object obj9 = null;
        boolean boolean10 = tagSetOptional6.equals(obj9);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test00643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00643");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.minimum(bigDecimal14);
        schema15.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema18 = schema6.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema15.name("");
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00644");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00645");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema13.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema18.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema18.format("");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.multipleOf(bigDecimal33);
        strComparableSchema13.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema36 = schema9.example((java.lang.Object) strComparableSchema13);
        strComparableSchema13.setType("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Integer int39 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        strComparableSchema13.setDiscriminator(discriminator40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test00646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00646");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema25.setName("hi!");
        strComparableSchema25.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML31 = null;
        strComparableSchema25.setXml(xML31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.pattern("");
        io.swagger.oas.models.media.Schema schema45 = schema39.not(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        schema50.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema50.name("Optional.empty");
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        schema54.setRequired((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema60 = schema39.required((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema25.required((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema62 = schema12.required((java.util.List<java.lang.String>) strList57);
        java.lang.String str63 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional.empty" + "'", str63, "Optional.empty");
    }

    @Test
    public void test00647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00647");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        schema23.setMinItems((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema23.getExtensions();
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema36.not(schema41);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema44.title("");
        schema23.setDefault((java.lang.Object) schema44);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema23.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator52);
    }

    @Test
    public void test00648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00648");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        java.util.List<java.lang.String> strList22 = schema20.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test00649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00649");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        schema4.setMaxItems((java.lang.Integer) 100);
        java.lang.Integer int19 = schema4.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema4.maxProperties((java.lang.Integer) 10);
        schema4.setMaxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        schema30.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema40 = schema38.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema41.pattern("");
        io.swagger.oas.models.media.Schema schema46 = schema40.not(schema45);
        java.lang.Boolean boolean47 = schema45.getUniqueItems();
        schema45.setUniqueItems((java.lang.Boolean) true);
        schema30.addExtension("", (java.lang.Object) schema45);
        schema30.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema54.pattern("");
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema54.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = strComparableSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema30.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        strComparableSchema69.setExtensions(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema72.minimum(bigDecimal74);
        boolean boolean76 = schema68.equals((java.lang.Object) bigDecimal74);
        io.swagger.oas.models.media.Schema schema78 = schema68.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema79 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema68.setExample((java.lang.Object) tagSetOptionalSchema79);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = null;
        strComparableSchema81.setExtensions(strMap82);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema81.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema84);
        strComparableSchema84.setName("hi!");
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema84.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema90 = schema68.not(schema89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.properties(strMap91);
        io.swagger.oas.models.media.Schema schema93 = schema30.addProperties("", schema90);
        java.lang.Boolean boolean94 = schema30.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = schema30.getExtensions();
        schema4.setExtensions(strMap95);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test00650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00650");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
    }

    @Test
    public void test00651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00651");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema4.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema28 = schema26.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        schema9.setProperties(strMap29);
        java.math.BigDecimal bigDecimal31 = null;
        schema9.setMaximum(bigDecimal31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test00652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00652");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema0.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.externalDocs(externalDocumentation36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = strComparableSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
    }

    @Test
    public void test00653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00653");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) false);
        schema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema19.format("default");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00654");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        schema32.setMaxItems((java.lang.Integer) 100);
        java.lang.String str47 = schema32.get$ref();
        schema12.setExample((java.lang.Object) schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        java.lang.String str54 = strComparableSchema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema58.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML61 = schema58.getXml();
        java.lang.Integer int62 = schema58.getMinLength();
        schema32.setDefault((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema65 = schema32.writeOnly((java.lang.Boolean) true);
        schema32.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test00655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00655");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet9 = tagSetOptional8.get();
        boolean boolean10 = tagSetOptional8.isPresent();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test00656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00656");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.minimum(bigDecimal7);
        java.lang.Boolean boolean9 = schema6.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test00657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00657");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("", schema45);
        java.lang.Integer int47 = schema46.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test00658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00658");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        io.swagger.oas.models.media.Schema schema21 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema14.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.$ref("");
        java.lang.Integer int33 = strComparableSchema27.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema23.example((java.lang.Object) discriminator34);
        java.lang.Boolean boolean36 = schema23.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
    }

    @Test
    public void test00659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00659");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.minimum(bigDecimal14);
        schema15.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema18 = schema6.not(schema15);
        schema6.setUniqueItems((java.lang.Boolean) true);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray27);
        java.lang.String str29 = tagSetOptional28.toString();
        java.lang.String[] strArray36 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        java.lang.String[] strArray38 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional39 = io.swagger.jaxrs2.OperationParser.getTags(strArray38);
        io.swagger.oas.models.tags.Tag[] tagArray40 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet41 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet41, tagArray40);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet43 = tagSetOptional39.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet41);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional37.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet41);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional28.orElse(tagSet44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minimum(bigDecimal56);
        boolean boolean58 = schema50.equals((java.lang.Object) bigDecimal56);
        io.swagger.oas.models.media.Schema schema60 = schema50.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema61 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema50.setExample((java.lang.Object) tagSetOptionalSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema66.setName("hi!");
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema72 = schema50.not(schema71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        schema72.set$ref("");
        boolean boolean77 = tagSetOptional28.equals((java.lang.Object) schema72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        strComparableSchema78.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema78.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema81);
        schema82.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema86 = schema82.name("Optional.empty");
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        schema86.setRequired((java.util.List<java.lang.String>) strList89);
        schema72.setRequired((java.util.List<java.lang.String>) strList89);
        schema6.setRequired((java.util.List<java.lang.String>) strList89);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(tagSetOptional28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str29, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNotNull(tagSetOptional39);
        org.junit.Assert.assertNotNull(tagArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(tagSet43);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test00660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00660");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema18.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00661");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        schema35.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean41 = schema35.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test00662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00662");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional7.orElse(tagSet29);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.get();
        java.lang.String[] strArray35 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray35);
        java.lang.String str37 = tagSetOptional36.toString();
        java.lang.String str38 = tagSetOptional36.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional36.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional36.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet41 = tagSetOptional7.orElse(tagSet40);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional49 = io.swagger.jaxrs2.OperationParser.getTags(strArray48);
        java.lang.String[] strArray50 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        io.swagger.oas.models.tags.Tag[] tagArray52 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet53 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet53, tagArray52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional49.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet57 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray58 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap59 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray58);
        boolean boolean61 = tagSetOptional7.equals((java.lang.Object) strMap60);
        boolean boolean62 = tagSetOptional7.isPresent();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet63 = tagSetOptional7.get();
        java.lang.String str64 = tagSetOptional7.toString();
        boolean boolean65 = tagSetOptional7.isPresent();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str37, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str38, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(tagSet41);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(tagSetOptional49);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(tagArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(tagSet57);
        org.junit.Assert.assertNotNull(linkParameterArray58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(tagSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str64, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test00663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00663");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema26.setName("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.name("Optional.empty");
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema33.$ref("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema39.addRequiredItem("Optional.empty");
        schema39.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.minimum(bigDecimal44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = schema45.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setName("hi!");
        strComparableSchema47.setNot((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema47.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema47.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.minimum(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = schema57.getMaximum();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema57.maximum(bigDecimal61);
        schema62.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema62.deprecated((java.lang.Boolean) false);
        schema62.setMaxLength((java.lang.Integer) 0);
        schema45.setExample((java.lang.Object) schema62);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema45.maximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema26.not(schema45);
        schema72.setFormat("default");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test00664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00664");
        java.lang.String[] strArray4 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "Optional.empty", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.String[] strArray6 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.tags.Tag[] tagArray8 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet9 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet9, tagArray8);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet11 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet9);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet12 = tagSetOptional5.orElse(tagSet11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema27.maxProperties((java.lang.Integer) 100);
        schema30.setReadOnly((java.lang.Boolean) false);
        schema30.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema30.getExternalDocs();
        java.util.List<java.lang.String> strList36 = schema30.getRequired();
        boolean boolean37 = tagSetOptional5.equals((java.lang.Object) strList36);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(tagSet11);
        org.junit.Assert.assertNotNull(tagSet12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test00665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00665");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        java.lang.Class<?> wildcardClass6 = schema5.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional7 = java.util.Optional.of(wildcardClass6);
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional8 = java.util.Optional.ofNullable(wildcardClass6);
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional9 = java.util.Optional.of((java.lang.reflect.AnnotatedElement) wildcardClass6);
        java.util.Optional<java.lang.reflect.Type> typeOptional10 = java.util.Optional.ofNullable((java.lang.reflect.Type) wildcardClass6);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClassOptional7);
        org.junit.Assert.assertNotNull(wildcardClassOptional8);
        org.junit.Assert.assertNotNull(annotatedElementOptional9);
        org.junit.Assert.assertNotNull(typeOptional10);
    }

    @Test
    public void test00666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00666");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional11 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<java.util.Map<java.lang.String, io.swagger.oas.models.links.Link>> strMapOptional13 = java.util.Optional.of(strMap12);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(linkArrayOptional11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMapOptional13);
    }

    @Test
    public void test00667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00667");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("");
        schema12.setName("default");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00668");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMaximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test00669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00669");
        java.util.Optional<java.util.Map<java.lang.String, io.swagger.oas.models.links.Link>> strMapOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strMapOptional0);
    }

    @Test
    public void test00670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00670");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("Optional.empty");
        schema19.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        schema9.setExample((java.lang.Object) schema25);
        java.lang.String str27 = schema9.getDescription();
        java.lang.Integer int28 = schema9.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test00671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00671");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        strComparableSchema0.setDiscriminator(discriminator8);
        java.lang.Object obj10 = strComparableSchema0.getExample();
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strComparableSchema0.getExtensions();
        java.math.BigDecimal bigDecimal14 = null;
        strComparableSchema0.setMinimum(bigDecimal14);
        java.lang.Boolean boolean16 = strComparableSchema0.getUniqueItems();
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test00672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00672");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        java.math.BigDecimal bigDecimal11 = schema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema12 = schema8.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema23.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema31 = schema29.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema31.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int36 = strComparableSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.type("hi!");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setName("hi!");
        strComparableSchema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema41.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema41.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema41.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema41.format("");
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.multipleOf(bigDecimal56);
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = schema57.required((java.util.List<java.lang.String>) strList64);
        schema40.setRequired((java.util.List<java.lang.String>) strList64);
        schema31.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema69 = schema8.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.externalDocs(externalDocumentation70);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00673");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean30 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean32 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema14.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList27);
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) strComparableSchema14);
        java.lang.Integer int35 = schema34.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test00674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00674");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setTitle("hi!");
        strComparableSchema3.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test00675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00675");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        java.lang.String str8 = strComparableSchema0.getDescription();
        java.lang.Integer int9 = strComparableSchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test00676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00676");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str17 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableSchema18.getEnum();
        strComparableSchema10.setEnum(strComparableList22);
        schema9.setEnum(strComparableList22);
        schema9.setMinItems((java.lang.Integer) (-1));
        schema9.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema9.externalDocs(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00677");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.name("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema27.setMinLength((java.lang.Integer) 10);
        strComparableSchema10.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.type("hi!");
        java.lang.Boolean boolean33 = strComparableSchema10.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test00678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00678");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema14.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema14.$ref("Optional.empty");
        schema18.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00679");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setDescription("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00680");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int9 = schema4.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test00681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00681");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str17 = schema16.getTitle();
        java.lang.Boolean boolean18 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.format("");
        java.math.BigDecimal bigDecimal23 = null;
        schema20.setMinimum(bigDecimal23);
        java.lang.Boolean boolean25 = schema20.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test00682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00682");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.lang.String str10 = strComparableSchema0.toString();
        java.lang.Class<?> wildcardClass11 = strComparableSchema0.getClass();
        java.util.Optional<java.lang.reflect.Type> typeOptional12 = java.util.Optional.ofNullable((java.lang.reflect.Type) wildcardClass11);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeOptional12);
    }

    @Test
    public void test00683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00683");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML9 = schema4.getXml();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.minimum(bigDecimal10);
        schema11.setExclusiveMinimum((java.lang.Boolean) true);
        schema11.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = schema11.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test00684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00684");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.title("");
        java.lang.String str19 = schema16.toString();
        schema16.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str19, "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test00685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00685");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00686");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxProperties((java.lang.Integer) 10);
        java.lang.String str17 = schema14.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test00687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00687");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema21 = schema16.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = schema21.getFormat();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test00688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00688");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int30 = strComparableSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.type("hi!");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema27.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str35 = strComparableSchema27.getName();
        java.lang.Boolean boolean36 = strComparableSchema27.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        schema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.pattern("");
        strComparableSchema52.setDescription("default");
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema52.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema47.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema27.example((java.lang.Object) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema70);
        schema70.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00689");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema9.title("hi!");
        java.lang.Boolean boolean15 = schema9.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema9.minItems((java.lang.Integer) 0);
        java.lang.String str18 = schema17.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test00690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00690");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = strComparableSchema8.getEnum();
        strComparableSchema0.setEnum(strComparableList12);
        java.lang.Boolean boolean14 = strComparableSchema0.getExclusiveMaximum();
        java.lang.Boolean boolean15 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(strComparableList12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00691");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00692");
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(parameterArrayOptional0);
    }

    @Test
    public void test00693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00693");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str8 = strComparableSchema0.getName();
        java.lang.Boolean boolean9 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList22 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        strComparableSchema25.setDescription("default");
        java.lang.String[] strArray34 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema25.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = schema20.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.example((java.lang.Object) strList35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        strComparableSchema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema41.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema44.setName("hi!");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.name("Optional.empty");
        schema49.setName("Optional.empty");
        schema49.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema49.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema0.addProperties("", schema55);
        schema58.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema58.getAdditionalProperties();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema61);
    }

    @Test
    public void test00694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00694");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema14.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("Optional[[]]");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.discriminator(discriminator23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00695");
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(parameterArrayOptional0);
    }

    @Test
    public void test00696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00696");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        schema5.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int8 = schema5.getMaxProperties();
        schema5.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean15 = schema14.getReadOnly();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00697");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        strComparableSchema12.setMinProperties((java.lang.Integer) (-1));
        strComparableSchema12.setReadOnly((java.lang.Boolean) false);
        strComparableSchema12.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test00698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00698");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        schema22.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test00699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00699");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema27.setMaximum(bigDecimal33);
        java.lang.String str35 = strComparableSchema27.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema23.not(schema37);
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema10.not(schema42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        schema8.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema48 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema8.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema50.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML53 = null;
        schema50.setXml(xML53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test00700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00700");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.lang.String str37 = schema4.getType();
        io.swagger.oas.models.media.Schema schema39 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 100);
        java.lang.Integer int42 = schema41.getMinProperties();
        schema41.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test00701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00701");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) false);
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setName("hi!");
        strComparableSchema18.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML24 = null;
        strComparableSchema18.setXml(xML24);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean34 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean36 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema18.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        schema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test00702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00702");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        schema23.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.minimum(bigDecimal37);
        boolean boolean39 = schema31.equals((java.lang.Object) bigDecimal37);
        io.swagger.oas.models.media.Schema schema41 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema42 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema31.setExample((java.lang.Object) tagSetOptionalSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema53 = schema31.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("default");
        schema23.setAdditionalProperties(schema53);
        schema23.setFormat("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        schema23.setExternalDocs(externalDocumentation59);
        schema23.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test00703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00703");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00704");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.lang.String str37 = schema4.getType();
        io.swagger.oas.models.media.Schema schema39 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 100);
        java.lang.String str42 = schema41.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test00705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00705");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        java.lang.String str26 = strComparableSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema17.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00706");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.pattern("");
        strComparableSchema45.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        strComparableSchema45.setDiscriminator(discriminator52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema45.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema56.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema56.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema56.format("");
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        java.lang.String[] strArray78 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema72.required((java.util.List<java.lang.String>) strList79);
        strComparableSchema45.setRequired((java.util.List<java.lang.String>) strList79);
        schema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.math.BigDecimal bigDecimal84 = null;
        schema30.setMinimum(bigDecimal84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test00707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00707");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.maximum(bigDecimal19);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema12.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
    }

    @Test
    public void test00708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00708");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema3.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema7.getExternalDocs();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
    }

    @Test
    public void test00709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00709");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00710");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema16.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test00711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00711");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Integer int17 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema19.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00712");
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(apiResponseArrayOptional0);
    }

    @Test
    public void test00713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00713");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00714");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        java.lang.String str10 = schema9.getType();
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test00715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00715");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        schema16.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int21 = schema16.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test00716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00716");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema13.setDiscriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        java.lang.Integer int28 = strComparableSchema25.getMinLength();
        io.swagger.oas.models.media.Schema schema29 = schema24.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str30 = schema29.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test00717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00717");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        java.lang.String str26 = strComparableSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.title("hi!");
        strComparableSchema32.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        strComparableSchema48.setExtensions(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema51.minimum(bigDecimal53);
        boolean boolean55 = schema47.equals((java.lang.Object) bigDecimal53);
        io.swagger.oas.models.media.Schema schema57 = schema47.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema47.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str60 = schema59.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.minimum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setName("hi!");
        strComparableSchema62.setNot((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema65.name("hi!");
        java.lang.Integer int73 = schema72.getMaxLength();
        java.lang.Boolean boolean74 = schema72.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML75 = schema72.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.minimum(bigDecimal77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema79.setName("hi!");
        strComparableSchema76.setNot((io.swagger.oas.models.media.Schema) strComparableSchema79);
        strComparableSchema76.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema76.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema88 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema88.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema88.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema92 = schema86.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema88);
        io.swagger.oas.models.media.Schema schema94 = schema92.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema94.getProperties();
        io.swagger.oas.models.media.Schema schema96 = schema72.properties(strMap95);
        schema59.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap95);
        io.swagger.oas.models.media.Schema schema98 = schema42.properties(strMap95);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNull(xML75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test00718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00718");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00719");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema16.setName("hi!");
        strComparableSchema16.setMaxLength((java.lang.Integer) 0);
        schema12.setDefault((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema schema24 = schema12.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = schema24.getProperties();
        io.swagger.oas.models.media.Schema schema29 = schema24.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00720");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        java.lang.String str22 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema24 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        schema8.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMinimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMultipleOf(bigDecimal30);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00721");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test00722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00722");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass23 = schema22.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test00723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00723");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.name("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema27.setMinLength((java.lang.Integer) 10);
        strComparableSchema10.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.type("hi!");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema10.setMaximum(bigDecimal33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema10.setExtensions(strMap35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.externalDocs(externalDocumentation37);
        java.lang.Boolean boolean39 = strComparableSchema10.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema10.externalDocs(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test00724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00724");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema18.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema18.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.pattern("");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema22.getPattern();
        java.lang.String str30 = strComparableSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.description("default");
        schema32.setPattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        strComparableSchema35.setExtensions(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema35.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setMinLength((java.lang.Integer) 0);
        strComparableSchema35.setExample((java.lang.Object) strComparableSchema45);
        java.lang.String str50 = strComparableSchema45.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        schema55.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema55.name("Optional.empty");
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema59.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema45.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema32.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema67 = schema21.required((java.util.List<java.lang.String>) strList62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test00725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00725");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.lang.String str7 = schema6.getName();
        java.lang.String str8 = schema6.getFormat();
        java.lang.Class<?> wildcardClass9 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test00726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00726");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        java.lang.String str12 = strComparableSchema3.getPattern();
        strComparableSchema3.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test00727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00727");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test00728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00728");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        strComparableSchema0.setDiscriminator(discriminator33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00729");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int32 = strComparableSchema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.type("hi!");
        schema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int37 = schema34.getMaxProperties();
        schema34.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.discriminator(discriminator40);
        java.lang.Integer int42 = schema34.getMaxItems();
        schema28.setAdditionalProperties(schema34);
        java.math.BigDecimal bigDecimal44 = schema34.getMinimum();
        schema34.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test00730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00730");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str8 = strComparableSchema0.getName();
        java.lang.Boolean boolean9 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList22 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        strComparableSchema25.setDescription("default");
        java.lang.String[] strArray34 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema25.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = schema20.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.example((java.lang.Object) strList35);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test00731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00731");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        schema64.setExtensions(strMap68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        schema64.setExternalDocs(externalDocumentation70);
        java.lang.Boolean boolean72 = schema64.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test00732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00732");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setTitle("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00733");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.lang.Integer int31 = schema30.getMinProperties();
        schema30.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test00734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00734");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        java.lang.Integer int51 = strComparableSchema3.getMaxLength();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema3.maximum(bigDecimal52);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test00735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00735");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.math.BigDecimal bigDecimal10 = null;
        strComparableSchema3.setMinimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema3.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test00736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00736");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.maximum(bigDecimal6);
        java.lang.String str8 = schema5.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test00737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00737");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int18 = strComparableSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        java.lang.String str26 = strComparableSchema21.getFormat();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema29.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList54 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        schema41.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        strComparableSchema21.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        strComparableSchema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        java.math.BigDecimal bigDecimal62 = null;
        strComparableSchema3.setMaximum(bigDecimal62);
        java.lang.Boolean boolean64 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema3.title("");
        java.lang.Object obj67 = null;
        schema66.setExample(obj67);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test00738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00738");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00739");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.nullable((java.lang.Boolean) false);
        strComparableSchema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.writeOnly((java.lang.Boolean) false);
        schema19.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00740");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        java.lang.Integer int45 = schema44.getMaxItems();
        java.lang.Boolean boolean46 = schema44.getDeprecated();
        io.swagger.oas.models.media.Schema schema48 = schema44.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema48.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test00741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00741");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00742");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMaximum(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test00743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00743");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean11 = schema10.getNullable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test00744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00744");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00745");
        java.util.HashSet<io.swagger.oas.models.tags.Tag> tagSet0 = null;
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = java.util.Optional.ofNullable(tagSet0);
        org.junit.Assert.assertNotNull(tagSetOptional1);
    }

    @Test
    public void test00746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00746");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        io.swagger.oas.annotations.media.Content[] contentArray37 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray37, produces40, produces41, components42);
        io.swagger.oas.models.media.Schema schema44 = schema15.example((java.lang.Object) components42);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal47 = schema46.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(contentArray37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
    }

    @Test
    public void test00747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00747");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema2.minimum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setName("hi!");
        strComparableSchema2.setNot((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema5.name("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("");
        java.lang.String[] strArray16 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        schema14.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.minimum(bigDecimal23);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional32 = io.swagger.jaxrs2.OperationParser.getTags(strArray31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema33.format("");
        boolean boolean48 = tagSetOptional32.equals((java.lang.Object) schema47);
        java.lang.String[] strArray49 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional50 = io.swagger.jaxrs2.OperationParser.getTags(strArray49);
        io.swagger.oas.models.tags.Tag[] tagArray51 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet52 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet52, tagArray51);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet54 = tagSetOptional50.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional32.orElse(tagSet54);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional32.get();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional61 = io.swagger.jaxrs2.OperationParser.getTags(strArray60);
        java.lang.String str62 = tagSetOptional61.toString();
        java.lang.String str63 = tagSetOptional61.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet64 = tagSetOptional61.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet65 = tagSetOptional61.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet66 = tagSetOptional32.orElse(tagSet65);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional74 = io.swagger.jaxrs2.OperationParser.getTags(strArray73);
        java.lang.String[] strArray75 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional76 = io.swagger.jaxrs2.OperationParser.getTags(strArray75);
        io.swagger.oas.models.tags.Tag[] tagArray77 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet78 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet78, tagArray77);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet80 = tagSetOptional76.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet81 = tagSetOptional74.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet82 = tagSetOptional32.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet78);
        io.swagger.oas.models.media.Schema schema83 = schema14.example((java.lang.Object) tagSet82);
        boolean boolean84 = tagSetOptional1.equals((java.lang.Object) schema14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<io.swagger.oas.models.tags.Tag> tagSet85 = tagSetOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(tagSetOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(tagSetOptional50);
        org.junit.Assert.assertNotNull(tagArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(tagSet54);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(tagSetOptional61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str62, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str63, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet64);
        org.junit.Assert.assertNotNull(tagSet65);
        org.junit.Assert.assertNotNull(tagSet66);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(tagSetOptional74);
        org.junit.Assert.assertNotNull(tagSetOptional76);
        org.junit.Assert.assertNotNull(tagArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(tagSet80);
        org.junit.Assert.assertNotNull(tagSet81);
        org.junit.Assert.assertNotNull(tagSet82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test00748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00748");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema7 = schema6.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
    }

    @Test
    public void test00749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00749");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj23 = schema22.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema22.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema33 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        boolean boolean34 = schema15.equals((java.lang.Object) schema33);
        schema33.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test00750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00750");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        io.swagger.oas.models.media.Schema schema30 = schema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test00751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00751");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) false);
        schema15.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema15.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = schema23.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean26 = schema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = schema23.deprecated((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test00752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00752");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.maximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00753");
        java.util.Optional<java.lang.Cloneable> cloneableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(cloneableOptional0);
    }

    @Test
    public void test00754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00754");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema14.readOnly((java.lang.Boolean) true);
        schema14.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00755");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema0.setExtensions(strMap13);
        java.lang.String str15 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema19.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.format("");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.multipleOf(bigDecimal34);
        schema33.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str38 = schema33.getType();
        io.swagger.oas.models.media.Schema schema40 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema33.type("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema46.setName("hi!");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.$ref("");
        java.lang.Integer int52 = strComparableSchema46.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator53 = strComparableSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = schema42.example((java.lang.Object) discriminator53);
        schema54.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        // The following exception was thrown during execution in test generation
        try {
            schema18.setExample((java.lang.Object) "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test00756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00756");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.discriminator(discriminator26);
        boolean boolean28 = schema11.equals((java.lang.Object) discriminator26);
        io.swagger.oas.models.media.Schema schema29 = schema11.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema29.setDeprecated((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test00757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00757");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        schema12.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test00758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00758");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        java.lang.Class<?> wildcardClass5 = apiResponseArray0.getClass();
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00759");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        java.lang.String[] strArray18 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema13.setRequired((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema13.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00760");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        schema8.setName("Optional.empty");
        schema8.setNullable((java.lang.Boolean) true);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test00761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00761");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        schema38.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test00762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00762");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.type("Optional.empty");
        schema4.setUniqueItems((java.lang.Boolean) true);
        schema4.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00763");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        io.swagger.oas.models.media.Schema schema18 = schema16.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test00764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00764");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = strComparableSchema3.getMinimum();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00765");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.externalDocs(externalDocumentation13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema9.getProperties();
        schema9.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test00766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00766");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMaximum(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00767");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00768");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.type("default");
        io.swagger.oas.models.media.Schema schema24 = schema22.format("default");
        schema14.setAdditionalProperties(schema24);
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00769");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        java.lang.Integer int13 = schema6.getMaxProperties();
        java.lang.Boolean boolean14 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema6.getAdditionalProperties();
        java.lang.String str16 = schema15.getType();
        java.lang.String str17 = schema15.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test00770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00770");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema12.$ref("");
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMaximum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00771");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        java.lang.String str19 = schema17.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxLength((java.lang.Integer) 100);
        schema46.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("", schema46);
        strComparableSchema3.setNot(schema17);
        java.lang.Integer int51 = strComparableSchema3.getMaxLength();
        java.lang.Object obj52 = strComparableSchema3.getExample();
        strComparableSchema3.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML55 = strComparableSchema3.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(xML55);
    }

    @Test
    public void test00772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00772");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = strComparableSchema0.getMaximum();
        java.lang.Boolean boolean34 = strComparableSchema0.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test00773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00773");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        schema12.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema44.$ref("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema50.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema50.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema50.example(obj55);
        io.swagger.oas.models.media.Schema schema58 = schema56.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema59.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema59.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema62.setName("hi!");
        strComparableSchema62.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML68 = null;
        strComparableSchema62.setXml(xML68);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList75 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean78 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean79 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean80 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema62.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema56.setDefault((java.lang.Object) strComparableSchema62);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema62.exclusiveMaximum((java.lang.Boolean) false);
        schema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema62.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test00774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00774");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        java.lang.Object obj13 = strComparableSchema3.getExample();
        strComparableSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test00775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00775");
        java.util.Optional<java.util.List<java.lang.String>> strListOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strListOptional0);
    }

    @Test
    public void test00776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00776");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00777");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema3.setMaximum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.minimum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = strComparableSchema3.getDiscriminator();
        java.lang.Comparable<java.lang.String> strComparable17 = null;
        strComparableSchema3.addEnumItemObject(strComparable17);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test00778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00778");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema6.set$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema15.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema15.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema20 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema6.example((java.lang.Object) schema20);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema20.getExternalDocs();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00779");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test00780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00780");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.lang.Boolean boolean14 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema12.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test00781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00781");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        java.math.BigDecimal bigDecimal29 = schema12.getMultipleOf();
        schema12.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test00782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00782");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema6.pattern("");
        java.lang.String str11 = strComparableSchema6.getFormat();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray14 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray14);
        io.swagger.oas.models.tags.Tag[] tagArray16 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet17 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet17, tagArray16);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet19 = tagSetOptional15.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet17);
        java.lang.String str20 = tagSetOptional15.toString();
        boolean boolean22 = tagSetOptional15.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema6.example((java.lang.Object) boolean22);
        strComparableSchema6.setPattern("#/components/schemas/");
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(tagArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(tagSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Optional.empty" + "'", str20, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00783");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        schema8.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00784");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setTitle("default");
        java.util.List<java.lang.String> strList20 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema22 = schema12.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.List<java.lang.String> strList27 = null;
        schema26.setRequired(strList27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test00785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00785");
        java.util.Optional<java.lang.String> strOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strOptional0);
    }

    @Test
    public void test00786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00786");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema21.getTitle();
        boolean boolean27 = schema13.equals((java.lang.Object) schema21);
        schema13.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema13.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema13.setDiscriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00787");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.maximum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00788");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.media.Schema schema7 = schema5.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.maxItems((java.lang.Integer) 0);
        strComparableSchema11.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema11.$ref("#/components/schemas/");
        java.lang.Integer int21 = schema20.getMinLength();
        schema20.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema20.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema20.discriminator(discriminator26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema31.name("hi!");
        strComparableSchema31.setDeprecated((java.lang.Boolean) false);
        java.lang.String str41 = strComparableSchema31.getType();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.format("");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.multipleOf(bigDecimal59);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.discriminator(discriminator61);
        java.lang.String[] strArray65 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema62.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema31.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema27.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema71 = schema5.required((java.util.List<java.lang.String>) strList66);
        java.math.BigDecimal bigDecimal72 = schema5.getMultipleOf();
        io.swagger.oas.models.media.Schema schema74 = schema5.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test00789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00789");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00790");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        schema47.setMinLength((java.lang.Integer) 10);
        java.lang.Object obj51 = schema47.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test00791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00791");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.String str29 = schema6.getTitle();
        schema6.setMaxLength((java.lang.Integer) 100);
        schema6.setNullable((java.lang.Boolean) true);
        schema6.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = null;
        schema6.setNot(schema36);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
    }

    @Test
    public void test00792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00792");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        schema25.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema schema35 = schema33.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        io.swagger.oas.models.media.Schema schema41 = schema35.not(schema40);
        java.lang.Boolean boolean42 = schema40.getUniqueItems();
        schema40.setUniqueItems((java.lang.Boolean) true);
        schema25.addExtension("", (java.lang.Object) schema40);
        java.math.BigDecimal bigDecimal46 = schema40.getMaximum();
        io.swagger.oas.models.media.Schema schema47 = schema14.not(schema40);
        java.math.BigDecimal bigDecimal48 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema50 = schema40.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
    }

    @Test
    public void test00793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00793");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema34.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema37.setMinItems((java.lang.Integer) (-1));
        strComparableSchema37.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema37.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test00794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00794");
        io.swagger.oas.annotations.media.Content[] contentArray0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        org.junit.Assert.assertNotNull(contentOptional2);
    }

    @Test
    public void test00795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00795");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int18 = strComparableSchema0.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test00796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00796");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean34 = schema31.getExclusiveMinimum();
        schema31.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test00797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00797");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        schema5.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int8 = schema5.getMaxProperties();
        schema5.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00798");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setName("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int39 = strComparableSchema36.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        java.lang.String str47 = strComparableSchema42.getFormat();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setName("hi!");
        strComparableSchema50.setNot((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema50.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema50.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema50.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema73 = schema71.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList75 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        schema73.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema62.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        strComparableSchema42.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema41.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        strComparableSchema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test00799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00799");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00800");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        strComparableSchema3.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00801");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        schema25.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema25.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.pattern("");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("default");
        io.swagger.oas.models.media.Schema schema51 = schema48.getAdditionalProperties();
        schema48.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        strComparableSchema54.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema54.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema57.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema62.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        schema64.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList66);
        io.swagger.oas.models.media.Schema schema69 = schema48.additionalProperties(schema64);
        io.swagger.oas.models.media.XML xML70 = schema48.getXml();
        java.lang.String str71 = schema48.getDescription();
        io.swagger.oas.models.media.Schema schema73 = schema48.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList74 = schema73.getRequired();
        io.swagger.oas.models.media.Schema schema75 = schema35.additionalProperties(schema73);
        io.swagger.oas.models.media.Schema schema77 = schema73.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema73.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(xML70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test00802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00802");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean30 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean32 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema14.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList27);
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema10.setExternalDocs(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test00803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00803");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema18.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema18.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema33.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00804");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00805");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        schema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        strComparableSchema15.setDescription("default");
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.required((java.util.List<java.lang.String>) strList25);
        io.swagger.oas.models.media.Schema schema28 = schema10.required((java.util.List<java.lang.String>) strList25);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = schema29.getExternalDocs();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test00806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00806");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        schema11.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        java.lang.String str36 = strComparableSchema31.getFormat();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema31.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray39 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        io.swagger.oas.models.tags.Tag[] tagArray41 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet42 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet42, tagArray41);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional40.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet42);
        java.lang.String str45 = tagSetOptional40.toString();
        boolean boolean47 = tagSetOptional40.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema31.example((java.lang.Object) boolean47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema52.minimum(bigDecimal54);
        schema55.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema58 = schema55.getNot();
        io.swagger.oas.models.media.Schema schema60 = schema55.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema31.not(schema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = schema65.type("default");
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema31.addProperties("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", schema67);
        io.swagger.oas.models.media.Schema schema69 = schema11.additionalProperties(schema67);
        schema69.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(tagArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Optional.empty" + "'", str45, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test00807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00807");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        java.lang.String str13 = strComparableSchema3.get$ref();
        java.lang.Integer int14 = strComparableSchema3.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#/components/schemas/" + "'", str13, "#/components/schemas/");
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test00808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00808");
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet0 = null;
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = java.util.Optional.ofNullable(tagSet0);
        org.junit.Assert.assertNotNull(tagSetOptional1);
    }

    @Test
    public void test00809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00809");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.lang.String str10 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema11.format("");
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj29 = null;
        boolean boolean30 = schema28.equals(obj29);
        java.lang.Integer int31 = schema28.getMinItems();
        strComparableSchema0.setAdditionalProperties(schema28);
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test00810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00810");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.$ref("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema20.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setMinLength((java.lang.Integer) 10);
        java.lang.String str41 = schema38.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test00811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00811");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.lang.Boolean boolean13 = strComparableSchema0.getReadOnly();
        java.lang.Class<?> wildcardClass14 = strComparableSchema0.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test00812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00812");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.discriminator(discriminator13);
        schema14.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00813");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.lang.Integer int20 = schema12.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test00814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00814");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.writeOnly((java.lang.Boolean) true);
        schema14.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00815");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00816");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.String str2 = tagSetOptional1.toString();
        java.lang.String[] strArray3 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str5 = tagSetOptional4.toString();
        boolean boolean6 = tagSetOptional1.equals((java.lang.Object) str5);
        boolean boolean7 = tagSetOptional1.isPresent();
        java.lang.Class<?> wildcardClass8 = tagSetOptional1.getClass();
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test00817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00817");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxProperties((java.lang.Integer) (-1));
        schema23.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00818");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.discriminator(discriminator18);
        java.lang.Object obj20 = schema17.getExample();
        schema17.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test00819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00819");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str11 = schema6.getTitle();
        io.swagger.oas.models.media.XML xML12 = schema6.getXml();
        java.math.BigDecimal bigDecimal13 = null;
        schema6.setMaximum(bigDecimal13);
        java.lang.Integer int15 = schema6.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00820");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test00821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00821");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00822");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.discriminator(discriminator34);
        java.lang.String[] strArray38 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        schema35.setRequired((java.util.List<java.lang.String>) strList39);
        schema10.setRequired((java.util.List<java.lang.String>) strList39);
        java.math.BigDecimal bigDecimal43 = schema10.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema10.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(externalDocumentation44);
    }

    @Test
    public void test00823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00823");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        java.util.Optional<java.lang.Object> objOptional19 = java.util.Optional.ofNullable((java.lang.Object) schema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema22 = schema18.description("");
        io.swagger.oas.models.media.Schema schema24 = schema22.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.additionalProperties(schema25);
        schema24.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(objOptional19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test00824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00824");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00825");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        schema17.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        strComparableSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList31 = strComparableSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema17.example((java.lang.Object) schema33);
        schema33.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema33.minItems((java.lang.Integer) 0);
        schema33.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00826");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        schema10.setMinLength((java.lang.Integer) 1);
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test00827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00827");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.getAdditionalProperties();
        strComparableSchema25.setDeprecated((java.lang.Boolean) false);
        strComparableSchema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str34 = schema33.getPattern();
        java.util.List<java.lang.String> strList35 = schema33.getRequired();
        java.lang.String str36 = schema33.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test00828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00828");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00829");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema1 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema1.minimum(bigDecimal2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setName("hi!");
        strComparableSchema1.setNot((io.swagger.oas.models.media.Schema) strComparableSchema4);
        strComparableSchema1.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema1.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema1.pattern("");
        io.swagger.oas.models.media.Schema schema15 = schema13.type("default");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema13.example((java.lang.Object) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema19.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDefault((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = schema35.getMinLength();
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test00830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00830");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.String str7 = strComparableSchema0.getTitle();
        strComparableSchema0.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format("hi!");
        schema11.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00831");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML13 = strComparableSchema3.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
    }

    @Test
    public void test00832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00832");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.XML xML34 = schema33.getXml();
        java.lang.String str35 = schema33.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test00833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00833");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        boolean boolean6 = strComparableSchema0.equals((java.lang.Object) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(externalDocumentation7);
    }

    @Test
    public void test00834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00834");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        java.lang.String str11 = schema6.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema6.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML14 = schema6.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test00835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00835");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        schema12.setType("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList19 = schema18.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema18.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(externalDocumentation20);
    }

    @Test
    public void test00836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00836");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema28.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema31.setDeprecated((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test00837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00837");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray9 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components12);
        strComparableSchema3.setDefault((java.lang.Object) components12);
        strComparableSchema3.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(parameterArray9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(parameterListOptional13);
    }

    @Test
    public void test00838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00838");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.externalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = strComparableSchema22.getEnum();
        schema21.setEnum(strComparableList26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema21.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema44.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema10.setExample((java.lang.Object) strComparableList57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.discriminator(discriminator72);
        schema10.setDefault((java.lang.Object) schema71);
        java.math.BigDecimal bigDecimal75 = null;
        schema71.setMultipleOf(bigDecimal75);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test00839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00839");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        java.math.BigDecimal bigDecimal14 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema12.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test00840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00840");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema11.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema11.minProperties((java.lang.Integer) 100);
        java.lang.String str22 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema24 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        schema8.setDefault((java.lang.Object) schema24);
        java.math.BigDecimal bigDecimal26 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema30.setName("hi!");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema30.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setName("hi!");
        strComparableSchema39.setNot((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema39.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema39.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        schema62.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema51.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema37.addExtension("default", (java.lang.Object) strComparableList64);
        schema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema24.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema24.addRequiredItem("Optional[[]]");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test00841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00841");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.Boolean boolean17 = strComparableSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.format("");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema13.exclusiveMaximum((java.lang.Boolean) false);
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 1);
        java.lang.String str27 = schema26.getDescription();
        java.lang.Integer int28 = schema26.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "default" + "'", str27, "default");
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test00842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00842");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.example((java.lang.Object) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
    }

    @Test
    public void test00843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00843");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema17 = schema14.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML18 = null;
        schema17.setXml(xML18);
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional20 = java.util.Optional.of((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int24 = strComparableSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema32 = schema30.pattern("default");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = schema17.additionalProperties(schema30);
        schema17.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional20);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00844");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema22.not(schema27);
        java.lang.Boolean boolean29 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema27.writeOnly((java.lang.Boolean) false);
        schema14.setNot(schema31);
        schema14.setMaxItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema14.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test00845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00845");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = strComparableSchema18.getMaxLength();
        java.lang.Comparable<java.lang.String> strComparable31 = strComparableSchema18.getDefault();
        java.lang.String str32 = strComparableSchema18.getTitle();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        java.lang.String str37 = schema34.getType();
        java.lang.Integer int38 = schema34.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(strComparable31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test00846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00846");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema18.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema18.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean22 = schema18.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test00847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00847");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema31.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test00848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00848");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        schema4.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test00849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00849");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test00850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00850");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        schema16.setReadOnly((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema23.setFormat("hi!");
        schema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.Boolean boolean33 = strComparableSchema23.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.pattern("");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj42 = schema41.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema41.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setName("hi!");
        strComparableSchema45.setNot((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema52 = schema41.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema54 = schema41.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setName("hi!");
        strComparableSchema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema55.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema67.setName("hi!");
        strComparableSchema67.setName("Optional.empty");
        java.math.BigDecimal bigDecimal73 = null;
        strComparableSchema67.setMaximum(bigDecimal73);
        java.lang.String str75 = strComparableSchema67.getDescription();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema67.maximum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema55.additionalProperties(schema77);
        io.swagger.oas.models.media.Schema schema79 = schema41.additionalProperties(schema78);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema41);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema23.xml(xML81);
        java.lang.String str83 = schema82.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema82.externalDocs(externalDocumentation84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test00851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00851");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str5 = tagSetOptional4.toString();
        java.lang.String str6 = tagSetOptional4.toString();
        boolean boolean7 = tagSetOptional4.isPresent();
        boolean boolean8 = tagSetOptional4.isPresent();
        java.lang.String[] strArray9 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        java.lang.String str11 = tagSetOptional10.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema20.format("");
        boolean boolean35 = tagSetOptional19.equals((java.lang.Object) schema34);
        java.lang.String str36 = tagSetOptional19.toString();
        boolean boolean37 = tagSetOptional19.isPresent();
        java.lang.String[] strArray41 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        java.lang.String str43 = tagSetOptional42.toString();
        java.lang.String str44 = tagSetOptional42.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet46 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet47 = tagSetOptional42.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet48 = tagSetOptional19.orElse(tagSet47);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional10.orElse(tagSet48);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional4.orElse(tagSet49);
        java.lang.String str51 = tagSetOptional4.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str5, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str6, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(tagSetOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str36, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str43, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str44, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNotNull(tagSet46);
        org.junit.Assert.assertNotNull(tagSet47);
        org.junit.Assert.assertNotNull(tagSet48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str51, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test00852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00852");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.tags.Tag[] tagArray2 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet3 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet3, tagArray2);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional1.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet3);
        java.lang.String str6 = tagSetOptional1.toString();
        boolean boolean8 = tagSetOptional1.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema12.title("hi!");
        boolean boolean20 = tagSetOptional1.equals((java.lang.Object) "hi!");
        boolean boolean21 = tagSetOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema34 = schema28.not(schema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema34.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.maximum(bigDecimal41);
        boolean boolean43 = tagSetOptional1.equals((java.lang.Object) schema42);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        java.lang.String[] strArray52 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional53 = io.swagger.jaxrs2.OperationParser.getTags(strArray52);
        io.swagger.oas.models.tags.Tag[] tagArray54 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet55 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet55, tagArray54);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet57 = tagSetOptional53.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet55);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet58 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet55);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet59 = tagSetOptional51.get();
        java.lang.String[] strArray66 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional67 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.lang.String[] strArray68 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray68);
        io.swagger.oas.models.tags.Tag[] tagArray70 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet71 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet71, tagArray70);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet73 = tagSetOptional69.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet71);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet74 = tagSetOptional67.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet71);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet75 = tagSetOptional51.orElse(tagSet74);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional83 = io.swagger.jaxrs2.OperationParser.getTags(strArray82);
        java.lang.String[] strArray84 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional85 = io.swagger.jaxrs2.OperationParser.getTags(strArray84);
        io.swagger.oas.models.tags.Tag[] tagArray86 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet87 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet87, tagArray86);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet89 = tagSetOptional85.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet87);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet90 = tagSetOptional83.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet87);
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional91 = java.util.Optional.ofNullable((java.util.HashSet<io.swagger.oas.models.tags.Tag>) tagSet87);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet92 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet87);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet93 = tagSetOptional1.orElse(tagSet92);
        java.lang.String str94 = tagSetOptional1.toString();
        java.lang.String str95 = tagSetOptional1.toString();
        java.lang.String str96 = tagSetOptional1.toString();
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(tagSetOptional53);
        org.junit.Assert.assertNotNull(tagArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(tagSet57);
        org.junit.Assert.assertNotNull(tagSet58);
        org.junit.Assert.assertNotNull(tagSet59);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(tagSetOptional67);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNotNull(tagArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(tagSet73);
        org.junit.Assert.assertNotNull(tagSet74);
        org.junit.Assert.assertNotNull(tagSet75);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(tagSetOptional83);
        org.junit.Assert.assertNotNull(tagSetOptional85);
        org.junit.Assert.assertNotNull(tagArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(tagSet89);
        org.junit.Assert.assertNotNull(tagSet90);
        org.junit.Assert.assertNotNull(tagSetOptional91);
        org.junit.Assert.assertNotNull(tagSet92);
        org.junit.Assert.assertNotNull(tagSet93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Optional.empty" + "'", str94, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Optional.empty" + "'", str95, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Optional.empty" + "'", str96, "Optional.empty");
    }

    @Test
    public void test00853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00853");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        java.lang.Object obj18 = null;
        boolean boolean19 = schema12.equals(obj18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int23 = strComparableSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        java.lang.String str31 = strComparableSchema26.getFormat();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        strComparableSchema34.setNot((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema34.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema50.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList59 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        schema57.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema46.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        strComparableSchema26.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema25.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        io.swagger.oas.models.media.Schema schema67 = schema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema12.getDiscriminator();
        schema12.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
    }

    @Test
    public void test00854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00854");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.format("default");
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        boolean boolean32 = tagSetOptional16.equals((java.lang.Object) schema31);
        java.lang.String[] strArray33 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        io.swagger.oas.models.tags.Tag[] tagArray35 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet36 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet36, tagArray35);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional34.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet36);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional16.orElse(tagSet38);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional16.get();
        java.lang.String[] strArray44 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional45 = io.swagger.jaxrs2.OperationParser.getTags(strArray44);
        java.lang.String str46 = tagSetOptional45.toString();
        java.lang.String str47 = tagSetOptional45.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet48 = tagSetOptional45.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional45.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional16.orElse(tagSet49);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional58 = io.swagger.jaxrs2.OperationParser.getTags(strArray57);
        java.lang.String[] strArray59 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional60 = io.swagger.jaxrs2.OperationParser.getTags(strArray59);
        io.swagger.oas.models.tags.Tag[] tagArray61 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet62 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet62, tagArray61);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet64 = tagSetOptional60.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet62);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet65 = tagSetOptional58.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet62);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet66 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet62);
        io.swagger.oas.models.media.Schema schema67 = schema4.example((java.lang.Object) tagSet62);
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional68 = java.util.Optional.ofNullable(tagSet62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertNotNull(tagArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(tagSet38);
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(tagSetOptional45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str46, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str47, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(tagSetOptional58);
        org.junit.Assert.assertNotNull(tagSetOptional60);
        org.junit.Assert.assertNotNull(tagArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(tagSet64);
        org.junit.Assert.assertNotNull(tagSet65);
        org.junit.Assert.assertNotNull(tagSet66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(tagSetOptional68);
    }

    @Test
    public void test00855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00855");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "Optional.empty");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test00856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00856");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        schema12.setXml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.minProperties((java.lang.Integer) 100);
        java.lang.Object obj33 = schema32.getExample();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.minimum(bigDecimal34);
        java.lang.String[] strArray40 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema35.setRequired((java.util.List<java.lang.String>) strList41);
        schema12.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.Boolean boolean45 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test00857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00857");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema10.uniqueItems((java.lang.Boolean) true);
        schema10.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00858");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getExclusiveMinimum();
        schema11.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test00859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00859");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional4.get();
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray9);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet11 = tagSetOptional10.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet12 = tagSetOptional4.orElse(tagSet11);
        java.lang.String str13 = tagSetOptional4.toString();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.format("");
        boolean boolean37 = tagSetOptional21.equals((java.lang.Object) schema36);
        java.lang.String[] strArray38 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional39 = io.swagger.jaxrs2.OperationParser.getTags(strArray38);
        io.swagger.oas.models.tags.Tag[] tagArray40 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet41 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet41, tagArray40);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet43 = tagSetOptional39.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet41);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional21.orElse(tagSet43);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional21.get();
        java.lang.String[] strArray49 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional50 = io.swagger.jaxrs2.OperationParser.getTags(strArray49);
        java.lang.String str51 = tagSetOptional50.toString();
        java.lang.String str52 = tagSetOptional50.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet53 = tagSetOptional50.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet54 = tagSetOptional50.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional21.orElse(tagSet54);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional63 = io.swagger.jaxrs2.OperationParser.getTags(strArray62);
        java.lang.String[] strArray64 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.tags.Tag[] tagArray66 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet67 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet67, tagArray66);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet69 = tagSetOptional65.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet67);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet70 = tagSetOptional63.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet67);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet71 = tagSetOptional21.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet67);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray72 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap73 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray72);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray72);
        boolean boolean75 = tagSetOptional21.equals((java.lang.Object) strMap74);
        boolean boolean76 = tagSetOptional21.isPresent();
        java.lang.String[] strArray83 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional84 = io.swagger.jaxrs2.OperationParser.getTags(strArray83);
        java.lang.String[] strArray85 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional86 = io.swagger.jaxrs2.OperationParser.getTags(strArray85);
        io.swagger.oas.models.tags.Tag[] tagArray87 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet88 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet88, tagArray87);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet90 = tagSetOptional86.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet88);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet91 = tagSetOptional84.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet88);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet92 = tagSetOptional21.orElse(tagSet91);
        java.util.Optional<java.lang.Iterable<io.swagger.oas.models.tags.Tag>> tagIterableOptional93 = java.util.Optional.ofNullable((java.lang.Iterable<io.swagger.oas.models.tags.Tag>) tagSet91);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet94 = tagSetOptional4.orElse(tagSet91);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagSet11);
        org.junit.Assert.assertNotNull(tagSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str13, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(tagSetOptional21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(tagSetOptional39);
        org.junit.Assert.assertNotNull(tagArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(tagSet43);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(tagSetOptional50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str51, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str52, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet53);
        org.junit.Assert.assertNotNull(tagSet54);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(tagSetOptional63);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(tagArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(tagSet69);
        org.junit.Assert.assertNotNull(tagSet70);
        org.junit.Assert.assertNotNull(tagSet71);
        org.junit.Assert.assertNotNull(linkParameterArray72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(tagSetOptional84);
        org.junit.Assert.assertNotNull(tagSetOptional86);
        org.junit.Assert.assertNotNull(tagArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(tagSet90);
        org.junit.Assert.assertNotNull(tagSet91);
        org.junit.Assert.assertNotNull(tagSet92);
        org.junit.Assert.assertNotNull(tagIterableOptional93);
        org.junit.Assert.assertNotNull(tagSet94);
    }

    @Test
    public void test00860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00860");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = strComparableSchema3.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema24 = schema22.type("default");
        io.swagger.oas.models.media.Schema schema25 = schema22.getAdditionalProperties();
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList40 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        schema38.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList40);
        io.swagger.oas.models.media.Schema schema43 = schema22.additionalProperties(schema38);
        io.swagger.oas.models.media.XML xML44 = schema22.getXml();
        java.lang.String str45 = schema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        strComparableSchema46.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        strComparableSchema46.setDiscriminator(discriminator53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        strComparableSchema46.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setName("hi!");
        strComparableSchema57.setNot((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema57.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema57.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema57.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema57.format("");
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.multipleOf(bigDecimal72);
        java.lang.String[] strArray79 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema73.required((java.util.List<java.lang.String>) strList80);
        strComparableSchema46.setRequired((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema22.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema3.required((java.util.List<java.lang.String>) strList80);
        schema85.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str88 = schema85.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test00861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00861");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema0.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        strComparableSchema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        schema36.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema36.name("Optional.empty");
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        schema40.setRequired((java.util.List<java.lang.String>) strList43);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList43);
        java.lang.Boolean boolean47 = strComparableSchema24.getDeprecated();
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int51 = strComparableSchema24.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test00862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00862");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        schema23.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.minimum(bigDecimal37);
        boolean boolean39 = schema31.equals((java.lang.Object) bigDecimal37);
        io.swagger.oas.models.media.Schema schema41 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema42 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema31.setExample((java.lang.Object) tagSetOptionalSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema53 = schema31.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("default");
        schema23.setAdditionalProperties(schema53);
        schema23.setFormat("default");
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test00863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00863");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00864");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema4.getProperties();
        java.lang.String str24 = schema4.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test00865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00865");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setName("hi!");
        strComparableSchema24.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML30 = null;
        strComparableSchema24.setXml(xML30);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema24.maximum(bigDecimal44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList48 = schema45.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema49.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str56 = strComparableSchema49.getPattern();
        java.lang.String str57 = strComparableSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema49.description("default");
        schema59.setPattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        strComparableSchema62.setExtensions(strMap63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema62.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema62.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        strComparableSchema69.setExtensions(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema72.setMinLength((java.lang.Integer) 0);
        strComparableSchema62.setExample((java.lang.Object) strComparableSchema72);
        java.lang.String str77 = strComparableSchema72.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        strComparableSchema78.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema78.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema81);
        schema82.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema86 = schema82.name("Optional.empty");
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        schema86.setRequired((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema72.required((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema93 = schema59.required((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema94 = schema45.required((java.util.List<java.lang.String>) strList89);
        boolean boolean95 = schema10.equals((java.lang.Object) schema45);
        schema10.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strComparableList48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test00866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00866");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        java.lang.Integer int7 = schema4.getMinProperties();
        java.lang.Boolean boolean8 = schema4.getWriteOnly();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema4.multipleOf(bigDecimal9);
        schema4.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00867");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        io.swagger.oas.annotations.media.Content[] contentArray37 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray37, produces40, produces41, components42);
        io.swagger.oas.models.media.Schema schema44 = schema15.example((java.lang.Object) components42);
        io.swagger.oas.models.media.Schema schema46 = schema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema44.maxItems((java.lang.Integer) (-1));
        schema44.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(contentArray37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test00868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00868");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema14.multipleOf(bigDecimal33);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional43 = io.swagger.jaxrs2.OperationParser.getTags(strArray42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.format("");
        boolean boolean59 = tagSetOptional43.equals((java.lang.Object) schema58);
        schema58.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema63 = schema58.minLength((java.lang.Integer) 100);
        schema14.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(tagSetOptional43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test00869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00869");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
    }

    @Test
    public void test00870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00870");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.pattern("#/components/schemas/hi!");
        java.lang.Integer int16 = strComparableSchema3.getMinLength();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.maximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00871");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.String str15 = schema14.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test00872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00872");
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = null;
        java.util.Optional<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalOptional1 = java.util.Optional.ofNullable(tagSetOptional0);
        org.junit.Assert.assertNotNull(tagSetOptionalOptional1);
    }

    @Test
    public void test00873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00873");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("Optional.empty");
        java.lang.String str17 = schema14.getType();
        io.swagger.oas.models.media.Schema schema19 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = schema19.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Optional.empty" + "'", str17, "Optional.empty");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
    }

    @Test
    public void test00874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00874");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = strComparableSchema0.getFormat();
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00875");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.String str29 = schema6.getTitle();
        schema6.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema6.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.Boolean boolean42 = strComparableSchema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema38.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema38.getAdditionalProperties();
        strComparableSchema38.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema38.minProperties((java.lang.Integer) 100);
        schema33.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema49);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test00876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00876");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema12.$ref("hi!");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema3.example((java.lang.Object) strComparableSchema12);
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00877");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema14.format("");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema30.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML40 = null;
        schema30.setXml(xML40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema42.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema42.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema42.format("");
        java.lang.Boolean boolean57 = schema56.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema56.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema30.additionalProperties(schema56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema3.not(schema60);
        java.lang.Object obj62 = strComparableSchema3.getExample();
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema3.setMaximum(bigDecimal63);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test00878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00878");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema19 = schema6.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00879");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema16.name("");
        java.lang.String str50 = schema16.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test00880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00880");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int36 = schema31.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test00881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00881");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.minimum(bigDecimal28);
        boolean boolean30 = schema22.equals((java.lang.Object) bigDecimal28);
        io.swagger.oas.models.media.Schema schema32 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        strComparableSchema36.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        strComparableSchema36.setDiscriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema45 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        schema12.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema12.discriminator(discriminator47);
        schema12.setWriteOnly((java.lang.Boolean) false);
        schema12.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test00882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00882");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        schema17.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        strComparableSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList31 = strComparableSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema17.example((java.lang.Object) schema33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema17.setExternalDocs(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test00883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00883");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.pattern("");
        io.swagger.oas.models.media.Schema schema43 = schema37.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema47.name("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("");
        java.lang.String[] strArray58 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema56.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = schema43.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema30.additionalProperties(schema43);
        strComparableSchema0.setAdditionalProperties(schema43);
        schema43.set$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test00884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00884");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        schema12.setNot(schema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema12.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test00885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00885");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 1);
        java.lang.String str18 = schema4.getName();
        schema4.setUniqueItems((java.lang.Boolean) false);
        schema4.setMinProperties((java.lang.Integer) 1);
        java.lang.Integer int23 = schema4.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test00886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00886");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strComparableSchema14.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test00887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00887");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = schema40.minLength((java.lang.Integer) 100);
        schema44.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test00888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00888");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setName("hi!");
        strComparableSchema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema44.name("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("");
        java.lang.String[] strArray55 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema53.required((java.util.List<java.lang.String>) strList56);
        schema53.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal61 = schema53.getMultipleOf();
        io.swagger.oas.models.media.Schema schema63 = schema53.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean64 = schema53.getReadOnly();
        io.swagger.oas.models.media.Schema schema65 = schema53.getNot();
        schema12.setNot(schema53);
        io.swagger.oas.models.media.Schema schema68 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        schema68.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test00889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00889");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = strComparableSchema8.getEnum();
        strComparableSchema0.setEnum(strComparableList12);
        io.swagger.oas.models.media.XML xML14 = null;
        strComparableSchema0.setXml(xML14);
        java.math.BigDecimal bigDecimal16 = strComparableSchema0.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(strComparableList12);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test00890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00890");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema10.setProperties(strMap19);
        schema10.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema10.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00891");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.discriminator(discriminator18);
        schema19.setTitle("#/components/schemas/hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema19.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation22);
    }

    @Test
    public void test00892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00892");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean3 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setName("hi!");
        strComparableSchema4.setNot((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema4.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema4.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema4.pattern("");
        io.swagger.oas.models.media.Schema schema18 = schema16.type("default");
        io.swagger.oas.models.media.Schema schema19 = schema16.getAdditionalProperties();
        schema16.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList34);
        io.swagger.oas.models.media.Schema schema37 = schema16.additionalProperties(schema32);
        io.swagger.oas.models.media.XML xML38 = schema16.getXml();
        java.lang.String str39 = schema16.getDescription();
        io.swagger.oas.models.media.Schema schema40 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema16.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean43 = schema42.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = schema42.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.maximum(bigDecimal46);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        schema2.setAdditionalProperties(schema47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema47.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test00893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00893");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.addRequiredItem("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        schema4.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str10 = schema4.getTitle();
        schema4.setPattern("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test00894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00894");
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(tagSetOptional0);
    }

    @Test
    public void test00895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00895");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema4.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        strComparableSchema18.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        strComparableSchema18.setDiscriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema4.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema18.setMaximum(bigDecimal30);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00896");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.title("");
        strComparableSchema3.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00897");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema37 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML38 = null;
        schema12.setXml(xML38);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test00898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00898");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        schema6.set$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema6.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test00899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00899");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        schema25.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema35 = schema25.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = schema25.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
    }

    @Test
    public void test00900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00900");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema19 = schema17.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema17.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00901");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        io.swagger.oas.models.media.Schema schema33 = schema25.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        schema33.setPattern("");
        java.lang.Boolean boolean38 = schema33.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + true + "'", boolean38, true);
    }

    @Test
    public void test00902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00902");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.String str15 = strComparableSchema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.Object obj27 = schema26.getExample();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.addRequiredItem("Optional.empty");
        strComparableSchema10.setDefault((java.lang.Object) schema26);
        schema26.setMaxLength((java.lang.Integer) (-1));
        schema26.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean37 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema26.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00903");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.minimum(bigDecimal15);
        schema16.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema19 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema21 = schema16.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema21);
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema0.setMinimum(bigDecimal26);
        java.lang.String str28 = strComparableSchema0.getFormat();
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test00904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00904");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.Integer int13 = schema12.getMaxItems();
        java.lang.String str14 = schema12.getType();
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int17 = schema12.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test00905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00905");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        java.lang.Boolean boolean25 = schema19.getNullable();
        java.lang.Object obj26 = schema19.getExample();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema19.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(strComparableList27);
    }

    @Test
    public void test00906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00906");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema20.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test00907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00907");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema12.externalDocs(externalDocumentation41);
        java.lang.Integer int43 = schema12.getMaxItems();
        java.lang.Boolean boolean44 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test00908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00908");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        strComparableSchema3.setDiscriminator(discriminator14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema22.not(schema27);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema33.format("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        java.lang.String[] strArray55 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema49.required((java.util.List<java.lang.String>) strList56);
        schema32.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema32.externalDocs(externalDocumentation60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema32.multipleOf(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema32.name("");
        schema32.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema3.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test00909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00909");
        java.util.Optional<java.lang.reflect.Type> typeOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(typeOptional0);
    }

    @Test
    public void test00910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00910");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00911");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.XML xML20 = null;
        schema12.setXml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.minProperties((java.lang.Integer) 100);
        java.lang.Object obj33 = schema32.getExample();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.minimum(bigDecimal34);
        java.lang.String[] strArray40 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema35.setRequired((java.util.List<java.lang.String>) strList41);
        schema12.setRequired((java.util.List<java.lang.String>) strList41);
        schema12.setMinItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal47 = null;
        schema12.setMinimum(bigDecimal47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test00912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00912");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.XML xML14 = schema12.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test00913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00913");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.annotations.Parameter[] parameterArray9 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray9, components12);
        strComparableSchema3.setDefault((java.lang.Object) components12);
        java.lang.Boolean boolean15 = strComparableSchema3.getExclusiveMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = strComparableSchema3.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(parameterArray9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(parameterListOptional13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strComparableList16);
    }

    @Test
    public void test00914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00914");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test00915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00915");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Integer int17 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00916");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.lang.String str8 = strComparableSchema0.get$ref();
        java.lang.String str9 = strComparableSchema0.getName();
        strComparableSchema0.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test00917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00917");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.maxItems((java.lang.Integer) 0);
        strComparableSchema34.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        schema46.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.name("Optional.empty");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        schema50.setRequired((java.util.List<java.lang.String>) strList53);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        strComparableSchema0.setDiscriminator(discriminator62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test00918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00918");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        strComparableSchema0.addExtension("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
    }

    @Test
    public void test00919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00919");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setName("hi!");
        strComparableSchema24.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML30 = null;
        strComparableSchema24.setXml(xML30);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema24.maximum(bigDecimal44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList48 = schema45.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.pattern("");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema49.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str56 = strComparableSchema49.getPattern();
        java.lang.String str57 = strComparableSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema49.description("default");
        schema59.setPattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        strComparableSchema62.setExtensions(strMap63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema62.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema62.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        strComparableSchema69.setExtensions(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema69.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema72.setMinLength((java.lang.Integer) 0);
        strComparableSchema62.setExample((java.lang.Object) strComparableSchema72);
        java.lang.String str77 = strComparableSchema72.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        strComparableSchema78.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema78.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema81);
        schema82.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema86 = schema82.name("Optional.empty");
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        schema86.setRequired((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema72.required((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema93 = schema59.required((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema94 = schema45.required((java.util.List<java.lang.String>) strList89);
        boolean boolean95 = schema10.equals((java.lang.Object) schema45);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList96 = schema45.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strComparableList48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strComparableList96);
    }

    @Test
    public void test00920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00920");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema22.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema38.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema40.setMaximum(bigDecimal45);
        java.util.List<java.lang.String> strList47 = strComparableSchema40.getRequired();
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema40.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema40.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema27.setExample((java.lang.Object) schema51);
        schema27.setMinProperties((java.lang.Integer) 100);
        java.lang.String str55 = schema27.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Optional.empty" + "'", str55, "Optional.empty");
    }

    @Test
    public void test00921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00921");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet7 = tagSetOptional6.get();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray14);
        java.lang.String str16 = tagSetOptional15.toString();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.lang.String[] strArray25 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray25);
        io.swagger.oas.models.tags.Tag[] tagArray27 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet28 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet28, tagArray27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional26.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet28);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional24.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet28);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet32 = tagSetOptional15.orElse(tagSet31);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        java.lang.String str41 = tagSetOptional40.toString();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional49 = io.swagger.jaxrs2.OperationParser.getTags(strArray48);
        java.lang.String[] strArray50 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        io.swagger.oas.models.tags.Tag[] tagArray52 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet53 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet53, tagArray52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional49.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet57 = tagSetOptional40.orElse(tagSet56);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet58 = tagSetOptional15.orElse(tagSet56);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet59 = tagSetOptional6.orElse(tagSet56);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet60 = tagSetOptional6.get();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str16, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNotNull(tagArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(tagSet32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str41, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(tagSetOptional49);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(tagArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(tagSet57);
        org.junit.Assert.assertNotNull(tagSet58);
        org.junit.Assert.assertNotNull(tagSet59);
        org.junit.Assert.assertNotNull(tagSet60);
    }

    @Test
    public void test00922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00922");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.String str15 = strComparableSchema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.Object obj27 = schema26.getExample();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.addRequiredItem("Optional.empty");
        strComparableSchema10.setDefault((java.lang.Object) schema26);
        schema26.setMaxLength((java.lang.Integer) (-1));
        schema26.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int37 = schema26.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator38 = schema26.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(discriminator38);
    }

    @Test
    public void test00923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00923");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal21 = schema12.getMinimum();
        java.lang.String str22 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test00924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00924");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        strComparableSchema0.setMultipleOf(bigDecimal7);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test00925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00925");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema21.getTitle();
        boolean boolean27 = schema13.equals((java.lang.Object) schema21);
        schema13.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test00926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00926");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema19 = schema16.getNot();
        java.lang.Boolean boolean20 = schema19.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema22.$ref("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema32 = schema28.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.example(obj33);
        schema28.setUniqueItems((java.lang.Boolean) false);
        schema19.addExtension("", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema38.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema38.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema38.pattern("");
        io.swagger.oas.models.media.Schema schema52 = schema50.type("default");
        io.swagger.oas.models.media.Schema schema53 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema19.additionalProperties(schema50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test00927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00927");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList37 = schema15.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema38.setMaxLength((java.lang.Integer) 10);
        strComparableSchema38.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema38.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setName("hi!");
        strComparableSchema51.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema51.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema51.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema63.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema67 = schema61.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema61.properties(strMap68);
        java.util.Optional<java.lang.Object> objOptional70 = java.util.Optional.ofNullable((java.lang.Object) schema69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = schema69.getExtensions();
        schema50.setExample((java.lang.Object) schema69);
        schema15.setNot(schema50);
        io.swagger.oas.models.media.Discriminator discriminator74 = schema15.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(strComparableList37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(objOptional70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(discriminator74);
    }

    @Test
    public void test00928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00928");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        java.lang.Integer int8 = schema4.getMaxItems();
        java.lang.Object obj9 = null;
        schema4.setDefault(obj9);
        java.lang.String[] strArray15 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet17 = tagSetOptional16.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setName("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.name("Optional.empty");
        schema26.setName("Optional.empty");
        java.lang.String str29 = schema26.get$ref();
        boolean boolean30 = tagSetOptional16.equals((java.lang.Object) str29);
        schema4.addExtension("", (java.lang.Object) tagSetOptional16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int35 = strComparableSchema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.pattern("");
        java.lang.String str43 = strComparableSchema38.getFormat();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setName("hi!");
        strComparableSchema46.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema46.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema46.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema59.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema59.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema62);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema62.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = schema67.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList71 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableList71.add((java.lang.Comparable<java.lang.String>) "");
        schema69.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList71);
        schema58.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList71);
        strComparableSchema38.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList71);
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList71);
        schema4.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList71);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSet17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test00929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00929");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema12.setMinimum(bigDecimal22);
        java.lang.String str24 = schema12.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test00930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00930");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setDescription("hi!");
        schema4.setFormat("Optional[[]]");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test00931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00931");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        java.lang.String str11 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.pattern("");
        strComparableSchema13.setDescription("default");
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.required((java.util.List<java.lang.String>) strList23);
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        java.lang.String str27 = strComparableSchema0.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test00932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00932");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        io.swagger.oas.models.media.Schema schema30 = schema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int35 = schema32.getMinProperties();
        java.math.BigDecimal bigDecimal36 = schema32.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(bigDecimal36);
    }

    @Test
    public void test00933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00933");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema4.xml(xML37);
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00934");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional.empty");
        java.lang.Integer int11 = schema6.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test00935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00935");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        strComparableSchema0.setDiscriminator(discriminator7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema0.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        java.lang.Boolean boolean19 = strComparableSchema15.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.format("");
        java.lang.String str22 = schema21.getName();
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema21.title("hi!");
        java.lang.Boolean boolean27 = schema21.getUniqueItems();
        // The following exception was thrown during execution in test generation
        try {
            schema11.setExample((java.lang.Object) boolean27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test00936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00936");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.String str15 = schema14.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test00937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00937");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass36 = schema33.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional37 = java.util.Optional.ofNullable((java.lang.reflect.GenericDeclaration) wildcardClass36);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(genericDeclarationOptional37);
    }

    @Test
    public void test00938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00938");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getNullable();
        schema14.setNot(schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema48.setName("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema32.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = schema14.additionalProperties(schema32);
        schema14.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        strComparableSchema58.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema61.setName("hi!");
        strComparableSchema61.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML67 = null;
        strComparableSchema61.setXml(xML67);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList74 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean77 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean79 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema61.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList74);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema61.maximum(bigDecimal81);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.externalDocs(externalDocumentation83);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList85 = schema82.getEnum();
        schema14.setEnum(strComparableList85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strComparableList85);
    }

    @Test
    public void test00939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00939");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        java.lang.Boolean boolean19 = strComparableSchema13.getDeprecated();
        strComparableSchema13.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = strComparableSchema13.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        boolean boolean35 = schema27.equals((java.lang.Object) bigDecimal33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema27.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema44 = schema42.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.pattern("");
        io.swagger.oas.models.media.Schema schema50 = schema44.not(schema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema27.addProperties("", schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = null;
        strComparableSchema61.setExtensions(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema61.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema64.minimum(bigDecimal66);
        boolean boolean68 = schema60.equals((java.lang.Object) bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setName("hi!");
        strComparableSchema69.setNot((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema69.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema69.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema69.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema69.format("");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.multipleOf(bigDecimal84);
        java.lang.String[] strArray91 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        io.swagger.oas.models.media.Schema schema94 = schema85.required((java.util.List<java.lang.String>) strList92);
        schema60.setRequired((java.util.List<java.lang.String>) strList92);
        schema27.setRequired((java.util.List<java.lang.String>) strList92);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap97 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema98 = strComparableSchema13.properties(strMap97);
        io.swagger.oas.models.media.Discriminator discriminator99 = strComparableSchema13.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(discriminator99);
    }

    @Test
    public void test00940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00940");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema35.$ref("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00941");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        schema17.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.name("Optional.empty");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema21.setRequired((java.util.List<java.lang.String>) strList24);
        io.swagger.oas.models.media.Schema schema27 = schema6.required((java.util.List<java.lang.String>) strList24);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema27.name("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str34 = schema27.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test00942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00942");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        schema25.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema25.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.pattern("");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("default");
        io.swagger.oas.models.media.Schema schema51 = schema48.getAdditionalProperties();
        schema48.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        strComparableSchema54.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema54.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema57.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema62.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        schema64.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList66);
        io.swagger.oas.models.media.Schema schema69 = schema48.additionalProperties(schema64);
        io.swagger.oas.models.media.XML xML70 = schema48.getXml();
        java.lang.String str71 = schema48.getDescription();
        io.swagger.oas.models.media.Schema schema73 = schema48.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList74 = schema73.getRequired();
        io.swagger.oas.models.media.Schema schema75 = schema35.additionalProperties(schema73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = null;
        strComparableSchema76.setExtensions(strMap77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema76.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema79);
        io.swagger.oas.models.media.Schema schema82 = schema80.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema83.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema83.pattern("");
        io.swagger.oas.models.media.Schema schema88 = schema82.not(schema87);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = schema88.getProperties();
        java.math.BigDecimal bigDecimal90 = schema88.getMaximum();
        io.swagger.oas.models.media.Schema schema92 = schema88.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema94 = schema92.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema96 = schema94.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = schema94.getExtensions();
        schema75.setAdditionalProperties(schema94);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(xML70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test00943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00943");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList21 = schema10.getRequired();
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test00944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00944");
        java.util.Optional<io.swagger.oas.annotations.links.LinkParameter[]> linkParameterArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(linkParameterArrayOptional0);
    }

    @Test
    public void test00945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00945");
        java.util.Optional<java.util.Collection<io.swagger.oas.models.tags.Tag>> tagCollectionOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(tagCollectionOptional0);
    }

    @Test
    public void test00946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00946");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        java.lang.String str10 = strComparableSchema0.toString();
        java.lang.String str11 = strComparableSchema0.get$ref();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00947");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.pattern("default");
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) (-1));
        java.lang.String str15 = schema14.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "default" + "'", str15, "default");
    }

    @Test
    public void test00948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00948");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setName("hi!");
        strComparableSchema11.setNot((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.name("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("");
        schema23.setMinLength((java.lang.Integer) 10);
        boolean boolean26 = schema9.equals((java.lang.Object) schema23);
        java.lang.Boolean boolean27 = schema23.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema23.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema31 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema23.maximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + true + "'", boolean27, true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00949");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        schema29.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.minimum(bigDecimal33);
        java.lang.Integer int35 = schema29.getMaxLength();
        io.swagger.oas.models.media.Schema schema36 = schema29.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(schema36);
    }

    @Test
    public void test00950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00950");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema10.setDiscriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema10.multipleOf(bigDecimal25);
        java.lang.Boolean boolean27 = schema26.getDeprecated();
        java.lang.String str28 = schema26.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test00951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00951");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema22.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema22.externalDocs(externalDocumentation28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        schema22.setExternalDocs(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00952");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int13 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.type("hi!");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str18 = strComparableSchema10.getName();
        java.lang.Boolean boolean19 = strComparableSchema10.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        schema30.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.pattern("");
        strComparableSchema35.setDescription("default");
        java.lang.String[] strArray44 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema48 = schema30.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema10.example((java.lang.Object) strList45);
        schema49.setNullable((java.lang.Boolean) true);
        schema8.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) schema49);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test00953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00953");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        io.swagger.oas.models.media.XML xML13 = schema12.getXml();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        schema22.set$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.example((java.lang.Object) schema22);
        schema27.setNullable((java.lang.Boolean) true);
        java.lang.Integer int30 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test00954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00954");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        java.lang.Boolean boolean8 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal9 = strComparableSchema0.getMaximum();
        java.lang.String str10 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "default" + "'", str10, "default");
    }

    @Test
    public void test00955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00955");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema6.title("#/components/schemas/");
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00956");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList4 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList4);
        strComparableSchema0.setTitle("default");
        java.lang.Object obj9 = null;
        strComparableSchema0.setDefault(obj9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00957");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setName("hi!");
        strComparableSchema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema44.name("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("");
        java.lang.String[] strArray55 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema53.required((java.util.List<java.lang.String>) strList56);
        schema53.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal61 = schema53.getMultipleOf();
        io.swagger.oas.models.media.Schema schema63 = schema53.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean64 = schema53.getReadOnly();
        io.swagger.oas.models.media.Schema schema65 = schema53.getNot();
        schema12.setNot(schema53);
        java.math.BigDecimal bigDecimal67 = schema12.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNull(bigDecimal67);
    }

    @Test
    public void test00958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00958");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        io.swagger.oas.models.media.Schema schema12 = schema9.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00959");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int13 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema14.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema23.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML26 = schema23.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema27.setMaximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema32.format("");
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.multipleOf(bigDecimal47);
        strComparableSchema27.setDefault((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema50 = schema23.example((java.lang.Object) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setName("hi!");
        strComparableSchema51.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema51.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema51.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema51.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema51.format("");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.discriminator(discriminator68);
        java.lang.String[] strArray72 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        schema69.setRequired((java.util.List<java.lang.String>) strList73);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList73);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema0.required((java.util.List<java.lang.String>) strList73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test00960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00960");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema1 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema1.minimum(bigDecimal2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setName("hi!");
        strComparableSchema1.setNot((io.swagger.oas.models.media.Schema) strComparableSchema4);
        strComparableSchema1.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema1.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema1.pattern("");
        io.swagger.oas.models.media.Schema schema15 = schema13.type("default");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema13.example((java.lang.Object) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema19.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDefault((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        strComparableSchema36.setDescription("default");
        java.lang.Integer int43 = strComparableSchema36.getMaxItems();
        java.lang.Boolean boolean44 = strComparableSchema36.getWriteOnly();
        java.math.BigDecimal bigDecimal45 = strComparableSchema36.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema36.externalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema35.additionalProperties(schema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema50.setExternalDocs(externalDocumentation51);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema50.readOnly((java.lang.Boolean) true);
        java.lang.Integer int57 = schema56.getMinItems();
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test00961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00961");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str14 = schema10.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator15 = schema10.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(discriminator15);
    }

    @Test
    public void test00962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00962");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.multipleOf(bigDecimal8);
        strComparableSchema0.setMinProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test00963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00963");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema4.setFormat("Optional.empty");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = schema4.getEnum();
        io.swagger.oas.models.media.Schema schema19 = schema4.deprecated((java.lang.Boolean) true);
        schema19.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00964");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        schema6.setUniqueItems((java.lang.Boolean) false);
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test00965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00965");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema8.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema8.get$ref();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema8.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        strComparableSchema28.setDescription("default");
        java.lang.String[] strArray37 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.media.Schema schema41 = schema23.required((java.util.List<java.lang.String>) strList38);
        schema41.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema47.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList56 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        schema54.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema59.pattern("");
        strComparableSchema59.setDescription("default");
        java.lang.String[] strArray68 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema59.required((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema72 = schema54.required((java.util.List<java.lang.String>) strList69);
        schema41.setRequired((java.util.List<java.lang.String>) strList69);
        schema8.setRequired((java.util.List<java.lang.String>) strList69);
        schema8.setTitle("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#/components/schemas/hi!" + "'", str11, "#/components/schemas/hi!");
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test00966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00966");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String str24 = tagSetOptional7.toString();
        boolean boolean25 = tagSetOptional7.isPresent();
        java.lang.String[] strArray29 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional30 = io.swagger.jaxrs2.OperationParser.getTags(strArray29);
        java.lang.String str31 = tagSetOptional30.toString();
        java.lang.String str32 = tagSetOptional30.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet33 = tagSetOptional30.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional30.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional30.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional7.orElse(tagSet35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setName("hi!");
        strComparableSchema37.setNot((io.swagger.oas.models.media.Schema) strComparableSchema40);
        boolean boolean44 = tagSetOptional7.equals((java.lang.Object) strComparableSchema40);
        java.lang.String str45 = strComparableSchema40.toString();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema40.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxItems((java.lang.Integer) 0);
        schema47.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str24, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(tagSetOptional30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str31, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str32, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet33);
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str45, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test00967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00967");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.maximum(bigDecimal10);
        java.lang.Class<?> wildcardClass12 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00968");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = schema38.minItems((java.lang.Integer) 0);
        java.lang.String str42 = schema38.getName();
        schema38.setMaxProperties((java.lang.Integer) 10);
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test00969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00969");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getNullable();
        schema14.setNot(schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema48.setName("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema32.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = schema14.additionalProperties(schema32);
        schema32.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str58 = schema32.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test00970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00970");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema3.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema9 = schema7.externalDocs(externalDocumentation8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
    }

    @Test
    public void test00971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00971");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema11.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = schema16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test00972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00972");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setName("hi!");
        strComparableSchema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema25.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema25.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema25.format("");
        java.lang.Boolean boolean40 = schema39.getWriteOnly();
        java.math.BigDecimal bigDecimal41 = null;
        schema39.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("default");
        io.swagger.oas.models.media.Schema schema49 = schema47.format("default");
        schema39.setAdditionalProperties(schema49);
        schema49.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.minimum(bigDecimal53);
        schema24.setAdditionalProperties(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema24.maxLength((java.lang.Integer) 10);
        schema24.setType("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test00973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00973");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.name("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("");
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema33.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema20.required((java.util.List<java.lang.String>) strList36);
        schema39.set$ref("");
        java.lang.Class<?> wildcardClass42 = schema39.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test00974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00974");
        io.swagger.oas.annotations.links.LinkParameter linkParameter0 = null;
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray1 = new io.swagger.oas.annotations.links.LinkParameter[] { linkParameter0 };
        java.util.Optional<io.swagger.oas.annotations.links.LinkParameter[]> linkParameterArrayOptional2 = java.util.Optional.of(linkParameterArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.String> strMap3 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(linkParameterArray1);
        org.junit.Assert.assertNotNull(linkParameterArrayOptional2);
    }

    @Test
    public void test00975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00975");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maximum(bigDecimal7);
        schema8.setMinProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema8.toString();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00976");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = strComparableSchema0.getMaximum();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test00977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00977");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema21.getTitle();
        boolean boolean27 = schema13.equals((java.lang.Object) schema21);
        schema13.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test00978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00978");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema0.setExtensions(strMap13);
        java.lang.String str15 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema35.setName("hi!");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema35.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList47 = strComparableSchema43.getEnum();
        schema42.setEnum(strComparableList47);
        strComparableSchema22.setEnum(strComparableList47);
        // The following exception was thrown during execution in test generation
        try {
            schema18.setEnum(strComparableList47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(strComparableList47);
    }

    @Test
    public void test00979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00979");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.maxItems((java.lang.Integer) 0);
        strComparableSchema34.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        schema46.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.name("Optional.empty");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        schema50.setRequired((java.util.List<java.lang.String>) strList53);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        schema57.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean60 = schema57.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
    }

    @Test
    public void test00980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00980");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        java.lang.String str21 = schema19.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test00981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00981");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator5 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        strComparableSchema6.setExtensions(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema9);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.pattern("");
        io.swagger.oas.models.media.Schema schema18 = schema12.not(schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setName("hi!");
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema23.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.format("");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.multipleOf(bigDecimal38);
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema39.required((java.util.List<java.lang.String>) strList46);
        schema22.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema22.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema56.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.maxItems((java.lang.Integer) 0);
        strComparableSchema56.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        schema68.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema68.name("Optional.empty");
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema72.setRequired((java.util.List<java.lang.String>) strList75);
        strComparableSchema56.setRequired((java.util.List<java.lang.String>) strList75);
        schema51.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) strList75);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema0.required((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema82 = schema80.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int83 = schema82.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
    }

    @Test
    public void test00982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00982");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.addRequiredItem("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList10 = schema4.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strComparableList10);
    }

    @Test
    public void test00983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00983");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maximum(bigDecimal7);
        strComparableSchema3.setPattern("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test00984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00984");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.name("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("");
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema33.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema20.required((java.util.List<java.lang.String>) strList36);
        schema39.setName("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList54 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList58 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "");
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList58);
        schema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList58);
        io.swagger.oas.models.media.Schema schema63 = schema39.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal64 = null;
        schema63.setMinimum(bigDecimal64);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test00985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00985");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minLength((java.lang.Integer) (-1));
        schema6.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMinimum(bigDecimal9);
        schema6.setType("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test00986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00986");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean34 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema31.setExternalDocs(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test00987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00987");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema15.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema15.format("");
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        java.math.BigDecimal bigDecimal31 = null;
        schema29.setMaximum(bigDecimal31);
        java.lang.Object obj33 = null;
        schema29.setExample(obj33);
        boolean boolean35 = tagSetOptional7.equals((java.lang.Object) schema29);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test00988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00988");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        java.lang.String str9 = schema4.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setMinLength((java.lang.Integer) 0);
        strComparableSchema10.setExample((java.lang.Object) strComparableSchema20);
        java.lang.String str25 = strComparableSchema20.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema30.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.name("Optional.empty");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema20.required((java.util.List<java.lang.String>) strList37);
        schema4.setDefault((java.lang.Object) strComparableSchema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strComparableSchema20.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test00989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00989");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.lang.Integer int7 = schema6.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinProperties();
        java.lang.String str11 = schema9.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00990");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        java.lang.Boolean boolean19 = strComparableSchema13.getDeprecated();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema13.getEnum();
        java.lang.Boolean boolean21 = strComparableSchema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test00991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00991");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinItems();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema27.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema32 = schema31.getNot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test00992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00992");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        schema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.String str19 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema21 = schema10.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMinimum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00993");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj23 = schema22.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema22.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema33 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        boolean boolean34 = schema15.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema36 = schema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = schema15.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test00994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00994");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        java.lang.String str26 = strComparableSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.title("hi!");
        strComparableSchema32.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema schema44 = schema42.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        io.swagger.oas.models.media.XML xML46 = null;
        schema44.setXml(xML46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
    }

    @Test
    public void test00995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00995");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean15 = schema4.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        java.lang.String str21 = strComparableSchema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema16.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema25.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML28 = schema25.getXml();
        io.swagger.oas.models.media.Schema schema30 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.$ref("hi!");
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema36.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema36.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema49 = schema47.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = schema30.additionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema49.exclusiveMinimum((java.lang.Boolean) true);
        schema4.setExample((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal54 = null;
        schema4.setMinimum(bigDecimal54);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test00996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00996");
        java.util.Optional<java.lang.Comparable<java.lang.String>> strComparableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strComparableOptional0);
    }

    @Test
    public void test00997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00997");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        java.lang.String str38 = schema37.getType();
        schema37.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema37.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "default" + "'", str38, "default");
    }

    @Test
    public void test00998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00998");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML11 = schema10.getXml();
        java.lang.Integer int12 = schema10.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test00999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00999");
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(parameterArrayOptional0);
    }

    @Test
    public void test01000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test01000");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setName("hi!");
        strComparableSchema18.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML24 = null;
        strComparableSchema18.setXml(xML24);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean34 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean36 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema18.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        schema12.setDefault((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
    }
}

