import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test01001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        java.lang.String str30 = schema12.getPattern();
        java.lang.Boolean boolean31 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.$ref("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema42 = schema38.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.example(obj43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        schema44.setName("");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema50);
        schema51.setPattern("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema51.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation54);
    }

    @Test
    public void test01002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01002");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.math.BigDecimal bigDecimal49 = schema47.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        java.lang.String str52 = schema47.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test01004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema19 = schema6.name("");
        io.swagger.oas.models.media.Schema schema21 = schema6.$ref("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) (-1));
        schema23.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        schema4.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test01006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01006");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        java.lang.String str24 = schema23.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test01007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01008");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01009");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        java.lang.Boolean boolean8 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test01010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 1);
        schema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.getAdditionalProperties();
        schema12.setMinLength((java.lang.Integer) 0);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        java.lang.String str30 = tagSetOptional29.toString();
        java.lang.String[] strArray37 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional38 = io.swagger.jaxrs2.OperationParser.getTags(strArray37);
        java.lang.String[] strArray39 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        io.swagger.oas.models.tags.Tag[] tagArray41 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet42 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet42, tagArray41);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional40.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet42);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional38.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet42);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet46 = tagSetOptional29.orElse(tagSet45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema47.setExtensions(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minimum(bigDecimal57);
        boolean boolean59 = schema51.equals((java.lang.Object) bigDecimal57);
        io.swagger.oas.models.media.Schema schema61 = schema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema62 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema51.setExample((java.lang.Object) tagSetOptionalSchema62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema67.setName("hi!");
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema73 = schema51.not(schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        schema73.set$ref("");
        boolean boolean78 = tagSetOptional29.equals((java.lang.Object) schema73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = null;
        strComparableSchema79.setExtensions(strMap80);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema79.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema82);
        schema83.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema83.name("Optional.empty");
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        schema87.setRequired((java.util.List<java.lang.String>) strList90);
        schema73.setRequired((java.util.List<java.lang.String>) strList90);
        java.lang.String str94 = schema73.getTitle();
        schema12.setExample((java.lang.Object) str94);
        io.swagger.oas.models.media.Schema schema97 = schema12.maxProperties((java.lang.Integer) (-1));
        java.lang.String str98 = schema12.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str30, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(tagSetOptional38);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(tagArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertNotNull(tagSet46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
    }

    @Test
    public void test01011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema10.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.nullable((java.lang.Boolean) false);
        java.lang.String str21 = schema20.toString();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01012");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01013");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema23.getPattern();
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test01014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01014");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        java.lang.Class<?> wildcardClass27 = contentArray0.getClass();
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01015");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        boolean boolean32 = tagSetOptional16.equals((java.lang.Object) schema31);
        java.lang.String str33 = tagSetOptional16.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet34 = tagSetOptional16.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional16.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional8.orElse(tagSet35);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = java.util.Optional.ofNullable(tagSet35);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional37.get();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str33, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet34);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNotNull(tagSet38);
    }

    @Test
    public void test01016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01016");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str17 = schema16.getTitle();
        java.lang.Boolean boolean18 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema20.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01018");
        java.util.Optional<java.lang.String> strOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strOptional0);
    }

    @Test
    public void test01019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema9.setExternalDocs(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema12.getMultipleOf();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema12.minimum(bigDecimal21);
        java.lang.Integer int23 = schema22.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test01021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
    }

    @Test
    public void test01022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.externalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.name("hi!");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("");
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        java.lang.Object obj35 = schema29.getExample();
        schema15.setDefault(obj35);
        io.swagger.oas.annotations.media.Content[] contentArray37 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray37, produces40, produces41, components42);
        io.swagger.oas.models.media.Schema schema44 = schema15.example((java.lang.Object) components42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        schema44.setDiscriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.pattern("");
        strComparableSchema47.setDescription("default");
        java.lang.String[] strArray56 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema47.required((java.util.List<java.lang.String>) strList57);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema47.setExtensions(strMap60);
        java.lang.String str62 = strComparableSchema47.getPattern();
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema47.xml(xML63);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema47.getAdditionalProperties();
        schema44.setDefault((java.lang.Object) schema65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean67 = schema65.getWriteOnly();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(contentArray37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
    }

    @Test
    public void test01024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01024");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str17 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableSchema18.getEnum();
        strComparableSchema10.setEnum(strComparableList22);
        schema9.setEnum(strComparableList22);
        io.swagger.oas.models.media.Schema schema26 = schema9.minProperties((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema31 = schema29.name("");
        schema29.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML34 = schema29.getXml();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema29.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema40.setName("hi!");
        strComparableSchema40.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML46 = null;
        strComparableSchema40.setXml(xML46);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList53 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean56 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean57 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean58 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList53);
        java.lang.Integer int60 = strComparableSchema40.getMaxItems();
        java.lang.String[] strArray64 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        strComparableSchema40.setRequired((java.util.List<java.lang.String>) strList65);
        schema36.setRequired((java.util.List<java.lang.String>) strList65);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional69 = java.util.Optional.ofNullable((java.util.AbstractList<java.lang.String>) strList65);
        schema23.setRequired((java.util.List<java.lang.String>) strList65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strListOptional69);
    }

    @Test
    public void test01027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        strComparableSchema0.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
    }

    @Test
    public void test01028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01028");
        java.lang.Cloneable cloneable0 = null;
        java.util.Optional<java.lang.Cloneable> cloneableOptional1 = java.util.Optional.ofNullable(cloneable0);
        org.junit.Assert.assertNotNull(cloneableOptional1);
    }

    @Test
    public void test01029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01029");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        schema4.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test01030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01030");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        schema9.setType("Optional.empty");
        schema9.setMaxItems((java.lang.Integer) 0);
        java.lang.String str14 = schema9.getFormat();
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test01031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.lang.Integer int9 = strComparableSchema3.getMaxLength();
        java.lang.String str10 = strComparableSchema3.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.discriminator(discriminator11);
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.$ref("hi!");
        schema14.setNot(schema29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema14.maximum(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        schema32.setMaximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.maxItems((java.lang.Integer) 0);
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional46 = java.util.Optional.empty();
        strComparableSchema40.setDefault((java.lang.Object) tagSetOptional46);
        java.util.Optional<java.lang.Object> objOptional48 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        strComparableSchema54.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema54.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema57.minimum(bigDecimal59);
        boolean boolean61 = schema53.equals((java.lang.Object) bigDecimal59);
        io.swagger.oas.models.media.Schema schema63 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema53.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str66 = schema65.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema65.getExtensions();
        strComparableSchema40.setDefault((java.lang.Object) strMap67);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema40.writeOnly((java.lang.Boolean) false);
        schema32.setDefault((java.lang.Object) schema70);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(tagSetOptional46);
        org.junit.Assert.assertNotNull(objOptional48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test01033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01033");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema12.getTitle();
        java.lang.String str39 = schema12.getTitle();
        java.lang.Integer int40 = schema12.getMinLength();
        schema12.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test01035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str18 = schema4.getName();
        java.lang.Boolean boolean19 = schema4.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test01036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01036");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01037");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean3 = schema2.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
    }

    @Test
    public void test01038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean3 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = schema5.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = schema7.getExclusiveMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList9 = schema7.getEnum();
        java.lang.Boolean boolean10 = schema7.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(strComparableList9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test01039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01039");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema10.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setName("Optional.empty");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema32.setMaximum(bigDecimal38);
        java.lang.String str40 = strComparableSchema32.getDescription();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = schema28.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.format("");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.multipleOf(bigDecimal59);
        schema58.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema58.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setName("hi!");
        strComparableSchema65.setNot((io.swagger.oas.models.media.Schema) strComparableSchema68);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema68.name("hi!");
        io.swagger.oas.models.media.Schema schema77 = schema75.pattern("");
        java.lang.String[] strArray79 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema77.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema83 = schema64.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema43.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.XML xML85 = schema84.getXml();
        schema17.setAdditionalProperties(schema84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(xML85);
    }

    @Test
    public void test01040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        java.lang.String str11 = schema6.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        schema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList24);
        schema6.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList24);
        java.lang.Boolean boolean28 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema6.name("");
        schema30.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = null;
        schema31.setMaximum(bigDecimal36);
        java.lang.Integer int38 = schema31.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01042");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema13.setDiscriminator(discriminator16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema18.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test01044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01044");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        schema4.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setName("hi!");
        strComparableSchema51.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema51.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema51.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema51.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema51.format("");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.String[] strArray73 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = schema67.required((java.util.List<java.lang.String>) strList74);
        schema42.setRequired((java.util.List<java.lang.String>) strList74);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList74);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional79 = java.util.Optional.ofNullable(strList74);
        io.swagger.oas.models.media.Schema schema80 = schema4.required((java.util.List<java.lang.String>) strList74);
        java.lang.String str81 = schema80.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strListOptional79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test01045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01045");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        java.lang.Boolean boolean25 = schema19.getNullable();
        schema19.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema29 = schema19.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass30 = schema19.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test01047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema20.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        java.lang.Integer int30 = strComparableSchema27.getMinLength();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.readOnly((java.lang.Boolean) true);
        strComparableSchema27.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema20.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema37 = schema20.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01048");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.pattern("");
        java.lang.String str10 = strComparableSchema5.getFormat();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema5.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema14.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML17 = schema14.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema14.setProperties(strMap18);
        strComparableSchema0.setNot(schema14);
        schema14.set$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test01049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01049");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        java.lang.String str38 = schema37.getType();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = null;
        schema37.setEnum(strComparableList39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "default" + "'", str38, "default");
    }

    @Test
    public void test01051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema21 = schema15.not(schema20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema15.xml(xML22);
        io.swagger.oas.models.media.Schema schema25 = schema23.writeOnly((java.lang.Boolean) false);
        schema6.setDefault((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema27 = schema25.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema27.setExternalDocs(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        java.lang.Class<?> wildcardClass40 = schema38.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test01053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) false);
        schema15.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema15.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int36 = strComparableSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.type("hi!");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema24.additionalProperties(schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.discriminator(discriminator43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema51 = schema49.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.pattern("");
        io.swagger.oas.models.media.Schema schema57 = schema51.not(schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema51.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = schema51.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.minimum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setName("hi!");
        strComparableSchema62.setNot((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema62.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema62.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema62.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema62.format("");
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.multipleOf(bigDecimal77);
        java.lang.String[] strArray84 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = schema78.required((java.util.List<java.lang.String>) strList85);
        schema61.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema61.externalDocs(externalDocumentation89);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema61.multipleOf(bigDecimal91);
        schema92.setNullable((java.lang.Boolean) false);
        boolean boolean95 = schema42.equals((java.lang.Object) schema92);
        io.swagger.oas.models.media.Schema schema96 = schema15.not(schema92);
        java.math.BigDecimal bigDecimal97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema92.multipleOf(bigDecimal97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        boolean boolean6 = strComparableSchema0.equals((java.lang.Object) 0);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema13.setDiscriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = strComparableSchema13.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test01056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01056");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema25.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = schema32.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
    }

    @Test
    public void test01057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        strComparableSchema3.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        schema16.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01058");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        java.lang.Boolean boolean19 = strComparableSchema13.getDeprecated();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema13.getEnum();
        strComparableSchema13.setFormat("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strComparableList20);
    }

    @Test
    public void test01059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.math.BigDecimal bigDecimal49 = schema47.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        java.lang.Boolean boolean52 = schema47.getNullable();
        schema47.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test01060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        java.lang.String str26 = strComparableSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema32.setName("hi!");
        strComparableSchema32.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.title("hi!");
        strComparableSchema32.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema schema44 = schema42.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        schema44.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
    }

    @Test
    public void test01061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01061");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setName("hi!");
        strComparableSchema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema44.name("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("");
        java.lang.String[] strArray55 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema53.required((java.util.List<java.lang.String>) strList56);
        schema53.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal61 = schema53.getMultipleOf();
        io.swagger.oas.models.media.Schema schema63 = schema53.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean64 = schema53.getReadOnly();
        io.swagger.oas.models.media.Schema schema65 = schema53.getNot();
        schema12.setNot(schema53);
        io.swagger.oas.models.media.Schema schema68 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test01063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01063");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
    }

    @Test
    public void test01064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01064");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema12.format("default");
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        schema22.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01065");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01066");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01067");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean3 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = schema2.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = schema5.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test01068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01068");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        io.swagger.oas.models.media.Schema schema30 = schema24.not(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.name("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema41.pattern("");
        java.lang.String[] strArray45 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema43.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema30.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema17.additionalProperties(schema30);
        java.lang.Object obj51 = schema30.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test01069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        io.swagger.oas.models.media.Schema schema46 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema30.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema48.minProperties((java.lang.Integer) (-1));
        schema50.setNullable((java.lang.Boolean) true);
        schema50.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        schema22.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.pattern("");
        io.swagger.oas.models.media.Schema schema38 = schema32.not(schema37);
        java.lang.Boolean boolean39 = schema37.getUniqueItems();
        schema37.setUniqueItems((java.lang.Boolean) true);
        schema22.addExtension("", (java.lang.Object) schema37);
        schema22.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = strComparableSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = schema22.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        schema16.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) strComparableSchema46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = strComparableSchema46.getProperties();
        strComparableSchema46.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema46.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap56);
    }

    @Test
    public void test01071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        java.lang.Boolean boolean16 = schema14.getReadOnly();
        schema14.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01072");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01073");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean15 = schema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test01074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01074");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass15 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        strComparableSchema3.setType("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        strComparableSchema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional.empty");
        java.lang.String str16 = strComparableSchema3.getPattern();
        java.math.BigDecimal bigDecimal17 = strComparableSchema3.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setName("hi!");
        strComparableSchema27.setNot((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema27.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema37.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.format("");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.multipleOf(bigDecimal59);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.discriminator(discriminator61);
        java.lang.String[] strArray65 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema62.setRequired((java.util.List<java.lang.String>) strList66);
        schema37.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema26.required((java.util.List<java.lang.String>) strList66);
        java.lang.Integer int71 = schema70.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
    }

    @Test
    public void test01077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean3 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = schema5.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = schema5.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema13.$ref("hi!");
        java.lang.Boolean boolean21 = strComparableSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema24.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.format("");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.multipleOf(bigDecimal39);
        java.lang.String[] strArray46 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = schema40.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.XML xML50 = null;
        schema40.setXml(xML50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setName("hi!");
        strComparableSchema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema52.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema52.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema52.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema52.format("");
        java.lang.Boolean boolean67 = schema66.getUniqueItems();
        io.swagger.oas.models.media.Schema schema69 = schema66.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema40.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema13.not(schema70);
        io.swagger.oas.models.media.Schema schema72 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.Integer int73 = schema5.getMinItems();
        io.swagger.oas.models.media.Schema schema75 = schema5.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test01078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        java.lang.Class<?> wildcardClass12 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema30.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(schema32);
    }

    @Test
    public void test01080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01080");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01081");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        schema24.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.minimum(bigDecimal37);
        boolean boolean39 = schema31.equals((java.lang.Object) bigDecimal37);
        io.swagger.oas.models.media.Schema schema41 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema42 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema31.setExample((java.lang.Object) tagSetOptionalSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema53 = schema31.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("default");
        java.math.BigDecimal bigDecimal56 = null;
        schema55.setMinimum(bigDecimal56);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.xml(xML58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = schema24.not(schema59);
        schema24.setWriteOnly((java.lang.Boolean) false);
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test01082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01082");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        java.lang.Boolean boolean12 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = null;
        strComparableSchema3.setNot(schema15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(bigDecimal9);
    }

    @Test
    public void test01084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML24 = schema23.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
    }

    @Test
    public void test01085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01085");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.Boolean boolean17 = strComparableSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.format("");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema13.exclusiveMaximum((java.lang.Boolean) false);
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 1);
        schema26.setType("Optional.empty");
        io.swagger.oas.models.media.Schema schema30 = schema26.exclusiveMaximum((java.lang.Boolean) true);
        schema26.setNullable((java.lang.Boolean) true);
        schema26.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema26.getAdditionalProperties();
        java.lang.Class<?> wildcardClass36 = schema26.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test01086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01086");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema0.getDefault();
        java.lang.Integer int17 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strComparable16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test01087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        java.lang.String str20 = schema19.getDescription();
        io.swagger.oas.models.media.Schema schema21 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional22 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional22);
    }

    @Test
    public void test01088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        io.swagger.oas.models.media.Schema schema18 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setName("hi!");
        strComparableSchema20.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema36 = schema30.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList41 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema45 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        schema45.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01089");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        java.lang.String str12 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.minimum(bigDecimal13);
        schema14.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01090");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema37 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList38 = schema37.getRequired();
        java.lang.Object obj39 = schema37.getExample();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.minimum(bigDecimal40);
        schema41.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema21.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema21.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema21.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema33.type("default");
        io.swagger.oas.models.media.Schema schema36 = schema20.additionalProperties(schema35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01093");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Integer int17 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema15.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01094");
        io.swagger.jaxrs2.OperationParser operationParser0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional1 = java.util.Optional.of(operationParser0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = strComparableSchema3.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema24 = schema22.type("default");
        io.swagger.oas.models.media.Schema schema25 = schema22.getAdditionalProperties();
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList40 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        schema38.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList40);
        io.swagger.oas.models.media.Schema schema43 = schema22.additionalProperties(schema38);
        io.swagger.oas.models.media.XML xML44 = schema22.getXml();
        java.lang.String str45 = schema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        strComparableSchema46.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        strComparableSchema46.setDiscriminator(discriminator53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        strComparableSchema46.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setName("hi!");
        strComparableSchema57.setNot((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema57.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema57.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema57.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema57.format("");
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.multipleOf(bigDecimal72);
        java.lang.String[] strArray79 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema73.required((java.util.List<java.lang.String>) strList80);
        strComparableSchema46.setRequired((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema22.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema3.required((java.util.List<java.lang.String>) strList80);
        java.math.BigDecimal bigDecimal86 = null;
        schema85.setMaximum(bigDecimal86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test01096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        schema12.setMultipleOf(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test01097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        io.swagger.oas.models.media.XML xML13 = schema12.getXml();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        schema22.set$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.example((java.lang.Object) schema22);
        schema27.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01098");
        java.util.Optional<java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(tagSetOptional0);
    }

    @Test
    public void test01099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = strComparableSchema3.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int36 = strComparableSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.type("hi!");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema24.additionalProperties(schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.discriminator(discriminator43);
        schema42.setDescription("#/components/schemas/");
        java.lang.String str47 = schema42.getFormat();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema3.example((java.lang.Object) str47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema21.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema36.setName("hi!");
        strComparableSchema36.setName("Optional.empty");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema36.setMaximum(bigDecimal42);
        java.lang.String str44 = strComparableSchema36.getDescription();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.maximum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema24.additionalProperties(schema46);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        schema47.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.minimum(bigDecimal61);
        boolean boolean63 = schema55.equals((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema schema65 = schema55.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema66 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema55.setExample((java.lang.Object) tagSetOptionalSchema66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        strComparableSchema68.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema68.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema71.setName("hi!");
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema77 = schema55.not(schema76);
        io.swagger.oas.models.media.Schema schema79 = schema77.$ref("default");
        schema47.setAdditionalProperties(schema77);
        schema21.setExample((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema83 = schema77.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema83.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test01101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.String str29 = schema6.getTitle();
        schema6.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema6.addRequiredItem("#/components/schemas/");
        schema6.setTitle("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01102");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.ofNullable((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test01103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01103");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema27.minimum(bigDecimal29);
        boolean boolean31 = schema23.equals((java.lang.Object) bigDecimal29);
        io.swagger.oas.models.media.Schema schema33 = schema23.type("Optional.empty");
        schema23.setUniqueItems((java.lang.Boolean) true);
        schema23.setMaxLength((java.lang.Integer) 0);
        schema11.setAdditionalProperties(schema23);
        java.lang.String str39 = schema23.getPattern();
        schema23.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test01104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj37 = schema36.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema36.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema47 = schema36.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        java.lang.Boolean boolean50 = schema47.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema47);
        schema51.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Discriminator discriminator56 = schema51.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
    }

    @Test
    public void test01105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01105");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema10.setExternalDocs(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.lang.Boolean boolean9 = strComparableSchema3.getExclusiveMaximum();
        strComparableSchema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test01107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01107");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01108");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema3.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema3.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01109");
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = java.util.Optional.empty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<io.swagger.oas.models.tags.Tag> tagSet1 = tagSetOptional0.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagSetOptional0);
    }

    @Test
    public void test01110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        java.lang.Integer int11 = schema8.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema8.setExternalDocs(externalDocumentation12);
        java.lang.Object obj14 = null;
        boolean boolean15 = schema8.equals(obj14);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test01111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = strComparableSchema18.getMaxLength();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema18.$ref("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema34.getNot();
        java.lang.Boolean boolean36 = schema35.getUniqueItems();
        schema35.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01112");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("");
        schema25.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema35 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01113");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj37 = schema36.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema36.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema47 = schema36.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        java.lang.Boolean boolean50 = schema47.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema47);
        schema51.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.lang.String str18 = schema16.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        java.lang.String str9 = schema8.toString();
        java.lang.String str10 = schema8.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test01116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.lang.Boolean boolean16 = schema14.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test01117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema19.setName("hi!");
        strComparableSchema19.setName("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema19.setMaximum(bigDecimal25);
        java.lang.String str27 = strComparableSchema19.getDescription();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema7.additionalProperties(schema29);
        schema30.set$ref("default");
        schema4.setNot(schema30);
        io.swagger.oas.models.media.Schema schema35 = schema30.nullable((java.lang.Boolean) true);
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        schema12.setType("Optional[[]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema42 = schema40.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.pattern("");
        io.swagger.oas.models.media.Schema schema48 = schema42.not(schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        strComparableSchema49.setNot((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema52.name("hi!");
        io.swagger.oas.models.media.Schema schema61 = schema59.pattern("");
        java.lang.String[] strArray63 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = schema61.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = schema48.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema69 = schema48.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema48.discriminator(discriminator70);
        schema12.setExample((java.lang.Object) discriminator70);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test01119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01119");
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(tagSetOptional0);
    }

    @Test
    public void test01120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01120");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = schema37.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.maximum(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema33 = schema27.not(schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema27.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema38.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema38.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.format("");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        io.swagger.oas.models.media.Schema schema63 = schema54.required((java.util.List<java.lang.String>) strList61);
        schema37.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema37.externalDocs(externalDocumentation65);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema37.multipleOf(bigDecimal67);
        schema68.setNullable((java.lang.Boolean) false);
        boolean boolean71 = schema18.equals((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema73 = schema68.format("default");
        java.lang.Integer int74 = schema73.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test01122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01122");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema20.properties(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setName("hi!");
        strComparableSchema29.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema29.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema29.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema43 = schema41.type("default");
        io.swagger.oas.models.media.Schema schema44 = schema41.getAdditionalProperties();
        schema41.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setName("hi!");
        strComparableSchema47.setNot((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema47.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema41.example((java.lang.Object) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema63 = schema61.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.pattern("");
        io.swagger.oas.models.media.Schema schema69 = schema63.not(schema68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        java.math.BigDecimal bigDecimal71 = schema69.getMaximum();
        io.swagger.oas.models.media.Schema schema73 = schema69.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema75 = schema73.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema41.example((java.lang.Object) schema73);
        schema20.setAdditionalProperties(schema76);
        schema4.setExample((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema80 = schema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML81 = null;
        schema20.setXml(xML81);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test01123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01123");
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strListOptional0);
    }

    @Test
    public void test01124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        schema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = schema33.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test01125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) false);
        schema24.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01126");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional7.orElse(tagSet29);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.get();
        java.lang.String[] strArray35 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray35);
        java.lang.String str37 = tagSetOptional36.toString();
        java.lang.String str38 = tagSetOptional36.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional36.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional36.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet41 = tagSetOptional7.orElse(tagSet40);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional49 = io.swagger.jaxrs2.OperationParser.getTags(strArray48);
        java.lang.String[] strArray50 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        io.swagger.oas.models.tags.Tag[] tagArray52 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet53 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet53, tagArray52);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet55 = tagSetOptional51.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet56 = tagSetOptional49.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet57 = tagSetOptional7.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet53);
        java.lang.String str58 = tagSetOptional7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str37, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str38, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(tagSet41);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(tagSetOptional49);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(tagArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tagSet55);
        org.junit.Assert.assertNotNull(tagSet56);
        org.junit.Assert.assertNotNull(tagSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str58, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test01127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj18 = null;
        boolean boolean19 = schema17.equals(obj18);
        java.lang.Integer int20 = schema17.getMinItems();
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML23 = null;
        schema17.setXml(xML23);
        io.swagger.oas.models.media.Schema schema26 = schema17.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test01128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.lang.Integer int19 = schema16.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setName("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.name("Optional.empty");
        java.lang.String str29 = strComparableSchema23.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema35.setName("hi!");
        strComparableSchema35.setName("Optional.empty");
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema35.setMaximum(bigDecimal41);
        java.lang.String str43 = strComparableSchema35.getDescription();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.maximum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema31.example((java.lang.Object) strComparableSchema35);
        java.lang.String str47 = schema31.get$ref();
        java.lang.String str48 = schema31.getType();
        schema31.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema57 = schema55.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.pattern("");
        io.swagger.oas.models.media.Schema schema63 = schema57.not(schema62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = schema63.getProperties();
        java.math.BigDecimal bigDecimal65 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema67 = schema63.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema69 = schema67.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.minimum(bigDecimal71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setName("hi!");
        strComparableSchema70.setNot((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.Boolean boolean77 = strComparableSchema73.getUniqueItems();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema73.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema80.minimum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema80.pattern("");
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema80.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str87 = strComparableSchema80.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema88 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema88.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema88.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList92 = strComparableSchema88.getEnum();
        strComparableSchema80.setEnum(strComparableList92);
        schema79.setEnum(strComparableList92);
        schema69.setEnum(strComparableList92);
        schema31.setEnum(strComparableList92);
        schema16.setEnum(strComparableList92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(schema91);
        org.junit.Assert.assertNotNull(strComparableList92);
    }

    @Test
    public void test01129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        java.lang.String str11 = strComparableSchema0.getFormat();
        java.lang.Boolean boolean12 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test01130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.XML xML26 = null;
        schema16.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema28.format("");
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema16.additionalProperties(schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        schema42.setExtensions(strMap47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test01131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        boolean boolean6 = strComparableSchema0.equals((java.lang.Object) 0);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj21 = schema20.getExample();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        strComparableSchema0.setDiscriminator(discriminator7);
        java.lang.Integer int9 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema11.setExternalDocs(externalDocumentation12);
        java.lang.Object obj14 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) (-1));
        schema16.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01133");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.XML xML26 = null;
        schema16.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema28.format("");
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema16.additionalProperties(schema42);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema16.minimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema16.minimum(bigDecimal49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema16.multipleOf(bigDecimal51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Boolean boolean11 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = null;
        schema6.setAdditionalProperties(schema12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test01135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        java.lang.Integer int26 = schema25.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test01136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = strComparableSchema18.getMaxLength();
        java.lang.Boolean boolean31 = strComparableSchema18.getReadOnly();
        strComparableSchema18.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema40 = schema38.name("");
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML43 = schema38.getXml();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema38.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema49.setName("hi!");
        strComparableSchema49.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML55 = null;
        strComparableSchema49.setXml(xML55);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean65 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean67 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema49.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        java.lang.Integer int69 = strComparableSchema49.getMaxItems();
        java.lang.String[] strArray73 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        strComparableSchema49.setRequired((java.util.List<java.lang.String>) strList74);
        schema45.setRequired((java.util.List<java.lang.String>) strList74);
        schema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema18.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema18.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = null;
        strComparableSchema83.setExtensions(strMap84);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema86 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema83.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema86);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema83.$ref("hi!");
        io.swagger.oas.models.media.Schema schema91 = schema89.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema93 = schema89.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str94 = schema89.getPattern();
        io.swagger.oas.models.media.Schema schema95 = schema82.additionalProperties(schema89);
        java.lang.Integer int96 = schema89.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test01137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema35.format("");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        schema49.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema49.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema59.name("hi!");
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("");
        java.lang.String[] strArray70 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = schema68.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema74 = schema55.required((java.util.List<java.lang.String>) strList71);
        schema12.setRequired((java.util.List<java.lang.String>) strList71);
        java.lang.Class<?> wildcardClass76 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test01138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema16.setName("hi!");
        strComparableSchema16.setMaxLength((java.lang.Integer) 0);
        schema12.setDefault((java.lang.Object) 0);
        schema12.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema6.set$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.Object obj11 = null;
        schema10.setDefault(obj11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        java.lang.String str18 = schema16.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01141");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        schema14.setMinimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML27 = null;
        schema14.setXml(xML27);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01142");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.title("hi!");
        strComparableSchema3.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.pattern("#/components/schemas/hi!");
        java.lang.Integer int16 = strComparableSchema3.getMinLength();
        io.swagger.oas.models.media.XML xML17 = strComparableSchema3.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test01144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        schema12.setType("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.maximum(bigDecimal15);
        schema12.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema20 = schema12.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01145");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema15.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = schema17.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema22.name("hi!");
        java.lang.Integer int30 = schema29.getMaxLength();
        java.lang.Boolean boolean31 = schema29.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML32 = schema29.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema43.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema51 = schema49.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema29.properties(strMap52);
        io.swagger.oas.models.media.Schema schema54 = schema17.properties(strMap52);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.maxLength((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass15 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.Integer int7 = strComparableSchema0.getMaxItems();
        java.lang.Boolean boolean8 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        strComparableSchema0.setMaximum(bigDecimal11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test01148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema0.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        strComparableSchema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        schema36.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema36.name("Optional.empty");
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        schema40.setRequired((java.util.List<java.lang.String>) strList43);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList43);
        java.lang.Boolean boolean47 = strComparableSchema24.getDeprecated();
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema49.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema52.setName("hi!");
        strComparableSchema52.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML58 = null;
        strComparableSchema52.setXml(xML58);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList65 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean68 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean70 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList65);
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = null;
        strComparableSchema73.setExtensions(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema73.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema76);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema76.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema83 = schema81.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList85 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "");
        schema83.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema24.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal91 = schema90.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
    }

    @Test
    public void test01149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema21 = schema15.not(schema20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema15.xml(xML22);
        io.swagger.oas.models.media.Schema schema25 = schema23.writeOnly((java.lang.Boolean) false);
        schema6.setDefault((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema27 = schema25.getAdditionalProperties();
        java.lang.String str28 = schema27.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test01150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema13.setDiscriminator(discriminator14);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema10.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema24.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        strComparableSchema35.setExtensions(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema38.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.maxItems((java.lang.Integer) 0);
        strComparableSchema38.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema46 = schema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema34.maxLength((java.lang.Integer) 100);
        schema10.setExample((java.lang.Object) schema49);
        java.lang.Integer int51 = schema49.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test01152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        schema27.setProperties(strMap28);
        java.lang.Boolean boolean30 = schema27.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema27.maxItems((java.lang.Integer) 0);
        schema32.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01153");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.pattern("");
        io.swagger.oas.models.media.Schema schema32 = schema26.not(schema31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        schema26.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema35.format("");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.discriminator(discriminator52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        schema51.setProperties(strMap54);
        schema51.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema26.not(schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.getAdditionalProperties();
        strComparableSchema59.setDeprecated((java.lang.Boolean) false);
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema59.addRequiredItem("");
        java.lang.String str69 = schema68.getType();
        schema26.setNot(schema68);
        schema18.setDefault((java.lang.Object) schema26);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test01154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema4.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema4.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int14 = schema11.getMaxLength();
        java.lang.Integer int15 = schema11.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01155");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema11.setXml(xML13);
        io.swagger.oas.models.media.Schema schema15 = schema11.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test01156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01156");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        io.swagger.oas.models.media.Schema schema30 = schema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema11.maxProperties((java.lang.Integer) 10);
        schema32.setName("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        java.lang.String str11 = schema9.getPattern();
        schema9.setNullable((java.lang.Boolean) false);
        schema9.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01158");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema18.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML21 = schema18.getXml();
        java.lang.Boolean boolean22 = schema18.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(xML21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test01159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01159");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema11.$ref("hi!");
        io.swagger.oas.models.media.Schema schema19 = schema17.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema17.example(obj22);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.not(schema17);
        schema17.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01160");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test01161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
    }

    @Test
    public void test01162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema schema40 = schema35.maxItems((java.lang.Integer) 10);
        java.lang.String str41 = schema40.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test01163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01163");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema22.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema29.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.lang.Boolean boolean37 = strComparableSchema29.getWriteOnly();
        java.lang.String str38 = strComparableSchema29.getFormat();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.minLength((java.lang.Integer) 100);
        strComparableSchema3.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema43 = schema40.pattern("default");
        java.lang.Integer int44 = schema43.getMaxItems();
        java.lang.Boolean boolean45 = schema43.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test01164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setFormat("hi!");
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test01165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01165");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.media.Schema schema45 = schema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema16.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01166");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = strComparableSchema3.getWriteOnly();
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema3.setMaximum(bigDecimal12);
        strComparableSchema3.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    }

    @Test
    public void test01167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        schema19.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema29.not(schema34);
        java.lang.Boolean boolean36 = schema34.getUniqueItems();
        schema34.setUniqueItems((java.lang.Boolean) true);
        schema19.addExtension("", (java.lang.Object) schema34);
        boolean boolean40 = schema14.equals((java.lang.Object) schema34);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema14.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema14.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema44.setExternalDocs(externalDocumentation45);
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMaximum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.minimum(bigDecimal49);
        java.lang.Integer int51 = schema44.getMaxLength();
        java.lang.Boolean boolean52 = schema44.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test01168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator16 = schema10.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test01169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema24 = schema10.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = schema24.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test01170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01170");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.ofNullable((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test01171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        java.util.Optional<java.lang.Object> objOptional19 = java.util.Optional.ofNullable((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.maxProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(objOptional19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01172");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalOptional9 = java.util.Optional.ofNullable(tagSetOptional8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet14 = tagSetOptional13.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet15 = tagSetOptional8.orElse(tagSet14);
        java.lang.String str16 = tagSetOptional8.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptionalOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNotNull(tagSet14);
        org.junit.Assert.assertNotNull(tagSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str16, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test01173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema15.$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema21.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str26 = schema21.getTitle();
        boolean boolean27 = schema13.equals((java.lang.Object) schema21);
        schema13.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML32 = schema31.getXml();
        io.swagger.oas.models.media.Schema schema33 = schema31.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNull(schema33);
    }

    @Test
    public void test01174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01174");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test01175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema12.setPattern("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.format("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.minimum(bigDecimal35);
        boolean boolean37 = schema29.equals((java.lang.Object) bigDecimal35);
        io.swagger.oas.models.media.Schema schema39 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema40 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema29.setExample((java.lang.Object) tagSetOptionalSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        strComparableSchema42.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = schema29.not(schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.math.BigDecimal bigDecimal54 = schema53.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setName("hi!");
        strComparableSchema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema55.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema55.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema55.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema55.format("");
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema71.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema71.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema53.example((java.lang.Object) schema82);
        boolean boolean84 = schema24.equals((java.lang.Object) schema53);
        io.swagger.oas.models.media.Schema schema86 = schema24.type("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Optional<java.lang.Object> objOptional87 = java.util.Optional.of((java.lang.Object) "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(objOptional87);
    }

    @Test
    public void test01176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01176");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema23 = schema21.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.pattern("");
        io.swagger.oas.models.media.Schema schema29 = schema23.not(schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema28.setXml(xML30);
        io.swagger.oas.models.media.Schema schema32 = schema28.getNot();
        schema15.setExample((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList38 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema34.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList38);
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema43.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema43.pattern("");
        io.swagger.oas.models.media.Schema schema57 = schema55.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema34.additionalProperties(schema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema34.minimum(bigDecimal59);
        schema28.setExample((java.lang.Object) schema60);
        io.swagger.oas.models.media.XML xML62 = schema28.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML62);
    }

    @Test
    public void test01177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema3.getTitle();
        strComparableSchema3.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minimum(bigDecimal25);
        boolean boolean27 = schema19.equals((java.lang.Object) bigDecimal25);
        io.swagger.oas.models.media.Schema schema29 = schema19.type("Optional.empty");
        boolean boolean30 = schema14.equals((java.lang.Object) schema29);
        boolean boolean31 = strComparableSchema0.equals((java.lang.Object) schema29);
        java.lang.Integer int32 = schema29.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.discriminator(discriminator33);
        java.lang.Class<?> wildcardClass35 = schema34.getClass();
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test01178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = schema23.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        schema12.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema12.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema14.setDiscriminator(discriminator15);
        java.lang.Boolean boolean17 = schema14.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test01181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01181");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        schema6.setPattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.util.List<java.lang.String> strList19 = schema6.getRequired();
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test01182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01182");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        java.lang.Class<?> wildcardClass20 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        io.swagger.oas.models.media.Schema schema12 = schema9.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getPattern();
        java.math.BigDecimal bigDecimal16 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema18);
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMaximum(bigDecimal20);
        schema19.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01185");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        schema11.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema11.getDeprecated();
        java.lang.Class<?> wildcardClass16 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01186");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        schema12.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str18 = schema17.getFormat();
        java.math.BigDecimal bigDecimal19 = schema17.getMinimum();
        strComparableSchema0.setExample((java.lang.Object) schema17);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema0.setDiscriminator(discriminator21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test01188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01188");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01189");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean17 = schema14.getExclusiveMaximum();
        schema14.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test01190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01190");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("Optional.empty");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema10.minimum(bigDecimal16);
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01191");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String[] strArray24 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        io.swagger.oas.models.tags.Tag[] tagArray26 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet27 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet27, tagArray26);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet29 = tagSetOptional25.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet27);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet30 = tagSetOptional7.orElse(tagSet29);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet31 = tagSetOptional7.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.minimum(bigDecimal43);
        java.math.BigDecimal bigDecimal45 = schema42.getMaximum();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema42.maximum(bigDecimal46);
        java.lang.String str48 = schema47.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setName("hi!");
        strComparableSchema49.setNot((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema52.name("hi!");
        io.swagger.oas.models.media.Schema schema61 = schema59.pattern("");
        java.lang.String[] strArray63 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = schema61.required((java.util.List<java.lang.String>) strList64);
        java.lang.Object obj67 = schema61.getExample();
        schema47.setDefault(obj67);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList69 = schema47.getEnum();
        io.swagger.oas.models.media.Schema schema70 = schema47.getNot();
        java.lang.Integer int71 = schema47.getMaxItems();
        boolean boolean72 = tagSetOptional7.equals((java.lang.Object) int71);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet73 = tagSetOptional7.get();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(tagSet29);
        org.junit.Assert.assertNotNull(tagSet30);
        org.junit.Assert.assertNotNull(tagSet31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(strComparableList69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(tagSet73);
    }

    @Test
    public void test01192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = strComparableSchema18.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test01193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema4.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        strComparableSchema18.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        strComparableSchema18.setDiscriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema4.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = strComparableSchema18.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.minimum(bigDecimal21);
        boolean boolean23 = schema15.equals((java.lang.Object) bigDecimal21);
        io.swagger.oas.models.media.Schema schema25 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema26 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema15.setExample((java.lang.Object) tagSetOptionalSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema37 = schema15.not(schema36);
        io.swagger.oas.models.media.Schema schema38 = schema8.not(schema37);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01195");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        java.math.BigDecimal bigDecimal17 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        io.swagger.oas.models.media.Schema schema30 = schema24.not(schema29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema30.getProperties();
        java.math.BigDecimal bigDecimal32 = schema30.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema30.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema36 = schema30.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str39 = schema38.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        boolean boolean52 = schema44.equals((java.lang.Object) bigDecimal50);
        io.swagger.oas.models.media.Schema schema54 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema44.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str57 = schema56.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setName("hi!");
        strComparableSchema59.setNot((io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema62.name("hi!");
        java.lang.Integer int70 = schema69.getMaxLength();
        java.lang.Boolean boolean71 = schema69.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML72 = schema69.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.minimum(bigDecimal74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema76.setName("hi!");
        strComparableSchema73.setNot((io.swagger.oas.models.media.Schema) strComparableSchema76);
        strComparableSchema73.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema73.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema85.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema89 = schema83.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema85);
        io.swagger.oas.models.media.Schema schema91 = schema89.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        io.swagger.oas.models.media.Schema schema93 = schema69.properties(strMap92);
        schema56.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap92);
        io.swagger.oas.models.media.Schema schema95 = schema38.properties(strMap92);
        strComparableSchema0.setProperties(strMap92);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(xML72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test01196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01196");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        java.lang.String str34 = schema32.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str48 = schema47.getType();
        io.swagger.oas.models.media.Schema schema49 = schema32.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = schema59.maxLength((java.lang.Integer) 100);
        schema61.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema32.addProperties("", schema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        strComparableSchema66.setExtensions(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema66.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema69.setName("hi!");
        strComparableSchema69.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML75 = null;
        strComparableSchema69.setXml(xML75);
        java.lang.Boolean boolean77 = strComparableSchema69.getNullable();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema69.$ref("hi!");
        java.math.BigDecimal bigDecimal80 = null;
        strComparableSchema69.setMultipleOf(bigDecimal80);
        io.swagger.oas.models.media.Schema schema82 = schema64.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema69.setExclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema69.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema87 = schema16.example((java.lang.Object) strComparableSchema69);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test01197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01197");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        schema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.pattern("");
        io.swagger.oas.models.media.Schema schema45 = schema39.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.pattern("");
        schema52.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema62 = schema60.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.pattern("");
        io.swagger.oas.models.media.Schema schema68 = schema62.not(schema67);
        java.lang.Boolean boolean69 = schema67.getUniqueItems();
        schema67.setUniqueItems((java.lang.Boolean) true);
        schema52.addExtension("", (java.lang.Object) schema67);
        boolean boolean73 = schema47.equals((java.lang.Object) schema67);
        schema25.setAdditionalProperties(schema67);
        schema67.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema67.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test01199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01199");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.lang.Boolean boolean29 = schema26.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test01200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema3.setMaximum(bigDecimal12);
        java.lang.Integer int14 = strComparableSchema3.getMinLength();
        strComparableSchema3.setType("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        strComparableSchema20.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        boolean boolean38 = schema30.equals((java.lang.Object) bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setName("hi!");
        strComparableSchema39.setNot((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema39.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema39.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema39.format("");
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = schema55.required((java.util.List<java.lang.String>) strList62);
        schema30.setRequired((java.util.List<java.lang.String>) strList62);
        strComparableSchema20.setRequired((java.util.List<java.lang.String>) strList62);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList62);
        strComparableSchema3.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01201");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList26 = schema22.getRequired();
        schema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setName("hi!");
        strComparableSchema30.setNot((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema42.setName("hi!");
        strComparableSchema42.setName("Optional.empty");
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema42.setMaximum(bigDecimal48);
        java.lang.String str50 = strComparableSchema42.getDescription();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema42.maximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema30.additionalProperties(schema52);
        java.util.List<java.lang.String> strList54 = schema53.getRequired();
        schema53.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str57 = schema53.getDescription();
        io.swagger.oas.models.media.Schema schema59 = schema53.pattern("");
        schema22.addExtension("#/components/schemas/", (java.lang.Object) schema59);
        java.lang.String str61 = schema59.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test01202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.Object obj29 = schema27.getExample();
        schema27.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema27.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test01203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01203");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        schema55.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema22.setNot(schema55);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema55.not(schema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setName("hi!");
        strComparableSchema61.setNot((io.swagger.oas.models.media.Schema) strComparableSchema64);
        strComparableSchema61.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema61.minProperties((java.lang.Integer) 100);
        java.lang.Object obj72 = schema71.getExample();
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema71.minimum(bigDecimal73);
        java.lang.String[] strArray79 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        schema74.setRequired((java.util.List<java.lang.String>) strList80);
        java.util.Optional<java.io.Serializable> serializableOptional83 = java.util.Optional.of((java.io.Serializable) strList80);
        schema60.setRequired((java.util.List<java.lang.String>) strList80);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableOptional83);
    }

    @Test
    public void test01204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList26 = schema22.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setName("hi!");
        strComparableSchema27.setNot((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema27.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema27.pattern("");
        io.swagger.oas.models.media.Schema schema41 = schema39.type("default");
        io.swagger.oas.models.media.Schema schema42 = schema39.getAdditionalProperties();
        schema39.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        io.swagger.oas.models.media.Schema schema60 = schema39.additionalProperties(schema55);
        io.swagger.oas.models.media.XML xML61 = schema39.getXml();
        java.lang.String str62 = schema39.getDescription();
        io.swagger.oas.models.media.Schema schema63 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema39.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean66 = schema65.getWriteOnly();
        io.swagger.oas.models.media.Schema schema68 = schema65.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean71 = schema22.equals((java.lang.Object) schema68);
        schema22.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test01205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minimum(bigDecimal19);
        boolean boolean21 = schema13.equals((java.lang.Object) bigDecimal19);
        io.swagger.oas.models.media.Schema schema23 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = schema4.not(schema23);
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01206");
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray0 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap1 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap2 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Optional<io.swagger.oas.annotations.links.LinkParameter[]> linkParameterArrayOptional3 = java.util.Optional.ofNullable(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        org.junit.Assert.assertNotNull(linkParameterArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkParameterArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01207");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal19 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01208");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = strComparableSchema10.getMaximum();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema10.getDefault();
        java.lang.String str17 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        strComparableSchema21.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean29 = strComparableSchema21.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.$ref("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema21.example((java.lang.Object) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setMaxItems((java.lang.Integer) (-1));
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema21.getDefault();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparable16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strComparable41);
    }

    @Test
    public void test01209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        java.lang.Boolean boolean16 = schema10.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setName("hi!");
        strComparableSchema19.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema19.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("default");
        io.swagger.oas.models.media.Schema schema34 = schema31.getAdditionalProperties();
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        schema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties(schema47);
        io.swagger.oas.models.media.XML xML53 = schema31.getXml();
        java.lang.String str54 = schema31.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.pattern("");
        strComparableSchema55.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        strComparableSchema55.setDiscriminator(discriminator62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema55.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema66.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema66.format("");
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.multipleOf(bigDecimal81);
        java.lang.String[] strArray88 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema82.required((java.util.List<java.lang.String>) strList89);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema93 = schema31.required((java.util.List<java.lang.String>) strList89);
        schema10.setRequired((java.util.List<java.lang.String>) strList89);
        io.swagger.oas.models.media.Schema schema96 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(xML53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test01210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int8 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal28 = schema25.getMaximum();
        java.lang.Boolean boolean29 = schema25.getReadOnly();
        java.lang.String str30 = schema25.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01212");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.pattern("");
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema36.not(schema41);
        java.lang.Boolean boolean43 = schema41.getUniqueItems();
        schema41.setUniqueItems((java.lang.Boolean) true);
        schema26.addExtension("", (java.lang.Object) schema41);
        schema26.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.pattern("");
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema50.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = strComparableSchema50.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = schema26.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        strComparableSchema60.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema60.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = null;
        strComparableSchema65.setExtensions(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema65.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema68.minimum(bigDecimal70);
        boolean boolean72 = schema64.equals((java.lang.Object) bigDecimal70);
        io.swagger.oas.models.media.Schema schema74 = schema64.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema75 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema64.setExample((java.lang.Object) tagSetOptionalSchema75);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = null;
        strComparableSchema77.setExtensions(strMap78);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema80.setName("hi!");
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema80.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema86 = schema64.not(schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema26.addProperties("", schema86);
        java.lang.Boolean boolean90 = schema26.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = schema26.getExtensions();
        schema20.setExtensions(strMap91);
        schema20.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test01213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean5 = schema4.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setName("hi!");
        strComparableSchema6.setNot((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema9.getUniqueItems();
        java.lang.Boolean boolean14 = strComparableSchema9.getNullable();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema9.pattern("default");
        io.swagger.oas.models.media.Schema schema20 = schema18.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.xml(xML23);
        io.swagger.oas.models.media.Schema schema25 = schema4.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema40.setName("hi!");
        strComparableSchema40.setName("Optional.empty");
        java.math.BigDecimal bigDecimal46 = null;
        strComparableSchema40.setMaximum(bigDecimal46);
        java.lang.String str48 = strComparableSchema40.getDescription();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema40.maximum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema28.additionalProperties(schema50);
        schema50.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema55 = schema50.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema56.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema68.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema72 = schema66.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.math.BigDecimal bigDecimal73 = null;
        strComparableSchema68.setMaximum(bigDecimal73);
        java.util.List<java.lang.String> strList75 = strComparableSchema68.getRequired();
        java.math.BigDecimal bigDecimal76 = null;
        strComparableSchema68.setMaximum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema68.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema55.setExample((java.lang.Object) schema79);
        schema27.setNot(schema79);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test01214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema15.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.name("Optional.empty");
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        schema19.setRequired((java.util.List<java.lang.String>) strList22);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Boolean boolean26 = strComparableSchema3.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        strComparableSchema31.setTitle("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.Boolean boolean45 = strComparableSchema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema41.format("");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema41.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema49.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema31.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema3.addProperties("#/components/schemas/", schema51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = strComparableSchema3.getProperties();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        strComparableSchema3.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01215");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema18.name("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema27.setMinLength((java.lang.Integer) 10);
        strComparableSchema10.setDefault((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.type("hi!");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema10.setMaximum(bigDecimal33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema10.setExtensions(strMap35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema10.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test01216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = strComparableSchema0.get$ref();
        java.lang.Integer int18 = strComparableSchema0.getMinItems();
        java.lang.String str19 = strComparableSchema0.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        schema55.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema22.setNot(schema55);
        io.swagger.oas.models.media.Schema schema59 = schema55.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema59);
    }

    @Test
    public void test01218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        schema18.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema18.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setName("hi!");
        strComparableSchema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema25.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema25.minProperties((java.lang.Integer) 100);
        java.lang.String str36 = schema35.getFormat();
        java.math.BigDecimal bigDecimal37 = schema35.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema35.addRequiredItem("#/components/schemas/hi!");
        schema24.setNot(schema41);
        schema24.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test01220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01220");
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strListOptional0);
    }

    @Test
    public void test01221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        java.lang.String str27 = schema22.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minimum(bigDecimal38);
        boolean boolean40 = schema32.equals((java.lang.Object) bigDecimal38);
        io.swagger.oas.models.media.Schema schema42 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema43 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema32.setExample((java.lang.Object) tagSetOptionalSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema48.setName("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema54 = schema32.not(schema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.pattern("");
        strComparableSchema55.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        strComparableSchema55.setDiscriminator(discriminator62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema55.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema66.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema66.format("");
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.multipleOf(bigDecimal81);
        java.lang.String[] strArray88 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema82.required((java.util.List<java.lang.String>) strList89);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList89);
        schema54.setRequired((java.util.List<java.lang.String>) strList89);
        schema22.setRequired((java.util.List<java.lang.String>) strList89);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test01222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema27.minimum(bigDecimal29);
        boolean boolean31 = schema23.equals((java.lang.Object) bigDecimal29);
        io.swagger.oas.models.media.Schema schema33 = schema23.type("Optional.empty");
        schema23.setUniqueItems((java.lang.Boolean) true);
        schema23.setMaxLength((java.lang.Integer) 0);
        schema11.setAdditionalProperties(schema23);
        java.math.BigDecimal bigDecimal39 = null;
        schema23.setMaximum(bigDecimal39);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setFormat("hi!");
        io.swagger.oas.models.media.XML xML9 = strComparableSchema0.getXml();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
    }

    @Test
    public void test01224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01224");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema21 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema16.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema16.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
    }

    @Test
    public void test01225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        schema14.setType("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.pattern("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj25 = schema24.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema24.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema35 = schema24.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.String str36 = strComparableSchema31.getName();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = strComparableSchema31.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strComparableSchema31.getExtensions();
        boolean boolean41 = schema14.equals((java.lang.Object) strComparableSchema31);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema31.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema45.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
    }

    @Test
    public void test01226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01226");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema30.getExternalDocs();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema30.maximum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = schema30.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
    }

    @Test
    public void test01227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.maximum(bigDecimal14);
        java.lang.Object obj16 = schema8.getExample();
        io.swagger.oas.models.media.XML xML17 = schema8.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
    }

    @Test
    public void test01228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01228");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        schema14.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        strComparableSchema19.setDescription("default");
        java.lang.Integer int26 = strComparableSchema19.getMaxItems();
        java.lang.Boolean boolean27 = strComparableSchema19.getWriteOnly();
        java.math.BigDecimal bigDecimal28 = strComparableSchema19.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema18.not(schema32);
        schema18.setType("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        java.math.BigDecimal bigDecimal18 = null;
        schema12.setMaximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema12.discriminator(discriminator22);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.xml(xML9);
        schema10.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = strComparableSchema3.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema3.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema3.description("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strComparableSchema29.setExtensions(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema37.minimum(bigDecimal39);
        boolean boolean41 = schema33.equals((java.lang.Object) bigDecimal39);
        io.swagger.oas.models.media.Schema schema43 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema47.pattern("");
        strComparableSchema47.setDescription("default");
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        strComparableSchema47.setDiscriminator(discriminator54);
        io.swagger.oas.models.media.Schema schema56 = schema33.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema59 = schema27.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        strComparableSchema62.setExtensions(strMap63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema62.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        strComparableSchema67.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema67.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema70.minimum(bigDecimal72);
        boolean boolean74 = schema66.equals((java.lang.Object) bigDecimal72);
        io.swagger.oas.models.media.Schema schema76 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema77 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema66.setExample((java.lang.Object) tagSetOptionalSchema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = null;
        strComparableSchema79.setExtensions(strMap80);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema79.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema82);
        strComparableSchema82.setName("hi!");
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema82.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema88 = schema66.not(schema87);
        schema87.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = schema87.maxLength((java.lang.Integer) 10);
        schema92.setDeprecated((java.lang.Boolean) true);
        strComparableSchema47.setNot(schema92);
        java.lang.Integer int96 = schema92.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test01232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01232");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        schema33.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = schema33.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test01233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.type("default");
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema13.minProperties((java.lang.Integer) (-1));
        strComparableSchema0.setNot(schema19);
        strComparableSchema0.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.pattern("");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj23 = schema22.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema22.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema33 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema29);
        boolean boolean34 = schema15.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema36 = schema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML39 = null;
        schema15.setXml(xML39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema15.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test01235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01235");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("Optional.empty");
        java.lang.Boolean boolean16 = schema10.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema10.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        java.lang.String str36 = strComparableSchema31.getFormat();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema31.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setName("hi!");
        strComparableSchema39.setNot((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema39.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema39.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema52.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        schema62.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema51.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        strComparableSchema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema30.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        strComparableSchema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        schema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test01236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        schema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.xml(xML28);
        java.lang.String str30 = schema29.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01237");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.$ref("hi!");
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean23 = schema22.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test01239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01239");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema6.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema6.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str17 = schema16.getName();
        java.lang.Boolean boolean18 = schema16.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        java.lang.Integer int45 = schema44.getMaxItems();
        java.lang.Boolean boolean46 = schema44.getDeprecated();
        schema44.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test01241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("default");
        java.lang.String str29 = schema26.getPattern();
        io.swagger.oas.models.media.XML xML30 = schema26.getXml();
        java.lang.Integer int31 = schema26.getMaxItems();
        java.lang.Boolean boolean32 = schema26.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01242");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        schema6.setDescription("hi!");
        schema6.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test01243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList5 = schema4.getEnum();
        java.lang.String str6 = schema4.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strComparableList5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01244");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        io.swagger.oas.models.media.XML xML25 = null;
        schema4.setXml(xML25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test01245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01245");
        io.swagger.oas.models.tags.Tag[] tagArray0 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet1 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet1, tagArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet1);
        boolean boolean4 = tagSetOptional3.isPresent();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional3.get();
        boolean boolean6 = tagSetOptional3.isPresent();
        org.junit.Assert.assertNotNull(tagArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tagSetOptional3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test01246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getName();
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01247");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.List<java.lang.String> strList29 = schema26.getRequired();
        io.swagger.oas.models.media.Schema schema31 = schema26.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema26.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
    }

    @Test
    public void test01248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01248");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        java.math.BigDecimal bigDecimal68 = schema67.getMultipleOf();
        java.lang.Integer int69 = schema67.getMaxProperties();
        java.lang.String str70 = schema67.getType();
        schema67.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test01249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getType();
        io.swagger.oas.models.media.Schema schema23 = schema6.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        schema35.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setName("hi!");
        strComparableSchema39.setNot((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema39.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema39.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema39.format("");
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        schema53.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema53.additionalProperties(schema58);
        java.lang.Integer int60 = schema53.getMinItems();
        io.swagger.oas.models.media.Schema schema62 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema53.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema6.setExample((java.lang.Object) schema53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema67.maxItems((java.lang.Integer) 0);
        java.lang.String str70 = schema67.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test01251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema20.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test01252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01252");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        boolean boolean8 = tagSetOptional7.isPresent();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        java.lang.String[] strArray17 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray17);
        io.swagger.oas.models.tags.Tag[] tagArray19 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet20 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet20, tagArray19);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet22 = tagSetOptional18.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet23 = tagSetOptional16.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet20);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet24 = tagSetOptional7.orElse(tagSet23);
        java.util.Optional<java.util.Collection<io.swagger.oas.models.tags.Tag>> tagCollectionOptional25 = java.util.Optional.of((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet23);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(tagSetOptional18);
        org.junit.Assert.assertNotNull(tagArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(tagSet22);
        org.junit.Assert.assertNotNull(tagSet23);
        org.junit.Assert.assertNotNull(tagSet24);
        org.junit.Assert.assertNotNull(tagCollectionOptional25);
    }

    @Test
    public void test01253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01253");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML9 = schema4.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema13.name("hi!");
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("");
        schema22.setMinLength((java.lang.Integer) 10);
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str27 = schema22.get$ref();
        java.lang.Object obj28 = null;
        boolean boolean29 = schema22.equals(obj28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int33 = strComparableSchema30.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        java.lang.String str41 = strComparableSchema36.getFormat();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema60.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema67 = schema65.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList69 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        schema67.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        schema56.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        strComparableSchema36.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        schema35.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        schema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList69);
        io.swagger.oas.models.media.Discriminator discriminator76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema22.discriminator(discriminator76);
        schema4.setAdditionalProperties(schema22);
        java.lang.Boolean boolean79 = schema22.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test01254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema26.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema26.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema26.format("");
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.multipleOf(bigDecimal41);
        schema40.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = schema40.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setName("hi!");
        strComparableSchema47.setNot((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema50.name("hi!");
        io.swagger.oas.models.media.Schema schema59 = schema57.pattern("");
        java.lang.String[] strArray61 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = schema59.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema46.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema25.required((java.util.List<java.lang.String>) strList62);
        java.util.List<java.lang.String> strList67 = schema25.getRequired();
        schema25.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strList67);
    }

    @Test
    public void test01255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.discriminator(discriminator15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int22 = strComparableSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema19.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("default");
        schema16.setNot(schema28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.pattern("default");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test01257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        schema17.setMaxLength((java.lang.Integer) 1);
        schema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01258");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getDescription();
        io.swagger.oas.models.media.Schema schema22 = schema20.getNot();
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema24.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01259");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        java.lang.Integer int9 = strComparableSchema3.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        strComparableSchema3.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.format("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema3.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test01260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        schema11.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema18 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.description("default");
        schema20.setMaxLength((java.lang.Integer) (-1));
        schema20.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01261");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Integer int13 = schema6.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema6.getExtensions();
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Class<?> wildcardClass17 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.title("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj23 = schema22.getExample();
        java.util.List<java.lang.String> strList24 = schema22.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test01263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01263");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setName("hi!");
        strComparableSchema15.setName("Optional.empty");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema15.setMaximum(bigDecimal21);
        java.lang.String str23 = strComparableSchema15.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema11.example((java.lang.Object) strComparableSchema15);
        java.lang.String str27 = schema11.get$ref();
        java.lang.String str28 = schema11.getType();
        io.swagger.oas.models.media.Schema schema30 = schema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema11.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema19 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema21 = schema16.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema0.setExtensions(strMap13);
        java.lang.String str15 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.util.List<java.lang.String> strList18 = schema17.getRequired();
        io.swagger.oas.models.media.Schema schema20 = schema17.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = schema17.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.pattern("");
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("");
        io.swagger.oas.models.media.Schema schema42 = schema36.not(schema41);
        java.lang.Boolean boolean43 = schema41.getUniqueItems();
        schema41.setUniqueItems((java.lang.Boolean) true);
        schema26.addExtension("", (java.lang.Object) schema41);
        schema26.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.pattern("");
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema50.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = strComparableSchema50.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = schema26.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        strComparableSchema60.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema60.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = null;
        strComparableSchema65.setExtensions(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema65.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema68.minimum(bigDecimal70);
        boolean boolean72 = schema64.equals((java.lang.Object) bigDecimal70);
        io.swagger.oas.models.media.Schema schema74 = schema64.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema75 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema64.setExample((java.lang.Object) tagSetOptionalSchema75);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = null;
        strComparableSchema77.setExtensions(strMap78);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema77.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema80.setName("hi!");
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema80.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema86 = schema64.not(schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema26.addProperties("", schema86);
        java.lang.Boolean boolean90 = schema26.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = schema26.getExtensions();
        schema17.setExtensions(strMap91);
        java.lang.Integer int93 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(int93);
    }

    @Test
    public void test01266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema11.setXml(xML13);
        io.swagger.oas.models.media.Schema schema15 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema17 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = schema47.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setName("hi!");
        strComparableSchema50.setNot((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema50.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema50.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema50.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema50.format("");
        java.lang.Boolean boolean65 = schema64.getWriteOnly();
        java.math.BigDecimal bigDecimal66 = null;
        schema64.setMaximum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema70.type("default");
        io.swagger.oas.models.media.Schema schema74 = schema72.format("default");
        schema64.setAdditionalProperties(schema74);
        schema47.addExtension("hi!", (java.lang.Object) schema74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setName("hi!");
        strComparableSchema77.setNot((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema77.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema77.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema77.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema77.format("");
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema91.multipleOf(bigDecimal92);
        schema93.setTitle("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        java.lang.String str96 = schema93.getFormat();
        schema47.setNot(schema93);
        java.lang.Integer int98 = schema47.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertNull(int98);
    }

    @Test
    public void test01268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        java.lang.String str7 = schema6.getType();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean10 = schema9.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test01269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01269");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema4.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int30 = strComparableSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.type("hi!");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema18.additionalProperties(schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema39.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema39.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema45 = schema43.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("");
        io.swagger.oas.models.media.Schema schema51 = schema45.not(schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema45.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema45.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema56.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema56.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema56.format("");
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        java.lang.String[] strArray78 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema72.required((java.util.List<java.lang.String>) strList79);
        schema55.setRequired((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema55.externalDocs(externalDocumentation83);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema55.multipleOf(bigDecimal85);
        schema86.setNullable((java.lang.Boolean) false);
        boolean boolean89 = schema36.equals((java.lang.Object) schema86);
        io.swagger.oas.models.media.Schema schema90 = schema17.not(schema86);
        java.lang.String str91 = schema86.getPattern();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema86.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test01271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01271");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        boolean boolean6 = strComparableSchema0.equals((java.lang.Object) 0);
        java.lang.String str7 = strComparableSchema0.getFormat();
        java.lang.String str8 = strComparableSchema0.getPattern();
        java.lang.Integer int9 = strComparableSchema0.getMaxItems();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01272");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.tags.Tag[] tagArray2 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet3 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet3, tagArray2);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional1.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet3);
        java.lang.String str6 = tagSetOptional1.toString();
        boolean boolean8 = tagSetOptional1.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema12.title("hi!");
        boolean boolean20 = tagSetOptional1.equals((java.lang.Object) "hi!");
        boolean boolean21 = tagSetOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema22.setExtensions(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema22.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema29.pattern("");
        io.swagger.oas.models.media.Schema schema34 = schema28.not(schema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema34.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.maximum(bigDecimal41);
        boolean boolean43 = tagSetOptional1.equals((java.lang.Object) schema42);
        java.lang.Integer int44 = schema42.getMaxLength();
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test01273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        io.swagger.oas.models.media.Schema schema12 = schema9.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema17 = schema12.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.Boolean boolean25 = strComparableSchema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema21.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        schema27.setProperties(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.minimum(bigDecimal42);
        java.math.BigDecimal bigDecimal44 = schema41.getMaximum();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.maximum(bigDecimal45);
        java.lang.String str47 = schema46.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema51.name("hi!");
        io.swagger.oas.models.media.Schema schema60 = schema58.pattern("");
        java.lang.String[] strArray62 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema60.required((java.util.List<java.lang.String>) strList63);
        java.lang.Object obj66 = schema60.getExample();
        schema46.setDefault(obj66);
        io.swagger.oas.annotations.media.Content[] contentArray68 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components69 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional70 = io.swagger.jaxrs2.OperationParser.getContents(contentArray68, components69);
        javax.ws.rs.Produces produces71 = null;
        javax.ws.rs.Produces produces72 = null;
        io.swagger.oas.models.Components components73 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional74 = io.swagger.jaxrs2.OperationParser.getContent(contentArray68, produces71, produces72, components73);
        io.swagger.oas.models.media.Schema schema75 = schema46.example((java.lang.Object) components73);
        io.swagger.oas.models.media.Schema schema76 = schema27.addProperties("default", schema46);
        schema27.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema27.uniqueItems((java.lang.Boolean) false);
        schema17.setAdditionalProperties(schema27);
        java.lang.String str82 = schema17.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(contentArray68);
        org.junit.Assert.assertNotNull(contentOptional70);
        org.junit.Assert.assertNotNull(contentOptional74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str82, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
    }

    @Test
    public void test01274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01274");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        java.lang.String[] strArray14 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray14);
        io.swagger.oas.models.tags.Tag[] tagArray16 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet17 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet17, tagArray16);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet19 = tagSetOptional15.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet17);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet20 = tagSetOptional13.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet17);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet21 = tagSetOptional13.get();
        java.lang.String[] strArray28 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        java.lang.String[] strArray30 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional31 = io.swagger.jaxrs2.OperationParser.getTags(strArray30);
        io.swagger.oas.models.tags.Tag[] tagArray32 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet33 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet33, tagArray32);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet35 = tagSetOptional31.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet33);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet36 = tagSetOptional29.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet33);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet37 = tagSetOptional13.orElse(tagSet36);
        io.swagger.oas.models.tags.Tag[] tagArray38 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet39 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet39, tagArray38);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional41 = java.util.Optional.ofNullable((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet39);
        boolean boolean42 = tagSetOptional41.isPresent();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet43 = tagSetOptional41.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet44 = tagSetOptional13.orElse(tagSet43);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet45 = tagSetOptional5.orElse(tagSet44);
        java.lang.String str46 = tagSetOptional5.toString();
        boolean boolean47 = tagSetOptional5.isPresent();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(tagArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(tagSet19);
        org.junit.Assert.assertNotNull(tagSet20);
        org.junit.Assert.assertNotNull(tagSet21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNotNull(tagSetOptional31);
        org.junit.Assert.assertNotNull(tagArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(tagSet35);
        org.junit.Assert.assertNotNull(tagSet36);
        org.junit.Assert.assertNotNull(tagSet37);
        org.junit.Assert.assertNotNull(tagArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(tagSetOptional41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(tagSet43);
        org.junit.Assert.assertNotNull(tagSet44);
        org.junit.Assert.assertNotNull(tagSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str46, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test01275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01275");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        schema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.addProperties("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", schema39);
        java.lang.Boolean boolean41 = strComparableSchema0.getNullable();
        java.math.BigDecimal bigDecimal42 = strComparableSchema0.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test01276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01276");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        strComparableSchema3.setMinLength((java.lang.Integer) 1);
        strComparableSchema3.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = strComparableSchema3.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test01277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.description("hi!");
        java.lang.Object obj13 = strComparableSchema3.getExample();
        strComparableSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int16 = strComparableSchema3.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test01278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01278");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01279");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.xml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema24.addRequiredItem("Optional.empty");
        java.lang.String str51 = schema24.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test01280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema0.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        java.math.BigDecimal bigDecimal23 = schema20.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = schema20.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(strComparableList24);
    }

    @Test
    public void test01282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator5 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        strComparableSchema6.setExtensions(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema9);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.pattern("");
        io.swagger.oas.models.media.Schema schema18 = schema12.not(schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setName("hi!");
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema23.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.format("");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.multipleOf(bigDecimal38);
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema39.required((java.util.List<java.lang.String>) strList46);
        schema22.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema22.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema56.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.maxItems((java.lang.Integer) 0);
        strComparableSchema56.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema64.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        schema68.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema68.name("Optional.empty");
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema72.setRequired((java.util.List<java.lang.String>) strList75);
        strComparableSchema56.setRequired((java.util.List<java.lang.String>) strList75);
        schema51.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) strList75);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema0.required((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema82 = schema80.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema82.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema48.format("");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.multipleOf(bigDecimal63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        schema62.setExtensions(strMap65);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.additionalProperties(schema67);
        java.math.BigDecimal bigDecimal69 = null;
        schema68.setMinimum(bigDecimal69);
        schema47.setAdditionalProperties(schema68);
        java.lang.Boolean boolean72 = schema47.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test01284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Integer int13 = schema6.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.String str27 = schema26.getFormat();
        schema26.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str30 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema6.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = schema6.getAdditionalProperties();
        java.lang.Boolean boolean35 = schema34.getDeprecated();
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01285");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Object obj7 = null;
        boolean boolean8 = strComparableSchema3.equals(obj7);
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMultipleOf(bigDecimal9);
        strComparableSchema3.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01286");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema12.setPattern("");
        java.lang.Boolean boolean23 = strComparableSchema12.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test01287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01287");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        java.lang.Class<?> wildcardClass21 = contentOptional20.getClass();
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test01288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01288");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        io.swagger.oas.models.tags.Tag[] tagArray2 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet3 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet3, tagArray2);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet5 = tagSetOptional1.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet3);
        java.lang.String str6 = tagSetOptional1.toString();
        boolean boolean8 = tagSetOptional1.equals((java.lang.Object) "");
        boolean boolean9 = tagSetOptional1.isPresent();
        java.lang.String str10 = tagSetOptional1.toString();
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Optional.empty" + "'", str10, "Optional.empty");
    }

    @Test
    public void test01289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01289");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        java.lang.String str10 = schema9.getType();
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.writeOnly((java.lang.Boolean) true);
        schema14.setDeprecated((java.lang.Boolean) true);
        schema14.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML20 = null;
        schema14.setXml(xML20);
        schema14.setTitle("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test01290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getType();
        java.lang.Object obj18 = schema16.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test01291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = strComparableSchema3.getProperties();
        java.lang.Boolean boolean10 = strComparableSchema3.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test01292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01292");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema22.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test01293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema33 = schema27.not(schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema27.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema38.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema38.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.format("");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        io.swagger.oas.models.media.Schema schema63 = schema54.required((java.util.List<java.lang.String>) strList61);
        schema37.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema37.externalDocs(externalDocumentation65);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema37.multipleOf(bigDecimal67);
        schema68.setNullable((java.lang.Boolean) false);
        boolean boolean71 = schema18.equals((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema73 = schema68.format("default");
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema68.multipleOf(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = schema75.format("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test01294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01294");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional[[]]\n    description: Optional[[]]\n    externalDocs: null\n}]]";
    }

    @Test
    public void test01295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.Integer int15 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setName("hi!");
        strComparableSchema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema9.format("");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        schema25.setProperties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema4.setExample((java.lang.Object) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01297");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.maximum(bigDecimal14);
        java.lang.Object obj16 = schema8.getExample();
        io.swagger.oas.models.media.XML xML17 = schema8.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema8.setDiscriminator(discriminator20);
        java.lang.Boolean boolean22 = schema8.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test01298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01298");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        java.lang.Boolean boolean19 = schema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema21 = schema16.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01299");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minimum(bigDecimal20);
        boolean boolean22 = schema14.equals((java.lang.Object) bigDecimal20);
        io.swagger.oas.models.media.Schema schema24 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema4.setNot(schema24);
        io.swagger.oas.annotations.media.Content[] contentArray28 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray28, produces31, produces32, components33);
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(contentArray28, produces35, produces36, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components39);
        schema4.addExtension("#/components/schemas/hi!", (java.lang.Object) components39);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema4.maximum(bigDecimal42);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(contentArray28);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertNotNull(contentOptional40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.lang.Integer int19 = schema16.getMinLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setName("hi!");
        strComparableSchema21.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema21.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema21.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = schema31.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema31.properties(strMap38);
        java.util.Optional<java.lang.Object> objOptional40 = java.util.Optional.ofNullable((java.lang.Object) schema39);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema39.getEnum();
        java.lang.String str42 = schema39.get$ref();
        java.math.BigDecimal bigDecimal43 = null;
        schema39.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.minimum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.pattern("");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema45.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str52 = strComparableSchema45.getPattern();
        java.lang.String str53 = strComparableSchema45.getDescription();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema45.description("default");
        schema55.setPattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        strComparableSchema58.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema58.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = null;
        strComparableSchema65.setExtensions(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema65.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema68.setMinLength((java.lang.Integer) 0);
        strComparableSchema58.setExample((java.lang.Object) strComparableSchema68);
        java.lang.String str73 = strComparableSchema68.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = null;
        strComparableSchema74.setExtensions(strMap75);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema74.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema77);
        schema78.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema78.name("Optional.empty");
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        schema82.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema68.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = schema55.required((java.util.List<java.lang.String>) strList85);
        schema39.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema91 = schema16.required((java.util.List<java.lang.String>) strList85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(objOptional40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test01301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        schema13.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01302");
        java.util.Optional<java.util.Map<java.lang.String, io.swagger.oas.models.links.Link>> strMapOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strMapOptional0);
    }

    @Test
    public void test01303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01303");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.pattern("");
        io.swagger.oas.models.media.Schema schema27 = schema25.type("default");
        io.swagger.oas.models.media.Schema schema28 = schema25.getAdditionalProperties();
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema25.example((java.lang.Object) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema31.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema0.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.description("");
        java.lang.Boolean boolean46 = schema42.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test01304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        java.lang.Boolean boolean19 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.pattern("");
        schema24.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.pattern("");
        io.swagger.oas.models.media.Schema schema40 = schema34.not(schema39);
        java.lang.Boolean boolean41 = schema39.getUniqueItems();
        schema39.setUniqueItems((java.lang.Boolean) true);
        schema24.addExtension("", (java.lang.Object) schema39);
        schema24.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema48.pattern("");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = strComparableSchema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema56 = schema24.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        strComparableSchema58.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema63.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema63.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minimum(bigDecimal68);
        boolean boolean70 = schema62.equals((java.lang.Object) bigDecimal68);
        io.swagger.oas.models.media.Schema schema72 = schema62.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema73 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema62.setExample((java.lang.Object) tagSetOptionalSchema73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        strComparableSchema75.setExtensions(strMap76);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema75.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema78);
        strComparableSchema78.setName("hi!");
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema84 = schema62.not(schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.properties(strMap85);
        io.swagger.oas.models.media.Schema schema87 = schema24.addProperties("", schema84);
        io.swagger.oas.models.media.Schema schema89 = schema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema90 = schema16.example((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test01305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.multipleOf(bigDecimal11);
        java.lang.String str13 = schema12.toString();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = schema15.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        java.lang.String[] strArray18 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema13.setRequired((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema13.type("#/components/schemas/");
        java.lang.Integer int24 = schema13.getMaxItems();
        java.lang.Boolean boolean25 = schema13.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test01307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema9.setProperties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema9.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema9.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        schema29.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setName("hi!");
        strComparableSchema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema36.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema36.format("");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.discriminator(discriminator53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        schema52.setProperties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema52.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema60 = schema58.$ref("Optional.empty");
        java.util.List<java.lang.String> strList61 = schema58.getRequired();
        io.swagger.oas.models.media.Schema schema62 = schema33.not(schema58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema58.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
    }

    @Test
    public void test01309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = strComparableSchema10.getMaximum();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema10.getDefault();
        java.lang.String str17 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        strComparableSchema21.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean29 = strComparableSchema21.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.$ref("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema21.example((java.lang.Object) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setMaxItems((java.lang.Integer) (-1));
        strComparableSchema21.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        schema49.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema49.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setName("hi!");
        strComparableSchema56.setNot((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.lang.Boolean boolean63 = strComparableSchema59.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema59.format("");
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema59.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = schema67.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema70 = schema67.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema49.addProperties("default", schema70);
        io.swagger.oas.models.media.Schema schema73 = schema49.writeOnly((java.lang.Boolean) true);
        strComparableSchema21.setAdditionalProperties(schema49);
        strComparableSchema21.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparable16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test01310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01310");
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(annotatedElementOptional0);
    }

    @Test
    public void test01311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("Optional.empty");
        java.lang.String str13 = schema10.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema37 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList38 = schema37.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setName("hi!");
        strComparableSchema42.setNot((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema45.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema56.setName("hi!");
        strComparableSchema56.setName("Optional.empty");
        java.math.BigDecimal bigDecimal62 = null;
        strComparableSchema56.setMaximum(bigDecimal62);
        java.lang.String str64 = strComparableSchema56.getDescription();
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.maximum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema67 = schema52.not(schema66);
        schema67.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema67.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema39.not(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema72.name("#/components/schemas/");
        boolean boolean75 = schema37.equals((java.lang.Object) schema74);
        java.lang.String str76 = schema37.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test01313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int12 = strComparableSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.type("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.additionalProperties(schema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema14.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        schema18.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema18.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema26 = schema18.description("hi!");
        io.swagger.oas.models.media.Schema schema28 = schema26.name("default");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMaximum(bigDecimal7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema6.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test01315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.String str7 = strComparableSchema0.getTitle();
        strComparableSchema0.setFormat("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minimum(bigDecimal22);
        boolean boolean24 = schema16.equals((java.lang.Object) bigDecimal22);
        io.swagger.oas.models.media.Schema schema26 = schema16.type("Optional.empty");
        boolean boolean27 = schema11.equals((java.lang.Object) schema26);
        schema11.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema31 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema14 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.$ref("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema20.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setName("hi!");
        strComparableSchema35.setNot((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema35.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema35.format("");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        schema49.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str54 = schema49.getType();
        io.swagger.oas.models.media.Schema schema56 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema49.getNot();
        io.swagger.oas.models.media.Schema schema59 = schema49.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema33.example((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = null;
        strComparableSchema61.setExtensions(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema61.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        strComparableSchema66.setExtensions(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema66.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema69.minimum(bigDecimal71);
        boolean boolean73 = schema65.equals((java.lang.Object) bigDecimal71);
        io.swagger.oas.models.media.Schema schema75 = schema65.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema76 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema65.setExample((java.lang.Object) tagSetOptionalSchema76);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        strComparableSchema78.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema78.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema81);
        strComparableSchema81.setName("hi!");
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema81.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema87 = schema65.not(schema86);
        io.swagger.oas.models.media.Schema schema89 = schema87.$ref("default");
        java.math.BigDecimal bigDecimal90 = null;
        schema89.setMinimum(bigDecimal90);
        io.swagger.oas.models.media.XML xML92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema89.xml(xML92);
        boolean boolean94 = schema49.equals((java.lang.Object) schema89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test01317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema21.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setName("hi!");
        strComparableSchema24.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema24.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema36.setName("hi!");
        strComparableSchema36.setName("Optional.empty");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema36.setMaximum(bigDecimal42);
        java.lang.String str44 = strComparableSchema36.getDescription();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema36.maximum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema24.additionalProperties(schema46);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        schema47.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema51.setExtensions(strMap52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.minimum(bigDecimal61);
        boolean boolean63 = schema55.equals((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema schema65 = schema55.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema66 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema55.setExample((java.lang.Object) tagSetOptionalSchema66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        strComparableSchema68.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema68.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema71.setName("hi!");
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema77 = schema55.not(schema76);
        io.swagger.oas.models.media.Schema schema79 = schema77.$ref("default");
        schema47.setAdditionalProperties(schema77);
        schema21.setExample((java.lang.Object) schema77);
        schema77.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test01318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setTitle("hi!");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.maximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.getAdditionalProperties();
        strComparableSchema13.setDeprecated((java.lang.Boolean) false);
        strComparableSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema13.setDiscriminator(discriminator21);
        java.lang.Object obj23 = strComparableSchema13.getExample();
        strComparableSchema13.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean26 = strComparableSchema3.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test01319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("");
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema25.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = schema12.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        schema12.setType("Optional[[]]");
        schema12.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01320");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("default");
        schema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.writeOnly((java.lang.Boolean) true);
        schema10.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String str23 = schema22.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01322");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema21.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("");
        io.swagger.oas.models.media.Schema schema36 = schema30.not(schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setName("hi!");
        strComparableSchema37.setNot((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema40.name("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema47.pattern("");
        java.lang.String[] strArray51 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = schema49.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema36.required((java.util.List<java.lang.String>) strList52);
        schema21.setRequired((java.util.List<java.lang.String>) strList52);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01323");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test01324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        java.lang.String str14 = schema11.getName();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema11.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        schema25.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema30 = schema25.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema41.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema49 = schema47.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = schema49.getProperties();
        schema30.setProperties(strMap50);
        io.swagger.oas.models.media.Schema schema52 = schema11.properties(strMap50);
        io.swagger.oas.models.media.Schema schema54 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01325");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.ofNullable("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test01326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01326");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList25);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema12.getDiscriminator();
        java.lang.String str30 = schema12.getPattern();
        java.lang.Boolean boolean31 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema32.$ref("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema42 = schema38.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.example(obj43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        schema44.setName("");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = schema12.additionalProperties(schema50);
        schema51.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setName("hi!");
        strComparableSchema57.setNot((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema60.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        strComparableSchema68.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema68.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema71.setName("hi!");
        strComparableSchema71.setName("Optional.empty");
        java.math.BigDecimal bigDecimal77 = null;
        strComparableSchema71.setMaximum(bigDecimal77);
        java.lang.String str79 = strComparableSchema71.getDescription();
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema71.maximum(bigDecimal80);
        io.swagger.oas.models.media.Schema schema82 = schema67.not(schema81);
        schema82.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema86 = schema82.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema54.not(schema86);
        java.math.BigDecimal bigDecimal88 = null;
        strComparableSchema54.setMultipleOf(bigDecimal88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema54.externalDocs(externalDocumentation90);
        io.swagger.oas.models.media.Schema schema92 = schema51.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.Integer int93 = schema51.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(int93);
    }

    @Test
    public void test01327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01327");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        java.math.BigDecimal bigDecimal68 = schema67.getMultipleOf();
        java.lang.Integer int69 = schema67.getMaxProperties();
        io.swagger.oas.models.media.XML xML70 = schema67.getXml();
        java.lang.String str71 = schema67.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(xML70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test01328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int22 = strComparableSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.type("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema10.additionalProperties(schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.pattern("");
        io.swagger.oas.models.media.Schema schema43 = schema37.not(schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema37.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema48.format("");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.multipleOf(bigDecimal63);
        java.lang.String[] strArray70 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = schema64.required((java.util.List<java.lang.String>) strList71);
        schema47.setRequired((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema47.externalDocs(externalDocumentation75);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema47.multipleOf(bigDecimal77);
        schema78.setNullable((java.lang.Boolean) false);
        boolean boolean81 = schema28.equals((java.lang.Object) schema78);
        schema9.setExample((java.lang.Object) boolean81);
        java.math.BigDecimal bigDecimal83 = schema9.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test01329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        schema14.setMinimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema25.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema25.example((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        strComparableSchema45.setExtensions(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema45.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema48.$ref("hi!");
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema48.minimum(bigDecimal56);
        strComparableSchema25.setDefault((java.lang.Object) strComparableSchema48);
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema48);
        schema14.setType("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01330");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test01331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01331");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        schema7.setExample((java.lang.Object) contactOptional9);
        java.lang.Class<?> wildcardClass11 = schema7.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional12 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass11);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(genericDeclarationOptional12);
    }

    @Test
    public void test01332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        java.util.List<java.lang.String> strList26 = schema22.getRequired();
        schema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        java.lang.Integer int29 = schema22.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test01333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01333");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        strComparableSchema0.set$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test01334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01334");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        schema4.setMaxItems((java.lang.Integer) 100);
        java.lang.String str19 = schema4.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema4.setProperties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema4.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean24 = schema4.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test01335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01335");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.discriminator(discriminator9);
        java.lang.Integer int11 = schema10.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj18 = null;
        boolean boolean19 = schema17.equals(obj18);
        java.lang.Integer int20 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema22 = schema17.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strComparableSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema23.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema33.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema33.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        schema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema schema44 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass45 = schema44.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test01337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("Optional.empty", (java.lang.Object) strComparableSchema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema17.getName();
        java.lang.Boolean boolean26 = strComparableSchema17.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema17.example((java.lang.Object) strList52);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.Object obj58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema9.example(obj58);
        java.lang.String str60 = strComparableSchema9.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test01338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        schema10.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation12);
    }

    @Test
    public void test01339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01339");
        java.util.Optional<java.lang.Comparable<java.lang.String>> strComparableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strComparableOptional0);
    }

    @Test
    public void test01340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        schema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.String str19 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema21 = schema10.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean22 = schema10.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test01341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        schema24.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema24.getDiscriminator();
        schema24.setReadOnly((java.lang.Boolean) false);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(discriminator28);
    }

    @Test
    public void test01342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01342");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMultipleOf(bigDecimal24);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema22.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strComparableList26);
    }

    @Test
    public void test01344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean5 = schema4.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setName("hi!");
        strComparableSchema6.setNot((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema9.getUniqueItems();
        java.lang.Boolean boolean14 = strComparableSchema9.getNullable();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema9.pattern("default");
        io.swagger.oas.models.media.Schema schema20 = schema18.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.xml(xML23);
        io.swagger.oas.models.media.Schema schema25 = schema4.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema25.setExternalDocs(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema15.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.name("Optional.empty");
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        schema19.setRequired((java.util.List<java.lang.String>) strList22);
        strComparableSchema3.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Boolean boolean26 = strComparableSchema3.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema28.setExtensions(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema31.setName("hi!");
        strComparableSchema31.setTitle("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.minimum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setName("hi!");
        strComparableSchema38.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.Boolean boolean45 = strComparableSchema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema41.format("");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema41.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema49.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema31.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema3.addProperties("#/components/schemas/", schema51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = strComparableSchema3.getProperties();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.pattern("");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema57.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = strComparableSchema57.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strComparableSchema57.getExtensions();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema57.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int71 = strComparableSchema68.getMinProperties();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.type("hi!");
        java.lang.Class<?> wildcardClass74 = schema73.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional75 = java.util.Optional.of(wildcardClass74);
        schema67.setDefault((java.lang.Object) wildcardClass74);
        schema55.setNot(schema67);
        schema55.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClassOptional75);
    }

    @Test
    public void test01346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01346");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.example((java.lang.Object) 1.0d);
        schema16.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema16.setMinimum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.getAdditionalProperties();
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.discriminator(discriminator13);
        java.lang.Boolean boolean15 = schema14.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test01348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList12 = strComparableSchema3.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test01349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01349");
        java.lang.Object obj0 = null;
        java.util.Optional<java.lang.Object> objOptional1 = java.util.Optional.ofNullable(obj0);
        org.junit.Assert.assertNotNull(objOptional1);
    }

    @Test
    public void test01350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.math.BigDecimal bigDecimal15 = strComparableSchema10.getMaximum();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableSchema10.getDefault();
        java.lang.String str17 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        strComparableSchema21.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean29 = strComparableSchema21.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema30.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema30.$ref("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema21.example((java.lang.Object) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        strComparableSchema21.setProperties(strMap39);
        java.lang.Boolean boolean41 = strComparableSchema21.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparable16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test01351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        java.lang.String str15 = strComparableSchema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema16.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        schema20.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema20.name("Optional.empty");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema10.required((java.util.List<java.lang.String>) strList27);
        java.lang.String str31 = schema30.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema30.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        java.lang.Object obj44 = schema43.getExample();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.minimum(bigDecimal45);
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "hi!", "default" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        schema46.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema46.type("#/components/schemas/");
        schema30.setAdditionalProperties(schema46);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test01352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01352");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.set$ref("Optional.empty");
        java.lang.String str11 = schema6.getPattern();
        schema6.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int14 = strComparableSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.type("hi!");
        java.lang.Class<?> wildcardClass17 = schema16.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional18 = java.util.Optional.of(wildcardClass17);
        schema10.setDefault((java.lang.Object) wildcardClass17);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = schema10.getEnum();
        java.lang.String str21 = schema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema22.pattern("");
        io.swagger.oas.models.media.Schema schema36 = schema34.type("default");
        io.swagger.oas.models.media.Schema schema37 = schema34.getAdditionalProperties();
        schema34.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        strComparableSchema40.setExtensions(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema40.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        schema50.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        io.swagger.oas.models.media.Schema schema55 = schema34.additionalProperties(schema50);
        io.swagger.oas.models.media.XML xML56 = schema34.getXml();
        java.lang.String str57 = schema34.getDescription();
        io.swagger.oas.models.media.Schema schema58 = schema34.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema34.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema34.minimum(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setName("hi!");
        strComparableSchema63.setNot((io.swagger.oas.models.media.Schema) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema66.name("hi!");
        io.swagger.oas.models.media.Schema schema75 = schema73.pattern("");
        java.lang.String[] strArray77 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema75.required((java.util.List<java.lang.String>) strList78);
        schema75.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal83 = schema75.getMultipleOf();
        io.swagger.oas.models.media.Schema schema85 = schema75.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean86 = schema75.getReadOnly();
        io.swagger.oas.models.media.Schema schema87 = schema75.getNot();
        schema34.setNot(schema75);
        io.swagger.oas.models.media.Schema schema90 = schema34.name("hi!");
        io.swagger.oas.models.media.Schema schema92 = schema34.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema93 = schema10.example((java.lang.Object) 1);
        java.lang.String str94 = schema10.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClassOptional18);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(xML56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str94, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.nullable((java.lang.Boolean) false);
        strComparableSchema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema17.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test01355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.minLength((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList14 = strComparableSchema3.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.addRequiredItem("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.util.Optional<java.lang.Object> objOptional5 = java.util.Optional.ofNullable((java.lang.Object) strComparableSchema0);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema9.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(objOptional5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.maximum(bigDecimal9);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.pattern("");
        io.swagger.oas.models.media.Schema schema27 = schema25.type("default");
        io.swagger.oas.models.media.Schema schema28 = schema25.getAdditionalProperties();
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList43 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        schema41.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList43);
        io.swagger.oas.models.media.Schema schema46 = schema25.additionalProperties(schema41);
        io.swagger.oas.models.media.XML xML47 = schema25.getXml();
        java.lang.String str48 = schema25.getDescription();
        io.swagger.oas.models.media.Schema schema49 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema25.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema25.minimum(bigDecimal52);
        schema25.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema57.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema57.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema57.$ref("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema63.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema67 = schema63.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema63.example(obj68);
        io.swagger.oas.models.media.Schema schema71 = schema69.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = null;
        strComparableSchema72.setExtensions(strMap73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema72.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema75.setName("hi!");
        strComparableSchema75.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML81 = null;
        strComparableSchema75.setXml(xML81);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList88 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean90 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean91 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean92 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean93 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema75.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList88);
        schema69.setDefault((java.lang.Object) strComparableSchema75);
        io.swagger.oas.models.media.Schema schema97 = strComparableSchema75.exclusiveMaximum((java.lang.Boolean) false);
        schema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema75);
        boolean boolean99 = schema10.equals((java.lang.Object) strComparableSchema75);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(xML47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test01358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01358");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema6.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema6.pattern("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.String str17 = schema16.getName();
        io.swagger.oas.models.media.Schema schema19 = schema16.type("");
        schema16.setDeprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema16.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test01359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01359");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema13.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema13.format("");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        java.lang.String[] strArray35 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema29.required((java.util.List<java.lang.String>) strList36);
        java.lang.Boolean boolean39 = schema38.getExclusiveMaximum();
        java.lang.String str40 = schema38.getDescription();
        schema12.setNot(schema38);
        io.swagger.oas.models.media.Schema schema43 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01361");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema36 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema12.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = schema38.minItems((java.lang.Integer) 0);
        java.lang.String str42 = schema38.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema43.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema53.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema61 = schema53.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema53.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str64 = schema63.getDescription();
        io.swagger.oas.models.media.Schema schema65 = schema63.getNot();
        schema38.setAdditionalProperties(schema63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test01362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01362");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema14.getType();
        io.swagger.oas.models.media.Schema schema21 = schema14.name("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        schema21.setFormat("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test01363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.title("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean23 = schema18.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        strComparableSchema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema26.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema26.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.minimum(bigDecimal37);
        java.math.BigDecimal bigDecimal39 = schema36.getMaximum();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema36.maximum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema42.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj49 = schema48.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = schema48.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setName("hi!");
        strComparableSchema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema59 = schema48.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema55);
        boolean boolean60 = schema41.equals((java.lang.Object) schema59);
        io.swagger.oas.models.media.Schema schema61 = schema25.example((java.lang.Object) schema59);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.maximum(bigDecimal62);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("Optional.empty", (java.lang.Object) strComparableSchema9);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema9.setMinimum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema4.getProperties();
        io.swagger.oas.models.media.Schema schema15 = schema4.title("");
        io.swagger.oas.models.media.Schema schema17 = schema4.minItems((java.lang.Integer) 100);
        java.lang.String str18 = schema17.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test01366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean32 = schema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = schema29.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01367");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = strComparableSchema3.getWriteOnly();
        strComparableSchema3.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        strComparableSchema3.setMinimum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    }

    @Test
    public void test01368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01368");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        schema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.title("hi!");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema15.setDiscriminator(discriminator16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01369");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strComparableSchema0.getExtensions();
        java.lang.Boolean boolean10 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test01370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01370");
        java.util.Optional<java.util.HashSet<io.swagger.oas.models.tags.Tag>> tagSetOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(tagSetOptional0);
    }

    @Test
    public void test01371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema6.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setName("hi!");
        strComparableSchema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema15.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema15.format("");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.discriminator(discriminator32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema31.setProperties(strMap34);
        schema31.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.not(schema31);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema6.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
    }

    @Test
    public void test01372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema19 = schema6.name("");
        io.swagger.oas.models.media.Schema schema21 = schema6.$ref("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        java.lang.Integer int11 = schema10.getMaxLength();
        java.lang.Boolean boolean12 = schema10.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.getNot();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema10.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
    }

    @Test
    public void test01374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test01375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema19 = schema6.name("");
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str22 = schema21.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.lang.Integer int13 = schema6.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema16.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minProperties((java.lang.Integer) 100);
        java.lang.String str27 = schema26.getFormat();
        schema26.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str30 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema6.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01377");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String[] strArray8 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        io.swagger.oas.models.tags.Tag[] tagArray10 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet11 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet11, tagArray10);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet13 = tagSetOptional9.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet11);
        java.lang.String str14 = tagSetOptional9.toString();
        boolean boolean16 = tagSetOptional9.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.example((java.lang.Object) boolean16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        schema24.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema24.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not(schema24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = strComparableSchema0.getMaximum();
        strComparableSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.externalDocs(externalDocumentation36);
        java.lang.Integer int38 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema34.setName("hi!");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.discriminator(discriminator40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList46 = strComparableSchema42.getEnum();
        schema41.setEnum(strComparableList46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema41.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema41.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema41.setUniqueItems((java.lang.Boolean) false);
        schema25.setNot(schema41);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema25.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(strComparableList46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator55);
    }

    @Test
    public void test01379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test01380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.name("Optional.empty");
        java.lang.String str9 = strComparableSchema3.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        strComparableSchema3.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.exclusiveMaximum((java.lang.Boolean) true);
        schema13.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.discriminator(discriminator7);
        java.lang.String str9 = strComparableSchema0.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01382");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        schema23.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema23.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01383");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema14 = schema12.getAdditionalProperties();
        schema14.setFormat("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        schema22.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema31 = schema29.name("");
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMaximum(bigDecimal32);
        java.lang.Boolean boolean34 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML35 = null;
        schema31.setXml(xML35);
        schema22.setNot(schema31);
        java.lang.Class<?> wildcardClass38 = schema22.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test01385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema19 = schema6.name("");
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema19.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.minProperties((java.lang.Integer) 1);
        schema31.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01387");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.nullable((java.lang.Boolean) false);
        schema31.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema31.getDiscriminator();
        schema31.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test01388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01388");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray35);
        io.swagger.oas.models.media.Schema schema37 = schema25.example((java.lang.Object) tagSetOptional36);
        java.lang.Class<?> wildcardClass38 = tagSetOptional36.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test01390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01390");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = schema23.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.pattern("");
        io.swagger.oas.models.media.Schema schema31 = schema25.not(schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema31.getProperties();
        java.math.BigDecimal bigDecimal33 = schema31.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema31.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema37 = schema31.readOnly((java.lang.Boolean) false);
        schema10.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.XML xML39 = schema10.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
    }

    @Test
    public void test01391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("Optional.empty");
        schema19.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        schema9.setExample((java.lang.Object) schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMinimum(bigDecimal27);
        schema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = strComparableSchema3.getXml();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        strComparableSchema3.setDiscriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema3.description("Optional.empty");
        strComparableSchema3.setName("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema3.multipleOf(bigDecimal20);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01393");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01394");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("default");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("");
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean15 = schema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test01395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        schema24.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.minimum(bigDecimal37);
        boolean boolean39 = schema31.equals((java.lang.Object) bigDecimal37);
        io.swagger.oas.models.media.Schema schema41 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema42 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema31.setExample((java.lang.Object) tagSetOptionalSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema44.setExtensions(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema47.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema53 = schema31.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("default");
        java.math.BigDecimal bigDecimal56 = null;
        schema55.setMinimum(bigDecimal56);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.xml(xML58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = schema24.not(schema59);
        java.lang.Boolean boolean63 = schema62.getDeprecated();
        java.math.BigDecimal bigDecimal64 = null;
        schema62.setMinimum(bigDecimal64);
        schema62.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional[[]]\n    description: Optional[[]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test01396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01396");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema23 = schema21.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.pattern("");
        io.swagger.oas.models.media.Schema schema29 = schema23.not(schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema28.setXml(xML30);
        io.swagger.oas.models.media.Schema schema32 = schema28.getNot();
        schema15.setExample((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema35 = schema15.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01397");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        schema20.setMaxItems((java.lang.Integer) (-1));
        schema20.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test01398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [Optional.empty, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: default\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test01399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01399");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema19.setProperties(strMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test01400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01400");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.format("default");
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = schema4.getType();
        java.lang.Boolean boolean10 = schema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "default" + "'", str9, "default");
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01401");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet7 = tagSetOptional6.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet8 = null;
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet9 = tagSetOptional6.orElse(tagSet8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<java.lang.Iterable<io.swagger.oas.models.tags.Tag>> tagIterableOptional10 = java.util.Optional.of((java.lang.Iterable<io.swagger.oas.models.tags.Tag>) tagSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSet7);
        org.junit.Assert.assertNotNull(tagSet9);
    }

    @Test
    public void test01402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01402");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.ofNullable("hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test01403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01403");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList4 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList4);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean11 = strComparableSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.maximum(bigDecimal12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test01404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01404");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        schema4.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema4.getEnum();
        schema4.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("#/components/schemas/");
        schema22.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        schema37.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        strComparableSchema42.setDescription("default");
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema42.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema37.required((java.util.List<java.lang.String>) strList52);
        schema55.setDescription("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema22.setNot(schema55);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema55.not(schema59);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        schema60.setDiscriminator(discriminator61);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strComparableList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test01405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema11.setXml(xML13);
        schema11.setFormat("hi!");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = schema11.getEnum();
        java.lang.Boolean boolean18 = schema11.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strComparableList17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema2.setMinProperties((java.lang.Integer) 1);
        schema2.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test01407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01407");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMaximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01408");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.String str2 = tagSetOptional1.toString();
        java.lang.String[] strArray3 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str5 = tagSetOptional4.toString();
        boolean boolean6 = tagSetOptional1.equals((java.lang.Object) str5);
        boolean boolean7 = tagSetOptional1.isPresent();
        boolean boolean8 = tagSetOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<io.swagger.oas.models.tags.Tag> tagSet9 = tagSetOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagSetOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01409");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList4 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema8.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema18.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        io.swagger.oas.models.media.Schema schema26 = schema20.not(schema25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema20.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema20.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema31.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema31.format("");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        java.lang.String[] strArray53 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        io.swagger.oas.models.media.Schema schema56 = schema47.required((java.util.List<java.lang.String>) strList54);
        schema30.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema30.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = null;
        strComparableSchema61.setExtensions(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema61.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema64.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.maxItems((java.lang.Integer) 0);
        strComparableSchema64.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = null;
        strComparableSchema72.setExtensions(strMap73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema72.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema75);
        schema76.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema76.name("Optional.empty");
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema80.setRequired((java.util.List<java.lang.String>) strList83);
        strComparableSchema64.setRequired((java.util.List<java.lang.String>) strList83);
        schema59.addExtension("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]", (java.lang.Object) strList83);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema8.required((java.util.List<java.lang.String>) strList83);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList83);
        strComparableSchema0.setName("#/components/schemas/");
        java.math.BigDecimal bigDecimal92 = null;
        strComparableSchema0.setMultipleOf(bigDecimal92);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test01410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema schema18 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        java.lang.Object obj18 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema19.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        strComparableSchema19.setExample((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema34 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema36 = schema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = schema40.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test01412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01412");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.minimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setName("hi!");
        strComparableSchema3.setNot((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema17.setName("hi!");
        strComparableSchema17.setName("Optional.empty");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema17.setMaximum(bigDecimal23);
        java.lang.String str25 = strComparableSchema17.getDescription();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema13.not(schema27);
        schema28.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.maxLength((java.lang.Integer) 0);
        schema35.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.lang.Boolean boolean11 = strComparableSchema3.getNullable();
        java.lang.Comparable<java.lang.String> strComparable12 = strComparableSchema3.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setName("hi!");
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema22.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema22.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema14.example((java.lang.Object) 100);
        strComparableSchema3.addExtension("", (java.lang.Object) strComparableSchema14);
        strComparableSchema3.setMaxLength((java.lang.Integer) 1);
        java.lang.Integer int37 = strComparableSchema3.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strComparable12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test01414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01414");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema16.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema24.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema27.setName("hi!");
        strComparableSchema27.setName("Optional.empty");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema27.setMaximum(bigDecimal33);
        java.lang.String str35 = strComparableSchema27.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema23.not(schema37);
        schema38.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema38.description("");
        io.swagger.oas.models.media.Schema schema46 = schema38.type("");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.xml(xML47);
        java.lang.String str49 = schema48.getPattern();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema3.example((java.lang.Object) str49);
        schema50.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList4 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList4);
        strComparableSchema0.setTitle("default");
        java.lang.Object obj9 = null;
        strComparableSchema0.setDefault(obj9);
        java.math.BigDecimal bigDecimal11 = null;
        strComparableSchema0.setMultipleOf(bigDecimal11);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test01416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        java.lang.Boolean boolean13 = schema4.getNullable();
        schema4.setType("hi!");
        schema4.setType("default");
        io.swagger.oas.models.media.Schema schema19 = schema4.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = schema19.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        schema14.setExtensions(strMap17);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        java.lang.Integer int21 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema14.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        schema25.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: default\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema25.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01418");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.pattern("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema20.$ref("hi!");
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema26);
        java.lang.Boolean boolean28 = schema18.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("Optional.empty");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema10.minimum(bigDecimal16);
        schema17.setNullable((java.lang.Boolean) true);
        schema17.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema17.maxProperties((java.lang.Integer) 1);
        java.lang.String str24 = schema17.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test01420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        schema4.setMinLength((java.lang.Integer) (-1));
        java.lang.String str9 = schema4.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        strComparableSchema10.setExtensions(strMap11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setMinLength((java.lang.Integer) 0);
        strComparableSchema10.setExample((java.lang.Object) strComparableSchema20);
        java.lang.String str25 = strComparableSchema20.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema30.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.name("Optional.empty");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema20.required((java.util.List<java.lang.String>) strList37);
        schema4.setDefault((java.lang.Object) strComparableSchema20);
        strComparableSchema20.set$ref("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01421");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema12.getType();
        java.lang.Integer int39 = schema12.getMaxItems();
        schema12.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "default" + "'", str38, "default");
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test01422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01422");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test01423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        strComparableSchema3.setMaximum(bigDecimal9);
        java.lang.String str11 = strComparableSchema3.getDescription();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.maximum(bigDecimal12);
        java.lang.String str14 = strComparableSchema3.toString();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema16.getWriteOnly();
        java.lang.String str18 = schema16.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema0.setExtensions(strMap13);
        java.lang.String str15 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.util.List<java.lang.String> strList18 = schema17.getRequired();
        io.swagger.oas.models.media.Schema schema20 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema21.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        strComparableSchema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema24.$ref("#/components/schemas/");
        java.lang.Integer int34 = schema33.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int38 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.type("hi!");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setName("hi!");
        strComparableSchema43.setNot((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema43.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema43.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema43.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema43.format("");
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        io.swagger.oas.models.media.Schema schema68 = schema59.required((java.util.List<java.lang.String>) strList66);
        schema42.setRequired((java.util.List<java.lang.String>) strList66);
        schema33.setRequired((java.util.List<java.lang.String>) strList66);
        schema17.setRequired((java.util.List<java.lang.String>) strList66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 1);
        schema12.setMinLength((java.lang.Integer) 0);
        schema12.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = null;
        schema12.setMinimum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01426");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.XML xML14 = schema13.getXml();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test01427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema11.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema11.getEnum();
        schema10.setEnum(strComparableList15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema18.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        java.lang.String str12 = strComparableSchema0.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.pattern("");
        java.lang.String str16 = strComparableSchema11.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema11.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strComparableSchema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema28.minimum(bigDecimal30);
        boolean boolean32 = schema24.equals((java.lang.Object) bigDecimal30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema24.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        strComparableSchema35.setExtensions(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema35.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema41 = schema39.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.pattern("");
        io.swagger.oas.models.media.Schema schema47 = schema41.not(schema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.properties(strMap50);
        io.swagger.oas.models.media.Schema schema52 = schema24.addProperties("", schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema53.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        strComparableSchema58.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema61.minimum(bigDecimal63);
        boolean boolean65 = schema57.equals((java.lang.Object) bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setName("hi!");
        strComparableSchema66.setNot((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema66.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema66.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema66.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema66.format("");
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.multipleOf(bigDecimal81);
        java.lang.String[] strArray88 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema82.required((java.util.List<java.lang.String>) strList89);
        schema57.setRequired((java.util.List<java.lang.String>) strList89);
        schema24.setRequired((java.util.List<java.lang.String>) strList89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema24.getProperties();
        schema18.setProperties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = strComparableSchema3.properties(strMap94);
        io.swagger.oas.models.media.Schema schema98 = schema96.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01430");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minProperties((java.lang.Integer) 10);
        schema14.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01431");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.of("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test01432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01432");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = schema4.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema6.not(schema11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        schema16.setRequired((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema16.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema16.multipleOf(bigDecimal46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema16.externalDocs(externalDocumentation48);
        java.math.BigDecimal bigDecimal50 = schema49.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test01433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01433");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setFormat("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = schema12.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        schema21.setMinItems((java.lang.Integer) 1);
        schema21.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.name("Optional.empty");
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.maximum(bigDecimal14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema21.getReadOnly();
        java.lang.Boolean boolean23 = schema21.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
    }

    @Test
    public void test01435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        java.lang.Integer int13 = schema6.getMaxProperties();
        java.lang.Boolean boolean14 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setName("hi!");
        strComparableSchema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema19.name("hi!");
        strComparableSchema19.setDeprecated((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema19.getType();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setName("hi!");
        strComparableSchema32.setNot((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema32.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema32.format("");
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.discriminator(discriminator49);
        java.lang.String[] strArray53 = new java.lang.String[] { "default", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        schema50.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema19.required((java.util.List<java.lang.String>) strList54);
        boolean boolean58 = schema6.equals((java.lang.Object) strComparableSchema19);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test01436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01436");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema7.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.String str25 = strComparableSchema12.get$ref();
        java.lang.Boolean boolean26 = strComparableSchema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema12.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema12.externalDocs(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01438");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        strComparableSchema3.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema3.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema14.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema17 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test01439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        schema23.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean30 = strComparableSchema27.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList31 = strComparableSchema27.getEnum();
        schema23.setExample((java.lang.Object) strComparableList31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strComparableList31);
    }

    @Test
    public void test01440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getPattern();
        io.swagger.oas.models.media.Schema schema18 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList21 = schema15.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test01442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01442");
        java.lang.String[] strArray3 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.String str5 = tagSetOptional4.toString();
        java.lang.String str6 = tagSetOptional4.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet7 = tagSetOptional4.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet8 = tagSetOptional4.get();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setName("hi!");
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema17.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.format("");
        boolean boolean32 = tagSetOptional16.equals((java.lang.Object) schema31);
        java.lang.String[] strArray33 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        io.swagger.oas.models.tags.Tag[] tagArray35 = new io.swagger.oas.models.tags.Tag[] {};
        java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag> tagSet36 = new java.util.LinkedHashSet<io.swagger.oas.models.tags.Tag>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.tags.Tag>) tagSet36, tagArray35);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet38 = tagSetOptional34.orElse((java.util.Set<io.swagger.oas.models.tags.Tag>) tagSet36);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet39 = tagSetOptional16.orElse(tagSet38);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet40 = tagSetOptional16.get();
        java.lang.String[] strArray44 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional45 = io.swagger.jaxrs2.OperationParser.getTags(strArray44);
        java.lang.String str46 = tagSetOptional45.toString();
        java.lang.String str47 = tagSetOptional45.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet48 = tagSetOptional45.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet49 = tagSetOptional45.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet50 = tagSetOptional16.orElse(tagSet49);
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet51 = tagSetOptional16.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet52 = tagSetOptional4.orElse(tagSet51);
        java.lang.String str53 = tagSetOptional4.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str5, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str6, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet7);
        org.junit.Assert.assertNotNull(tagSet8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertNotNull(tagArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(tagSet38);
        org.junit.Assert.assertNotNull(tagSet39);
        org.junit.Assert.assertNotNull(tagSet40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(tagSetOptional45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str46, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str47, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet48);
        org.junit.Assert.assertNotNull(tagSet49);
        org.junit.Assert.assertNotNull(tagSet50);
        org.junit.Assert.assertNotNull(tagSet51);
        org.junit.Assert.assertNotNull(tagSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]" + "'", str53, "Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
    }

    @Test
    public void test01443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema18.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema20.setMaximum(bigDecimal25);
        java.util.List<java.lang.String> strList27 = strComparableSchema20.getRequired();
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.uniqueItems((java.lang.Boolean) true);
        schema33.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.pattern("");
        java.lang.String str41 = strComparableSchema36.getFormat();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema36.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema45.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setName("hi!");
        strComparableSchema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema48.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema48.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema48.format("");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.multipleOf(bigDecimal63);
        schema62.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema68 = schema62.format("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setName("hi!");
        strComparableSchema69.setNot((io.swagger.oas.models.media.Schema) strComparableSchema72);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema72.name("hi!");
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("");
        java.lang.String[] strArray83 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        io.swagger.oas.models.media.Schema schema86 = schema81.required((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema87 = schema68.required((java.util.List<java.lang.String>) strList84);
        schema45.setRequired((java.util.List<java.lang.String>) strList84);
        schema33.setRequired((java.util.List<java.lang.String>) strList84);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional90 = java.util.Optional.ofNullable((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema91 = schema7.required((java.util.List<java.lang.String>) strList84);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strListOptional90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test01444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.format("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        schema21.setDiscriminator(discriminator22);
        schema21.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema31.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minimum(bigDecimal36);
        boolean boolean38 = schema30.equals((java.lang.Object) bigDecimal36);
        io.swagger.oas.models.media.Schema schema40 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema41 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema30.setExample((java.lang.Object) tagSetOptionalSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema46.setName("hi!");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema52 = schema30.not(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.$ref("default");
        java.lang.String str55 = schema52.getPattern();
        schema52.setNullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test01445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01445");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema6.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        java.lang.Object obj11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.example(obj11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema12.format("default");
        java.math.BigDecimal bigDecimal21 = null;
        schema12.setMultipleOf(bigDecimal21);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.type("Optional.empty");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema12.setMaximum(bigDecimal17);
        java.util.List<java.lang.String> strList19 = strComparableSchema12.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema12.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema12.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        strComparableSchema12.set$ref("");
        java.math.BigDecimal bigDecimal28 = strComparableSchema12.getMaximum();
        java.lang.String str29 = strComparableSchema12.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test01448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema4.exclusiveMaximum((java.lang.Boolean) true);
        schema4.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01449");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.String str15 = schema14.getTitle();
        java.lang.String str16 = schema14.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        java.lang.Boolean boolean8 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = strComparableSchema3.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema14.setExtensions(strMap15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strComparableSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minimum(bigDecimal24);
        boolean boolean26 = schema18.equals((java.lang.Object) bigDecimal24);
        io.swagger.oas.models.media.Schema schema28 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str31 = schema30.getPattern();
        schema13.setExample((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setName("hi!");
        strComparableSchema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema33.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema33.format("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        schema47.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema47.format("default");
        io.swagger.oas.models.media.Schema schema55 = schema53.description("");
        io.swagger.oas.models.media.Schema schema56 = schema30.additionalProperties(schema55);
        java.lang.Integer int57 = schema30.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test01451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        java.lang.Integer int7 = schema6.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.discriminator(discriminator11);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01452");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional[[]]\n    description: Optional[[]]\n    externalDocs: null\n}]]";
    }

    @Test
    public void test01453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        java.lang.String[] strArray9 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.required((java.util.List<java.lang.String>) strList10);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = schema14.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema3.minLength((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList14 = strComparableSchema3.getRequired();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema3.maximum(bigDecimal15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        java.lang.String str29 = schema6.getTitle();
        schema6.setMaxLength((java.lang.Integer) 100);
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema6.externalDocs(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01456");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        java.lang.String[] strArray14 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        io.swagger.oas.models.media.Schema schema17 = schema12.required((java.util.List<java.lang.String>) strList15);
        schema12.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema22 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) true);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01457");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.maximum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) false);
        schema15.set$ref("hi!");
        java.lang.String str22 = schema15.getDescription();
        java.lang.String str23 = schema15.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.$ref("hi!");
        java.lang.Boolean boolean11 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setName("hi!");
        strComparableSchema12.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema22.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema29.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.lang.Boolean boolean37 = strComparableSchema29.getWriteOnly();
        java.lang.String str38 = strComparableSchema29.getFormat();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.minLength((java.lang.Integer) 100);
        strComparableSchema3.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.xml(xML42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setName("hi!");
        strComparableSchema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema44.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.minProperties((java.lang.Integer) 100);
        java.lang.Object obj55 = schema54.getExample();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema54.minimum(bigDecimal56);
        java.lang.Boolean boolean58 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema43.example((java.lang.Object) boolean58);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test01459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        strComparableSchema0.setDescription("default");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str18 = schema17.getFormat();
        java.math.BigDecimal bigDecimal19 = schema17.getMinimum();
        strComparableSchema0.setExample((java.lang.Object) schema17);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema0.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setName("hi!");
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema26.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema37.setName("hi!");
        strComparableSchema37.setName("Optional.empty");
        java.math.BigDecimal bigDecimal43 = null;
        strComparableSchema37.setMaximum(bigDecimal43);
        java.lang.String str45 = strComparableSchema37.getDescription();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema37.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema33.not(schema47);
        schema48.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema48.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema48.description("");
        io.swagger.oas.models.media.Schema schema56 = schema48.type("");
        java.util.List<java.lang.String> strList57 = schema48.getRequired();
        schema48.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int60 = schema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setName("hi!");
        strComparableSchema61.setNot((io.swagger.oas.models.media.Schema) strComparableSchema64);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema64.name("hi!");
        io.swagger.oas.models.media.Schema schema73 = schema71.pattern("");
        java.lang.String[] strArray75 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        io.swagger.oas.models.media.Schema schema78 = schema73.required((java.util.List<java.lang.String>) strList76);
        java.lang.Object obj79 = schema73.getExample();
        io.swagger.oas.models.media.Schema schema81 = schema73.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema82 = schema48.example((java.lang.Object) (-1));
        strComparableSchema0.setNot(schema82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("Optional.empty");
        schema6.set$ref("Optional.empty");
        java.lang.Integer int11 = schema6.getMinItems();
        io.swagger.oas.models.media.XML xML12 = schema6.getXml();
        java.lang.Integer int13 = schema6.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test01461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01461");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.format("");
        boolean boolean23 = tagSetOptional7.equals((java.lang.Object) schema22);
        java.lang.String str24 = tagSetOptional7.toString();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet25 = tagSetOptional7.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet26 = tagSetOptional7.get();
        java.util.Set<io.swagger.oas.models.tags.Tag> tagSet27 = tagSetOptional7.get();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" + "'", str24, "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(tagSet25);
        org.junit.Assert.assertNotNull(tagSet26);
        org.junit.Assert.assertNotNull(tagSet27);
    }

    @Test
    public void test01462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        schema22.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema27 = schema22.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setName("hi!");
        strComparableSchema28.setNot((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema28.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema28.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema38.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema40.setMaximum(bigDecimal45);
        java.util.List<java.lang.String> strList47 = strComparableSchema40.getRequired();
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema40.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema40.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema27.setExample((java.lang.Object) schema51);
        schema27.setMinProperties((java.lang.Integer) 100);
        schema27.setName("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema27.xml(xML57);
        io.swagger.oas.models.media.XML xML59 = schema27.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML59);
    }

    @Test
    public void test01463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01463");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj7 = schema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setName("hi!");
        strComparableSchema10.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema schema17 = schema6.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str18 = strComparableSchema13.getName();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        strComparableSchema13.setDiscriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema25.setExtensions(strMap26);
        java.lang.Integer int28 = strComparableSchema25.getMinLength();
        io.swagger.oas.models.media.Schema schema29 = schema24.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.List<java.lang.String> strList30 = schema24.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test01464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean25 = strComparableSchema17.getWriteOnly();
        strComparableSchema17.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test01465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01465");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.maxItems((java.lang.Integer) 0);
        strComparableSchema14.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 0);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema3.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getExclusiveMinimum();
        java.util.List<java.lang.String> strList13 = schema11.getRequired();
        schema11.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test01467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01467");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema9.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema12.setName("hi!");
        strComparableSchema12.setName("Optional.empty");
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema12.setMaximum(bigDecimal18);
        java.lang.String str20 = strComparableSchema12.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema12.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.additionalProperties(schema22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setName("hi!");
        strComparableSchema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema25.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strComparableSchema34.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema37.setName("hi!");
        strComparableSchema37.setName("Optional.empty");
        java.math.BigDecimal bigDecimal43 = null;
        strComparableSchema37.setMaximum(bigDecimal43);
        java.lang.String str45 = strComparableSchema37.getDescription();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema37.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema25.additionalProperties(schema47);
        java.util.List<java.lang.String> strList49 = schema48.getRequired();
        schema23.setAdditionalProperties(schema48);
        java.lang.String str51 = schema23.getPattern();
        java.math.BigDecimal bigDecimal52 = null;
        schema23.setMinimum(bigDecimal52);
        schema23.setMaxItems((java.lang.Integer) 1);
        java.lang.Integer int56 = schema23.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(int56);
    }

    @Test
    public void test01468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setName("hi!");
        strComparableSchema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.example((java.lang.Object) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema37.$ref("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema43.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema47 = schema45.addRequiredItem("default");
        schema45.setName("");
        io.swagger.oas.models.media.Schema schema51 = schema45.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str52 = schema45.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema53.pattern("");
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj60 = schema59.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema59.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setName("hi!");
        strComparableSchema63.setNot((io.swagger.oas.models.media.Schema) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema70 = schema59.addProperties("default", (io.swagger.oas.models.media.Schema) strComparableSchema66);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = null;
        schema59.setExtensions(strMap71);
        schema59.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema76 = schema59.format("Optional.empty");
        schema45.setNot(schema59);
        strComparableSchema18.setDefault((java.lang.Object) schema45);
        java.lang.Boolean boolean79 = schema45.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test01469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01469");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema9.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema15.getProperties();
        strComparableSchema3.setAdditionalProperties(schema15);
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema3.setMultipleOf(bigDecimal19);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test01470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        schema4.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strComparableSchema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema15.pattern("");
        io.swagger.oas.models.media.Schema schema20 = schema14.not(schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("", (java.lang.Object) schema19);
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema28.pattern("");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema4.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        strComparableSchema38.setExtensions(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        boolean boolean50 = schema42.equals((java.lang.Object) bigDecimal48);
        io.swagger.oas.models.media.Schema schema52 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema53 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema42.setExample((java.lang.Object) tagSetOptionalSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema55.setExtensions(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema55.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema58.setName("hi!");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema42.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema4.addProperties("", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = schema69.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal72 = schema71.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
    }

    @Test
    public void test01471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01471");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        io.swagger.oas.models.media.Schema schema11 = schema9.name("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema13 = schema9.minProperties((java.lang.Integer) 1);
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema9.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema5.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.minimum(bigDecimal10);
        boolean boolean12 = schema4.equals((java.lang.Object) bigDecimal10);
        io.swagger.oas.models.media.Schema schema14 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>> tagSetOptionalSchema15 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>>>();
        schema4.setExample((java.lang.Object) tagSetOptionalSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema17.setExtensions(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema20.setName("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = schema4.not(schema25);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "Optional.empty", "Optional.empty", "Optional.empty", "hi!", "Optional.empty" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray35);
        io.swagger.oas.models.media.Schema schema37 = schema25.example((java.lang.Object) tagSetOptional36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema37.setDiscriminator(discriminator38);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01473");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int30 = strComparableSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.type("hi!");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema27.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str35 = strComparableSchema27.getName();
        java.lang.Boolean boolean36 = strComparableSchema27.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema37.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema40.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        schema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema52.pattern("");
        strComparableSchema52.setDescription("default");
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema52.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema47.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema27.example((java.lang.Object) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema70);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema71.setExternalDocs(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test01474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        strComparableSchema0.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setName("hi!");
        strComparableSchema8.setNot((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema8.getTitle();
        java.lang.Integer int16 = strComparableSchema8.getMinProperties();
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test01475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.format("");
        java.lang.String str10 = schema9.getName();
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.maximum(bigDecimal15);
        schema16.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        io.swagger.oas.models.media.Schema schema6 = schema4.format("default");
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = schema4.getType();
        java.lang.Boolean boolean10 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal11 = null;
        schema4.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Discriminator discriminator13 = schema4.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "default" + "'", str9, "default");
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test01477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01478");
        io.swagger.jaxrs2.OperationParser operationParser0 = null;
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional1 = java.util.Optional.ofNullable(operationParser0);
        org.junit.Assert.assertNotNull(operationParserOptional1);
    }

    @Test
    public void test01479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("Optional[[class Tag {\n    name: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    description: Optional[[class Tag {\n        name: \n        description: \n        externalDocs: null\n    }, class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }]]\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        strComparableSchema26.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema26.$ref("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.addRequiredItem("Optional.empty");
        schema32.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.minimum(bigDecimal37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = schema38.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setName("hi!");
        strComparableSchema40.setNot((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema40.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema40.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.minimum(bigDecimal51);
        java.math.BigDecimal bigDecimal53 = schema50.getMaximum();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema50.maximum(bigDecimal54);
        schema55.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema55.deprecated((java.lang.Boolean) false);
        schema55.setMaxLength((java.lang.Integer) 0);
        schema38.setExample((java.lang.Object) schema55);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema38.maximum(bigDecimal63);
        schema25.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        strComparableSchema66.setExtensions(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema66.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema66.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = null;
        strComparableSchema73.setExtensions(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema73.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema76);
        strComparableSchema76.setMinLength((java.lang.Integer) 0);
        strComparableSchema66.setExample((java.lang.Object) strComparableSchema76);
        java.lang.String str81 = strComparableSchema76.getTitle();
        schema38.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema76);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema76.writeOnly((java.lang.Boolean) true);
        schema84.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test01480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01480");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        boolean boolean16 = strComparableSchema10.equals((java.lang.Object) 0.0d);
        strComparableSchema10.setDeprecated((java.lang.Boolean) false);
        strComparableSchema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        strComparableSchema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean23 = strComparableSchema10.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test01482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        schema6.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema9 = schema6.getNot();
        io.swagger.oas.models.media.Schema schema11 = schema6.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setName("hi!");
        strComparableSchema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean20 = strComparableSchema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema27 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("default", schema27);
        io.swagger.oas.models.media.Schema schema30 = schema6.writeOnly((java.lang.Boolean) true);
        java.lang.String str31 = schema6.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Optional.empty" + "'", str31, "Optional.empty");
    }

    @Test
    public void test01483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01483");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = schema2.type("default");
        schema4.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.maximum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema10.getExternalDocs();
        java.math.BigDecimal bigDecimal12 = null;
        schema10.setMaximum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation11);
    }

    @Test
    public void test01484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01484");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.lang.Boolean boolean7 = strComparableSchema3.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema3.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        java.lang.String str14 = schema11.getName();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema11.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.pattern("");
        schema25.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema30 = schema25.description("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setName("hi!");
        strComparableSchema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema31.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema41.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema49 = schema47.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = schema49.getProperties();
        schema30.setProperties(strMap50);
        io.swagger.oas.models.media.Schema schema52 = schema11.properties(strMap50);
        io.swagger.oas.models.media.XML xML53 = schema11.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(xML53);
    }

    @Test
    public void test01486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01486");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema12.get$ref();
        java.math.BigDecimal bigDecimal18 = null;
        schema12.setMaximum(bigDecimal18);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01487");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        java.lang.String str3 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) (-1));
        schema5.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema12.setExtensions(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.pattern("");
        io.swagger.oas.models.media.Schema schema24 = schema18.not(schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema26.setXml(xML27);
        schema26.setUniqueItems((java.lang.Boolean) false);
        schema5.setNot(schema26);
        java.math.BigDecimal bigDecimal32 = null;
        schema26.setMultipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema3.setName("hi!");
        strComparableSchema3.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML9 = null;
        strComparableSchema3.setXml(xML9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean19 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean21 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema3.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema3.maximum(bigDecimal23);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema27.setExtensions(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema27.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema34.pattern("");
        io.swagger.oas.models.media.Schema schema39 = schema33.not(schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema24.addProperties("", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema24.name("default");
        java.lang.String str49 = schema48.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test01489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strComparableSchema7.setExtensions(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema10.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema10);
        strComparableSchema10.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema10.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema8 = schema6.deprecated((java.lang.Boolean) false);
        schema6.setTitle("hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01491");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strComparableSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema3.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.maxItems((java.lang.Integer) 0);
        strComparableSchema3.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = strComparableSchema3.getReadOnly();
        java.lang.Boolean boolean12 = strComparableSchema3.getNullable();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema3.maxProperties((java.lang.Integer) (-1));
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema14.get$ref();
        java.lang.String str18 = schema14.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList21 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema12.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.String str25 = strComparableSchema12.get$ref();
        java.lang.Boolean boolean26 = strComparableSchema12.getExclusiveMinimum();
        strComparableSchema12.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test01493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setName("hi!");
        strComparableSchema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema14.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("default");
        io.swagger.oas.models.media.Schema schema29 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML38 = schema35.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML38);
    }

    @Test
    public void test01494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.format("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema16.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema16.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema16.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 1\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.pattern("");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("default");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        strComparableSchema18.setExtensions(strMap19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 100);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList30);
        io.swagger.oas.models.media.Schema schema33 = schema12.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML34 = schema12.getXml();
        java.lang.String str35 = schema12.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema36.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema39.setName("hi!");
        strComparableSchema39.setName("Optional.empty");
        io.swagger.oas.models.media.XML xML45 = null;
        strComparableSchema39.setXml(xML45);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean55 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "default");
        boolean boolean57 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        java.lang.Integer int59 = strComparableSchema39.getMaxItems();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "default", "default" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = schema12.example((java.lang.Object) strList64);
        schema12.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal70 = null;
        schema12.setMinimum(bigDecimal70);
        java.lang.Boolean boolean72 = schema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + true + "'", boolean72, true);
    }

    @Test
    public void test01496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.pattern("");
        java.lang.String str37 = strComparableSchema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema41.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema41);
        java.lang.Integer int45 = schema44.getMaxItems();
        java.lang.Boolean boolean46 = schema44.getDeprecated();
        io.swagger.oas.models.media.Schema schema48 = schema44.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal49 = schema48.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
    }

    @Test
    public void test01497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema3.setName("hi!");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema3);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema3.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema11.setExtensions(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema11.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema14.setName("hi!");
        strComparableSchema14.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = null;
        strComparableSchema14.setMaximum(bigDecimal20);
        java.lang.String str22 = strComparableSchema14.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema24);
        schema25.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema25.getDiscriminator();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        strComparableSchema33.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema33.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema33.$ref("hi!");
        strComparableSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        strComparableSchema43.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minimum(bigDecimal48);
        schema49.setTitle("Optional.empty");
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema49.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        schema54.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema33.addProperties("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", schema54);
        schema58.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema58.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML63 = schema62.getXml();
        schema25.setNot(schema62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
    }

    @Test
    public void test01498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.minimum(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        schema9.setName("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema13.$ref("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("Optional.empty");
        schema19.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        schema9.setExample((java.lang.Object) schema25);
        schema9.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal29 = null;
        schema9.setMinimum(bigDecimal29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01499");
        java.lang.String[] strArray4 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "default", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setName("hi!");
        strComparableSchema7.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema7.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema7.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema19.setType("");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        schema19.setDescription("Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        boolean boolean26 = tagSetOptional6.equals((java.lang.Object) "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(tagSetOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test01500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.externalDocs(externalDocumentation6);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema10.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strComparableSchema10.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int24 = strComparableSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.type("hi!");
        java.lang.Class<?> wildcardClass27 = schema26.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional28 = java.util.Optional.of(wildcardClass27);
        schema20.setDefault((java.lang.Object) wildcardClass27);
        io.swagger.oas.models.media.Schema schema31 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema32.setExtensions(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema35.setName("hi!");
        strComparableSchema35.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        strComparableSchema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema41.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema46.setExtensions(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.minimum(bigDecimal51);
        boolean boolean53 = schema45.equals((java.lang.Object) bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setName("hi!");
        strComparableSchema54.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema54.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema54.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema54.format("");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.multipleOf(bigDecimal69);
        java.lang.String[] strArray76 = new java.lang.String[] { "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]", "Optional.empty", "Optional[[class Tag {\n    name: \n    description: \n    externalDocs: null\n}, class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}]]" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        io.swagger.oas.models.media.Schema schema79 = schema70.required((java.util.List<java.lang.String>) strList77);
        schema45.setRequired((java.util.List<java.lang.String>) strList77);
        strComparableSchema35.setRequired((java.util.List<java.lang.String>) strList77);
        schema20.setRequired((java.util.List<java.lang.String>) strList77);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList77);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClassOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema79);
    }
}

