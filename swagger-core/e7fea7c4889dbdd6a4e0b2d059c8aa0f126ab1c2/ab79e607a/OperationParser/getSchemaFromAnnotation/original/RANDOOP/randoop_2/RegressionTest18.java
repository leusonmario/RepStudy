import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = annotatedElementSchema11.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema31 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema10.not(schema23);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        schema23.setMaxProperties((java.lang.Integer) (-1));
        schema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema23.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema39);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema46.setExternalDocs(externalDocumentation47);
        schema46.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema52.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        java.lang.Boolean boolean28 = schema4.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        io.swagger.oas.annotations.info.Contact contact32 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional33 = io.swagger.jaxrs2.OperationParser.getContact(contact32);
        annotatedElementSchema29.setExample((java.lang.Object) contactOptional33);
        annotatedElementSchema29.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema29.type("");
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.minProperties((java.lang.Integer) 100);
        annotatedElementSchema29.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = annotatedElementSchema43.getMinProperties();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = schema50.required((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema29.required((java.util.List<java.lang.String>) strList55);
        schema4.setRequired((java.util.List<java.lang.String>) strList55);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema4.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema4.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal64 = schema4.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(contactOptional33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) true);
        schema41.setAdditionalProperties(schema53);
        java.lang.Integer int59 = schema53.getMinProperties();
        java.lang.Integer int60 = schema53.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str20 = schema19.get$ref();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        schema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.addProperties("hi!", schema45);
        java.lang.String[] strArray53 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional54 = io.swagger.jaxrs2.OperationParser.getTags(strArray53);
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) strArray53);
        schema55.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema58.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = annotatedElementSchema58.getMinItems();
        annotatedElementSchema58.setType("hi!");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema58.getRequired();
        io.swagger.oas.models.media.Schema schema71 = schema55.required(strList70);
        boolean boolean72 = schema32.equals((java.lang.Object) schema71);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList73 = schema32.getEnum();
        schema32.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(tagSetOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(annotatedElementList73);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        annotatedElementSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = annotatedElementSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema35 = schema24.not(schema34);
        schema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema24.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        annotatedElementSchema41.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        annotatedElementSchema41.setDiscriminator(discriminator49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.multipleOf(bigDecimal51);
        schema52.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.Schema schema86 = null;
        annotatedElementSchema55.setNot(schema86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList90 = annotatedElementSchema55.getRequired();
        schema52.setRequired(strList90);
        io.swagger.oas.models.media.Schema schema92 = schema39.required(strList90);
        io.swagger.oas.models.media.Schema schema93 = schema12.required(strList90);
        schema93.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML96 = null;
        schema93.setXml(xML96);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        java.lang.reflect.AnnotatedElement annotatedElement66 = annotatedElementSchema54.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema67.properties(strMap73);
        io.swagger.oas.models.media.Schema schema76 = schema74.minLength((java.lang.Integer) 10);
        schema76.setMaxProperties((java.lang.Integer) (-1));
        schema76.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList81 = schema76.getEnum();
        io.swagger.oas.models.media.Schema schema83 = schema76.maxLength((java.lang.Integer) (-1));
        java.lang.Integer int84 = schema83.getMinItems();
        io.swagger.oas.models.media.Schema schema86 = schema83.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML87 = null;
        schema86.setXml(xML87);
        schema86.setMinLength((java.lang.Integer) 0);
        java.lang.String str91 = schema86.toString();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema86.externalDocs(externalDocumentation92);
        annotatedElementSchema54.setDefault((java.lang.Object) schema93);
        java.lang.Class<?> wildcardClass95 = schema93.getClass();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(annotatedElement66);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(annotatedElementList81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str91, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema49 = schema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        schema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = annotatedElementSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema11.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal21);
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema24.setNullable((java.lang.Boolean) false);
        annotatedElementSchema24.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema24.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.properties(strMap46);
        java.lang.Integer int48 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str51 = annotatedElementSchema50.getPattern();
        annotatedElementSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = annotatedElementSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema50.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema50.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema50.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info61 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional62 = io.swagger.jaxrs2.OperationParser.getInfo(info61);
        java.lang.Class<?> wildcardClass63 = infoOptional62.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray64 = new java.lang.reflect.AnnotatedElement[] { wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList65 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList65, annotatedElementArray64);
        schema60.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList65);
        schema47.addExtension("no description", (java.lang.Object) schema60);
        schema47.setFormat("*/*");
        annotatedElementSchema24.addExtension("hi!", (java.lang.Object) "*/*");
        annotatedElementSchema11.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean75 = annotatedElementSchema24.getUniqueItems();
        java.util.List<java.lang.String> strList76 = annotatedElementSchema24.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(infoOptional62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(annotatedElementArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Integer int19 = schema18.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 100);
        java.lang.Integer int24 = schema23.getMaxProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setType("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        annotatedElementSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = annotatedElementSchema9.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str17 = annotatedElementSchema16.getPattern();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        schema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMaximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.Boolean boolean33 = annotatedElementSchema31.getNullable();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.String str39 = annotatedElementSchema31.getDescription();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator50 = annotatedElementSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema31.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        java.lang.reflect.AnnotatedElement annotatedElement52 = annotatedElementSchema31.getDefault();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema31.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        io.swagger.oas.models.media.Schema schema64 = schema62.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema64.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str68 = annotatedElementSchema67.getPattern();
        annotatedElementSchema67.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean71 = annotatedElementSchema67.getWriteOnly();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema67.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str74 = annotatedElementSchema67.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str76 = annotatedElementSchema75.getPattern();
        annotatedElementSchema75.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean79 = annotatedElementSchema75.getWriteOnly();
        boolean boolean80 = annotatedElementSchema67.equals((java.lang.Object) annotatedElementSchema75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        annotatedElementSchema67.setExternalDocs(externalDocumentation81);
        java.lang.String[] strArray84 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        annotatedElementSchema67.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema88 = schema66.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = schema54.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema90 = schema27.additionalProperties(schema54);
        schema22.setAdditionalProperties(schema27);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema94 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(annotatedElement52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str19 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema15.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema15.getUniqueItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        schema22.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema22.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.lang.Integer int44 = schema43.getMaxLength();
        io.swagger.oas.models.media.Schema schema46 = schema43.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema48.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.String str8 = schema7.getFormat();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.readOnly((java.lang.Boolean) true);
        java.lang.String str33 = schema30.getTitle();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema19.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = schema25.getMultipleOf();
        io.swagger.oas.models.media.Schema schema28 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema25.setMultipleOf(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema25.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        java.lang.String str39 = schema38.getFormat();
        io.swagger.oas.models.media.Schema schema40 = schema34.example((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema41.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal46 = annotatedElementSchema41.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema41.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema38.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema41);
        java.lang.Object obj52 = schema51.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema53.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema53.$ref("*/*");
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema53.format("default");
        java.lang.Boolean boolean67 = schema66.getNullable();
        java.lang.Boolean boolean68 = schema66.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema69.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser73 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema69.addExtension("no description", (java.lang.Object) operationParser73);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema75.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        annotatedElementSchema75.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema69.required((java.util.List<java.lang.String>) strList81);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.maximum(bigDecimal85);
        java.util.List<java.lang.String> strList87 = schema86.getRequired();
        io.swagger.oas.models.media.Schema schema88 = schema66.required(strList87);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.xml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema51.additionalProperties(schema88);
        io.swagger.oas.models.media.Schema schema92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema88.not(schema92);
        schema18.setAdditionalProperties(schema92);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        java.lang.String str18 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = schema7.getMultipleOf();
        schema7.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.pattern("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(annotatedElementList15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxLength((java.lang.Integer) (-1));
        java.lang.String str15 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.$ref("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = annotatedElementSchema19.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.getNot();
        annotatedElementSchema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(schema32);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema11.getMinLength();
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.properties(strMap30);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setReadOnly((java.lang.Boolean) false);
        schema31.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema31.minProperties((java.lang.Integer) 0);
        schema31.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = annotatedElementSchema11.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema31 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema10.not(schema23);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMaximum(bigDecimal34);
        schema7.setDefault((java.lang.Object) schema32);
        io.swagger.oas.models.media.Schema schema38 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema32.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = annotatedElementSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = annotatedElementSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = annotatedElementSchema24.getProperties();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser41 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema37.addExtension("no description", (java.lang.Object) operationParser41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema37.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList49);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList49);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser12 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema8.addExtension("no description", (java.lang.Object) operationParser12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.minimum(bigDecimal19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = schema20.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int34 = schema11.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.maximum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        io.swagger.oas.annotations.info.Contact contact47 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional48 = io.swagger.jaxrs2.OperationParser.getContact(contact47);
        annotatedElementSchema44.setExample((java.lang.Object) contactOptional48);
        annotatedElementSchema44.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema44.uniqueItems((java.lang.Boolean) false);
        schema43.setDefault((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema44.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int64 = annotatedElementSchema59.getMinProperties();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema59.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.xml(xML67);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema68.required(strList81);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema44.required(strList81);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema83);
        java.math.BigDecimal bigDecimal85 = schema83.getMinimum();
        io.swagger.oas.models.media.Schema schema87 = schema83.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(contactOptional48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        schema11.setDefault((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList23);
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema14.$ref("");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxItems((java.lang.Integer) 10);
        schema42.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean47 = schema42.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj7 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setDefault((java.lang.Object) "#/components/schemas/hi!");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.media.Content[] contentArray14 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces23, produces24, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces31, produces32, components33);
        schema10.addExtension("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) contentArray14);
        javax.ws.rs.Produces produces36 = null;
        javax.ws.rs.Produces produces37 = null;
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces36, produces37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces40, produces41, components42);
        javax.ws.rs.Produces produces44 = null;
        javax.ws.rs.Produces produces45 = null;
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional47 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces44, produces45, components46);
        javax.ws.rs.Produces produces48 = null;
        javax.ws.rs.Produces produces49 = null;
        io.swagger.oas.models.Components components50 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional51 = io.swagger.jaxrs2.OperationParser.getContent(contentArray14, produces48, produces49, components50);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(contentArray14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(contentOptional47);
        org.junit.Assert.assertNotNull(contentOptional51);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        java.lang.Boolean boolean28 = schema4.getDeprecated();
        java.lang.String str29 = schema4.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser35 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema31.addExtension("no description", (java.lang.Object) operationParser35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema31.required((java.util.List<java.lang.String>) strList43);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.maximum(bigDecimal47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema48.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema4.addProperties("no description", schema48);
        java.lang.String str54 = schema4.getTitle();
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema4.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean59 = schema58.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal61 = null;
        annotatedElementSchema60.setMultipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        schema64.setFormat("*/*");
        schema64.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal71 = null;
        annotatedElementSchema70.setMultipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        schema74.setFormat("*/*");
        java.math.BigDecimal bigDecimal77 = schema74.getMinimum();
        io.swagger.oas.models.media.Schema schema78 = schema64.addProperties("no description", schema74);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.maximum(bigDecimal79);
        schema80.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema84 = schema80.title("no description");
        java.lang.String str85 = schema84.getFormat();
        boolean boolean86 = schema58.equals((java.lang.Object) str85);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema58.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = schema58.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "*/*" + "'", str85, "*/*");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(externalDocumentation87);
        org.junit.Assert.assertNull(externalDocumentation88);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setTitle("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        annotatedElementSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = annotatedElementSchema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info44 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional45 = io.swagger.jaxrs2.OperationParser.getInfo(info44);
        java.lang.Class<?> wildcardClass46 = infoOptional45.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray47 = new java.lang.reflect.AnnotatedElement[] { wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList48 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList48, annotatedElementArray47);
        schema43.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList48);
        schema30.addExtension("no description", (java.lang.Object) schema43);
        schema30.setFormat("*/*");
        schema30.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema9.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema58 = schema56.title("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(infoOptional45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(annotatedElementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        java.util.List<java.lang.String> strList28 = null;
        schema27.setRequired(strList28);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        schema27.setDiscriminator(discriminator30);
        io.swagger.oas.models.media.XML xML32 = schema27.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema27.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema35.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList40 = annotatedElementSchema35.getEnum();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.description("hi!");
        java.lang.Object obj43 = schema42.getExample();
        io.swagger.oas.models.media.Schema schema45 = schema42.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = null;
        schema42.setMultipleOf(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = schema42.getMultipleOf();
        io.swagger.oas.models.media.XML xML49 = schema42.getXml();
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema42.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal53 = null;
        annotatedElementSchema52.setMultipleOf(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema52.nullable((java.lang.Boolean) false);
        annotatedElementSchema52.setMaxLength((java.lang.Integer) 1);
        java.lang.String str59 = annotatedElementSchema52.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal61 = null;
        annotatedElementSchema60.setMultipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema60.nullable((java.lang.Boolean) false);
        annotatedElementSchema60.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema60.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str70 = annotatedElementSchema69.getPattern();
        annotatedElementSchema69.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean73 = annotatedElementSchema69.getWriteOnly();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema69.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema69.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema69.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info80 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional81 = io.swagger.jaxrs2.OperationParser.getInfo(info80);
        java.lang.Class<?> wildcardClass82 = infoOptional81.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray83 = new java.lang.reflect.AnnotatedElement[] { wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList84 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList84, annotatedElementArray83);
        schema79.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList84);
        annotatedElementSchema60.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList84);
        annotatedElementSchema52.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList84);
        schema42.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList84);
        schema27.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList84);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(annotatedElementList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(xML49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(infoOptional81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(annotatedElementArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema4.setMinLength((java.lang.Integer) 0);
        schema4.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema4.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str11 = schema4.getType();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.setReadOnly((java.lang.Boolean) false);
        boolean boolean11 = annotatedElementSchema0.equals((java.lang.Object) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema38.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema38.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema48.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        annotatedElementSchema48.setExternalDocs(externalDocumentation57);
        java.util.List<java.lang.String> strList59 = annotatedElementSchema48.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema60.setRequired((java.util.List<java.lang.String>) strList66);
        java.lang.Integer int69 = annotatedElementSchema60.getMinItems();
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema60.minimum(bigDecimal70);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList72 = schema71.getEnum();
        io.swagger.oas.models.media.Schema schema74 = schema71.maxLength((java.lang.Integer) (-1));
        java.lang.String str75 = schema71.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser80 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema76.addExtension("no description", (java.lang.Object) operationParser80);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema82 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema82.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        annotatedElementSchema82.setRequired((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema76.required((java.util.List<java.lang.String>) strList88);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema91.maximum(bigDecimal92);
        java.util.List<java.lang.String> strList94 = schema93.getRequired();
        schema71.setRequired(strList94);
        annotatedElementSchema48.setRequired(strList94);
        io.swagger.oas.models.media.Schema schema97 = schema47.required(strList94);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(annotatedElementList72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        annotatedElementSchema15.setProperties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.maximum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema35.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.properties(strMap17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        java.lang.String str21 = schema18.get$ref();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.String str17 = annotatedElementSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema15.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList26 = annotatedElementSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.description("hi!");
        java.lang.Object obj29 = schema28.getExample();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        java.math.BigDecimal bigDecimal31 = schema30.getMultipleOf();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.not(schema30);
        schema32.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElementList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.String str11 = schema4.get$ref();
        java.math.BigDecimal bigDecimal12 = null;
        schema4.setMinimum(bigDecimal12);
        schema4.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema4.getAdditionalProperties();
        java.lang.String str17 = schema4.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.math.BigDecimal bigDecimal6 = schema3.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = schema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        java.math.BigDecimal bigDecimal15 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        schema3.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema3.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator34 = schema31.getDiscriminator();
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMultipleOf(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        schema31.setMaximum(bigDecimal37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema31.setXml(xML39);
        schema31.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema31.minimum(bigDecimal43);
        schema22.setExample((java.lang.Object) schema31);
        java.lang.String str46 = schema22.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        java.lang.String str12 = schema9.getDescription();
        java.lang.Integer int13 = schema9.getMinLength();
        schema9.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.xml(xML16);
        java.lang.Object obj18 = schema9.getExample();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "Optional.empty");
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean10 = schema9.getWriteOnly();
        java.lang.Boolean boolean11 = schema9.getDeprecated();
        java.math.BigDecimal bigDecimal12 = null;
        schema9.setMaximum(bigDecimal12);
        java.util.List<java.lang.String> strList14 = schema9.getRequired();
        java.lang.String str15 = schema9.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        java.lang.String str17 = schema14.getTitle();
        java.math.BigDecimal bigDecimal18 = null;
        schema14.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema20.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        io.swagger.oas.annotations.info.License license34 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional35 = io.swagger.jaxrs2.OperationParser.getLicense(license34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema31.example((java.lang.Object) licenseOptional35);
        java.lang.String str37 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = annotatedElementSchema31.getExternalDocs();
        annotatedElementSchema31.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        schema45.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema42.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema49 = schema30.additionalProperties(schema42);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema30.maximum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema14.example((java.lang.Object) schema51);
        schema51.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(licenseOptional35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.lang.String str37 = schema15.getDescription();
        schema15.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList42 = schema41.getRequired();
        schema41.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.lang.Object obj6 = schema3.getExample();
        java.lang.Boolean boolean7 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema9 = schema3.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = schema9.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation10);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 0);
        schema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema15.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: 100\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.minLength((java.lang.Integer) 10);
        java.lang.String str47 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema49 = schema46.addRequiredItem("");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.maximum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema49.type("hi!");
        io.swagger.oas.models.media.Schema schema55 = schema53.readOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setAdditionalProperties(schema55);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = null;
        schema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema7.maxItems((java.lang.Integer) (-1));
        schema11.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema11.setDiscriminator(discriminator14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        schema27.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str30 = schema27.getType();
        io.swagger.oas.models.media.Schema schema32 = schema27.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray36 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray36, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray36, components39);
        java.lang.Class<?> wildcardClass41 = parameterListOptional40.getClass();
        schema32.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.Integer int52 = annotatedElementSchema43.getMinItems();
        annotatedElementSchema43.setType("hi!");
        java.util.List<java.lang.String> strList55 = annotatedElementSchema43.getRequired();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema43.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        io.swagger.oas.annotations.info.Contact contact61 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional62 = io.swagger.jaxrs2.OperationParser.getContact(contact61);
        annotatedElementSchema58.setExample((java.lang.Object) contactOptional62);
        annotatedElementSchema58.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema58.type("");
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema58.nullable((java.lang.Boolean) false);
        schema69.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean73 = annotatedElementSchema72.getReadOnly();
        java.lang.Boolean boolean74 = annotatedElementSchema72.getNullable();
        schema69.setDefault((java.lang.Object) annotatedElementSchema72);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean77 = annotatedElementSchema76.getReadOnly();
        java.lang.Boolean boolean78 = annotatedElementSchema76.getNullable();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        annotatedElementSchema76.setRequired((java.util.List<java.lang.String>) strList81);
        annotatedElementSchema72.setRequired((java.util.List<java.lang.String>) strList81);
        schema57.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema32.required((java.util.List<java.lang.String>) strList81);
        schema11.setRequired((java.util.List<java.lang.String>) strList81);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(parameterArray36);
        org.junit.Assert.assertNotNull(parameterListOptional38);
        org.junit.Assert.assertNotNull(parameterListOptional40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(contactOptional62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema12.getExtensions();
        schema11.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema11.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema11.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 10);
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.minProperties((java.lang.Integer) 10);
        java.lang.String str22 = annotatedElementSchema14.getName();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj25 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.discriminator(discriminator30);
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMinimum(bigDecimal32);
        java.lang.String str34 = schema31.getFormat();
        java.lang.Class<?> wildcardClass35 = schema31.getClass();
        schema7.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass35);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema13.minLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList19 = schema13.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema7.writeOnly((java.lang.Boolean) false);
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.lang.Boolean boolean14 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str24 = annotatedElementSchema17.getFormat();
        annotatedElementSchema17.setType("no description");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        io.swagger.oas.annotations.info.License license34 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional35 = io.swagger.jaxrs2.OperationParser.getLicense(license34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema31.example((java.lang.Object) licenseOptional35);
        java.lang.String str37 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        annotatedElementSchema50.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema50.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.minLength((java.lang.Integer) 10);
        schema59.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator62 = schema59.getDiscriminator();
        schema59.setType("#/components/schemas/");
        java.lang.String str65 = schema59.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema67.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema67.setNullable((java.lang.Boolean) false);
        annotatedElementSchema67.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema67.minItems((java.lang.Integer) 0);
        java.lang.String str80 = schema79.getType();
        io.swagger.oas.models.media.XML xML81 = null;
        schema79.setXml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema59.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema59.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema40.properties(strMap84);
        annotatedElementSchema31.setProperties(strMap84);
        io.swagger.oas.models.media.Schema schema87 = schema28.properties(strMap84);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema28.minimum(bigDecimal88);
        schema28.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(licenseOptional35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.format("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema19.getFormat();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        java.lang.Integer int13 = schema12.getMinProperties();
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        java.lang.String str56 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        annotatedElementSchema21.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str62 = annotatedElementSchema21.get$ref();
        annotatedElementSchema21.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        schema16.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = schema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement32 = annotatedElementSchema22.getDefault();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema16.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema45.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        schema52.setExternalDocs(externalDocumentation53);
        java.lang.String str55 = schema52.getDescription();
        schema37.setDefault((java.lang.Object) str55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = schema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = schema6.additionalProperties(schema37);
        schema6.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema6.externalDocs(externalDocumentation61);
        schema62.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(annotatedElement32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        java.lang.String str19 = schema17.get$ref();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        schema14.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser24 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema20.addExtension("no description", (java.lang.Object) operationParser24);
        annotatedElementSchema20.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str28 = annotatedElementSchema20.getTitle();
        java.lang.Integer int29 = annotatedElementSchema20.getMinProperties();
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema20.maximum(bigDecimal32);
        schema14.addExtension("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema20);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = annotatedElementSchema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema7.getDiscriminator();
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema24.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.xml(xML35);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema34.setDiscriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema34.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.XML xML42 = schema23.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML42);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        schema7.setType("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = schema7.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema23.getType();
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema23.setDeprecated((java.lang.Boolean) true);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = schema35.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        java.lang.Boolean boolean36 = annotatedElementSchema22.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMultipleOf();
        io.swagger.oas.models.media.Schema schema46 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.xml(xML47);
        annotatedElementSchema22.setNot(schema43);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema schema65 = schema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema65.getNot();
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean69 = schema68.getReadOnly();
        schema68.setMinLength((java.lang.Integer) 0);
        schema68.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema68.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int5 = schema4.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema4.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str10 = schema7.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        annotatedElementSchema19.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.example((java.lang.Object) false);
        schema27.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.String str33 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema31.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int36 = schema35.getMinLength();
        io.swagger.oas.models.media.Schema schema37 = schema35.getNot();
        io.swagger.oas.models.media.Schema schema38 = schema27.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema35.externalDocs(externalDocumentation39);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal18 = schema17.getMinimum();
        java.util.List<java.lang.String> strList19 = schema17.getRequired();
        java.lang.Boolean boolean20 = schema17.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema11.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        schema26.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser33 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema29.addExtension("no description", (java.lang.Object) operationParser33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema29.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        java.lang.Class<?> wildcardClass47 = schema46.getClass();
        schema26.setDefault((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema50 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.XML xML36 = schema33.getXml();
        io.swagger.oas.models.media.Schema schema38 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.externalDocs(externalDocumentation39);
        java.lang.Class<?> wildcardClass41 = schema38.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) (-1));
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 10);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.discriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.maximum(bigDecimal25);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema schema22 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int23 = schema14.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema18.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema24 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean27 = schema18.getReadOnly();
        java.util.List<java.lang.String> strList28 = schema18.getRequired();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(strList28);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        java.lang.Integer int8 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.maxItems((java.lang.Integer) (-1));
        schema19.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        schema5.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str8 = schema5.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean10 = annotatedElementSchema9.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema9.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.multipleOf(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = schema5.additionalProperties(schema31);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema5.discriminator(discriminator35);
        java.lang.Boolean boolean37 = schema5.getExclusiveMinimum();
        schema5.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = annotatedElementSchema0.getXml();
        java.lang.String str12 = annotatedElementSchema0.getTitle();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        java.lang.Integer int17 = schema16.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList23 = annotatedElementSchema18.getEnum();
        annotatedElementSchema18.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema26.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = annotatedElementSchema26.getMinItems();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema18.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema18.properties(strMap41);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema18.minimum(bigDecimal43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        schema16.setNot(schema44);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(annotatedElementList23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal11);
        java.lang.String str13 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMultipleOf(bigDecimal20);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.License license21 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional22 = io.swagger.jaxrs2.OperationParser.getLicense(license21);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema18.example((java.lang.Object) licenseOptional22);
        schema23.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema23.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.properties(strMap44);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.maximum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema23.additionalProperties(schema49);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema23.discriminator(discriminator53);
        java.lang.Object obj55 = schema23.getExample();
        annotatedElementSchema0.setAdditionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema58 = schema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.externalDocs(externalDocumentation59);
        schema60.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(licenseOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "Optional.empty");
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = schema9.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        annotatedElementSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        java.lang.String str24 = annotatedElementSchema16.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        schema30.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema36.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean40 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema42 = schema39.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.readOnly((java.lang.Boolean) false);
        schema30.setDefault((java.lang.Object) schema44);
        java.lang.Class<?> wildcardClass46 = schema44.getClass();
        schema9.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass46);
        java.lang.Boolean boolean48 = schema9.getDeprecated();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) true);
        schema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema10.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.description("hi!");
        java.lang.Object obj24 = schema23.getExample();
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.type("");
        schema28.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.minimum(bigDecimal31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema32.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema32.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema36.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.Boolean boolean43 = annotatedElementSchema41.getNullable();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.String str49 = annotatedElementSchema41.getDescription();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator60 = annotatedElementSchema52.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema41.not((io.swagger.oas.models.media.Schema) annotatedElementSchema52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.minProperties((java.lang.Integer) 10);
        java.lang.String str70 = annotatedElementSchema62.getName();
        annotatedElementSchema41.setDefault((java.lang.Object) annotatedElementSchema62);
        java.lang.Integer int72 = annotatedElementSchema62.getMinItems();
        java.lang.Boolean boolean73 = annotatedElementSchema62.getDeprecated();
        annotatedElementSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str77 = annotatedElementSchema76.getPattern();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema76.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema80.setPattern("");
        annotatedElementSchema80.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = annotatedElementSchema80.getExtensions();
        schema79.setExtensions(strMap86);
        boolean boolean88 = annotatedElementSchema62.equals((java.lang.Object) schema79);
        schema79.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema92 = schema79.name("hi!");
        java.lang.Class<?> wildcardClass93 = schema79.getClass();
        schema40.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass93);
        schema10.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass93);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.String str17 = schema13.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        annotatedElementSchema0.setProperties(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser22 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema18.addExtension("no description", (java.lang.Object) operationParser22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = annotatedElementSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema27.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.$ref("*/*");
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema27.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = annotatedElementSchema43.getMinProperties();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema43.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str54 = annotatedElementSchema53.getPattern();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema53.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = annotatedElementSchema57.getExtensions();
        schema56.setExtensions(strMap63);
        annotatedElementSchema43.setExtensions(strMap63);
        schema42.setExtensions(strMap63);
        schema25.setExtensions(strMap63);
        annotatedElementSchema0.setExtensions(strMap63);
        java.lang.Class<?> wildcardClass69 = strMap63.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema schema12 = schema9.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "Optional.empty");
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        schema9.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema9.getUniqueItems();
        schema9.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        schema18.setFormat("*/*");
        schema18.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        schema28.setFormat("*/*");
        java.math.BigDecimal bigDecimal31 = schema28.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema18.addProperties("no description", schema28);
        io.swagger.oas.models.media.Schema schema34 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        annotatedElementSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean39 = annotatedElementSchema35.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema35.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = annotatedElementSchema35.getProperties();
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema44 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema18);
        io.swagger.oas.models.media.Schema schema46 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema46.getExtensions();
        schema46.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int11 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser16 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema12.addExtension("no description", (java.lang.Object) operationParser16);
        annotatedElementSchema12.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        annotatedElementSchema12.setDiscriminator(discriminator20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.multipleOf(bigDecimal22);
        schema23.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        java.lang.String str55 = annotatedElementSchema47.getName();
        annotatedElementSchema26.setDefault((java.lang.Object) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema schema57 = null;
        annotatedElementSchema26.setNot(schema57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema26.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList61 = annotatedElementSchema26.getRequired();
        schema23.setRequired(strList61);
        schema23.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema23.getExclusiveMinimum();
        schema23.setTitle("");
        schema10.setDefault((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema70 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = schema70.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema70.xml(xML73);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = null;
        schema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema7.description("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema11.setDiscriminator(discriminator12);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList14);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) false);
        schema21.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        java.math.BigDecimal bigDecimal25 = null;
        schema21.setMaximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema21.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema28.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema4.properties(strMap10);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info25 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional26 = io.swagger.jaxrs2.OperationParser.getInfo(info25);
        java.lang.Class<?> wildcardClass27 = infoOptional26.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList29 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList29, annotatedElementArray28);
        schema24.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList29);
        schema11.addExtension("no description", (java.lang.Object) schema24);
        java.lang.String str33 = schema24.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.Contact contact38 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional39 = io.swagger.jaxrs2.OperationParser.getContact(contact38);
        annotatedElementSchema35.setExample((java.lang.Object) contactOptional39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.pattern("#/components/schemas/");
        schema24.addExtension("no description", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema48 = schema24.uniqueItems((java.lang.Boolean) false);
        schema24.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(infoOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.xml(xML46);
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        schema56.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema56.addProperties("hi!", schema60);
        java.lang.String[] strArray68 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray68);
        io.swagger.oas.models.media.Schema schema70 = schema56.example((java.lang.Object) strArray68);
        schema70.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        annotatedElementSchema73.setRequired((java.util.List<java.lang.String>) strList79);
        java.lang.Integer int82 = annotatedElementSchema73.getMinItems();
        annotatedElementSchema73.setType("hi!");
        java.util.List<java.lang.String> strList85 = annotatedElementSchema73.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema70.required(strList85);
        boolean boolean87 = schema47.equals((java.lang.Object) schema86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema13.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema13.getAdditionalProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(schema90);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema10.setXml(xML15);
        io.swagger.oas.models.media.XML xML17 = schema10.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema54.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean68 = schema67.getWriteOnly();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        annotatedElementSchema48.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema48.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal67 = schema66.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal67);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        java.lang.String str56 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema59 = schema57.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int60 = schema57.getMinLength();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.properties(strMap51);
        schema52.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.addProperties("hi!", schema56);
        java.lang.String[] strArray64 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strArray64);
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema66.required(strList81);
        boolean boolean83 = schema43.equals((java.lang.Object) schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.properties(strMap84);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        schema85.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.String str19 = annotatedElementSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.$ref("*/*");
        schema33.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str36 = schema33.getType();
        io.swagger.oas.models.media.Schema schema38 = schema33.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.Boolean boolean51 = annotatedElementSchema49.getNullable();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = annotatedElementSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema49.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.minProperties((java.lang.Integer) 10);
        java.lang.String str78 = annotatedElementSchema70.getName();
        annotatedElementSchema49.setDefault((java.lang.Object) annotatedElementSchema70);
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.xml(xML80);
        annotatedElementSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        schema38.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema89.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        schema11.setDefault((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema7.getExtensions();
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setMinLength((java.lang.Integer) 10);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMinimum(bigDecimal10);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray20 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components23);
        java.lang.Class<?> wildcardClass25 = parameterListOptional24.getClass();
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass25);
        io.swagger.oas.models.media.Schema schema28 = schema16.nullable((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.String str32 = annotatedElementSchema30.get$ref();
        io.swagger.oas.models.media.XML xML33 = null;
        annotatedElementSchema30.setXml(xML33);
        java.lang.Boolean boolean35 = annotatedElementSchema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema37.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema28.additionalProperties(schema37);
        schema42.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema42.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(parameterArray20);
        org.junit.Assert.assertNotNull(parameterListOptional22);
        org.junit.Assert.assertNotNull(parameterListOptional24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        annotatedElementSchema14.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.type("");
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.nullable((java.lang.Boolean) false);
        schema25.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        schema25.setDefault((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema28.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = schema33.getMultipleOf();
        java.lang.Boolean boolean35 = schema33.getExclusiveMaximum();
        boolean boolean36 = schema13.equals((java.lang.Object) schema33);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMinimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal47 = schema44.getMaximum();
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray11 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        io.swagger.oas.models.media.Schema schema14 = schema7.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        java.lang.String str17 = schema14.getDescription();
        java.math.BigDecimal bigDecimal18 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal20 = null;
        annotatedElementSchema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema23.title("");
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        java.lang.Object obj31 = schema29.getExample();
        io.swagger.oas.models.media.Schema schema33 = schema29.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema33.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        annotatedElementSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = annotatedElementSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str46 = annotatedElementSchema45.getPattern();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema38.not((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        annotatedElementSchema38.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        io.swagger.oas.annotations.info.Contact contact53 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional54 = io.swagger.jaxrs2.OperationParser.getContact(contact53);
        annotatedElementSchema50.setExample((java.lang.Object) contactOptional54);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema57.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList62 = schema57.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal64 = null;
        annotatedElementSchema63.setMultipleOf(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema63.nullable((java.lang.Boolean) false);
        annotatedElementSchema63.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema63.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str73 = annotatedElementSchema72.getPattern();
        annotatedElementSchema72.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean76 = annotatedElementSchema72.getWriteOnly();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema72.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema72.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema72.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info83 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional84 = io.swagger.jaxrs2.OperationParser.getInfo(info83);
        java.lang.Class<?> wildcardClass85 = infoOptional84.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray86 = new java.lang.reflect.AnnotatedElement[] { wildcardClass85 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList87 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList87, annotatedElementArray86);
        schema82.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        annotatedElementSchema63.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        schema57.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        annotatedElementSchema38.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        schema37.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        schema14.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList87);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = schema14.getExternalDocs();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(contactOptional54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(annotatedElementList62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(infoOptional84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(annotatedElementArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(externalDocumentation95);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        java.lang.String str7 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int13 = annotatedElementSchema8.getMinProperties();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema8.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.$ref("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema8.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.example((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        schema24.setDiscriminator(discriminator25);
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean10 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema18.setNullable((java.lang.Boolean) false);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema18.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema18.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema37.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema37.required((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema18.required((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema18.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema18.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.properties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = schema65.minLength((java.lang.Integer) 10);
        schema67.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator70 = schema67.getDiscriminator();
        schema67.setType("#/components/schemas/");
        java.lang.String str73 = schema67.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema75.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema75.setNullable((java.lang.Boolean) false);
        annotatedElementSchema75.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema75.minItems((java.lang.Integer) 0);
        java.lang.String str88 = schema87.getType();
        io.swagger.oas.models.media.XML xML89 = null;
        schema87.setXml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema67.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema67.getProperties();
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema18.properties(strMap92);
        schema14.setProperties(strMap92);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.discriminator(discriminator10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("hi!");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        annotatedElementSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        io.swagger.oas.annotations.info.License license29 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional30 = io.swagger.jaxrs2.OperationParser.getLicense(license29);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema26.example((java.lang.Object) licenseOptional30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        annotatedElementSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema32.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.properties(strMap42);
        java.lang.String str44 = schema43.getName();
        io.swagger.oas.annotations.info.Info info45 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional46 = io.swagger.jaxrs2.OperationParser.getInfo(info45);
        java.lang.Class<?> wildcardClass47 = infoOptional46.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema48.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = annotatedElementSchema48.getMinItems();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.minimum(bigDecimal58);
        annotatedElementSchema48.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass62 = annotatedElementSchema48.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema70.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass73 = schema70.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray74 = new java.lang.reflect.AnnotatedElement[] { wildcardClass47, wildcardClass62, wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList75 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList75, annotatedElementArray74);
        schema43.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        schema31.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        annotatedElementSchema21.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        java.math.BigDecimal bigDecimal80 = null;
        annotatedElementSchema21.setMaximum(bigDecimal80);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) bigDecimal80);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(licenseOptional30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(infoOptional46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(annotatedElementArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.xml(xML16);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.Integer int22 = annotatedElementSchema13.getMinItems();
        annotatedElementSchema13.setType("hi!");
        java.util.List<java.lang.String> strList25 = annotatedElementSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema10.required(strList25);
        schema26.setMaxProperties((java.lang.Integer) 1);
        schema26.setExclusiveMinimum((java.lang.Boolean) true);
        schema26.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema9.example((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.pattern("hi!");
        schema53.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema53.minProperties((java.lang.Integer) 0);
        boolean boolean59 = schema43.equals((java.lang.Object) schema53);
        io.swagger.oas.models.media.Schema schema61 = schema43.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema43.discriminator(discriminator62);
        schema43.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        schema15.setMaxLength((java.lang.Integer) 100);
        schema15.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray58 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList59 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList59, annotatedElementArray58);
        schema54.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList59);
        schema41.addExtension("no description", (java.lang.Object) schema54);
        java.lang.String str63 = schema54.toString();
        io.swagger.oas.models.media.Schema schema64 = schema11.not(schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema67.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema67.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Object obj72 = schema67.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotatedElementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = annotatedElementSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema5.$ref("*/*");
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema5.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema5.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema31.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = annotatedElementSchema35.getExtensions();
        schema34.setExtensions(strMap41);
        annotatedElementSchema21.setExtensions(strMap41);
        schema20.setExtensions(strMap41);
        schema4.setExtensions(strMap41);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema4.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema48.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema48.required((java.util.List<java.lang.String>) strList59);
        schema61.setName("default");
        io.swagger.oas.models.media.Schema schema65 = schema61.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.multipleOf(bigDecimal66);
        schema67.setExclusiveMaximum((java.lang.Boolean) true);
        schema47.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        io.swagger.oas.annotations.info.Contact contact74 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional75 = io.swagger.jaxrs2.OperationParser.getContact(contact74);
        annotatedElementSchema71.setExample((java.lang.Object) contactOptional75);
        annotatedElementSchema71.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema71.type("");
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema71.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema71.minProperties((java.lang.Integer) 10);
        schema47.setDefault((java.lang.Object) annotatedElementSchema71);
        io.swagger.oas.models.media.Schema schema87 = schema47.readOnly((java.lang.Boolean) false);
        java.lang.Integer int88 = schema47.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation89 = null;
        schema47.setExternalDocs(externalDocumentation89);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(contactOptional75);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema7.getDiscriminator();
        java.lang.Boolean boolean11 = schema7.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        java.lang.Boolean boolean11 = schema4.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema18.title("");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema26 = schema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML27 = null;
        schema22.setXml(xML27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema34.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema34.name("");
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema schema47 = schema33.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema49 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema22);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema10.getEnum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal21 = schema20.getMinimum();
        java.lang.Boolean boolean22 = schema20.getNullable();
        schema20.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.externalDocs(externalDocumentation25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema20.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.lang.String str13 = schema12.getType();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.minItems((java.lang.Integer) 0);
        schema12.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = schema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.Boolean boolean11 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema4.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema16.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = annotatedElementSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int40 = annotatedElementSchema35.getMinProperties();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema25.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        io.swagger.oas.annotations.info.Contact contact49 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional50 = io.swagger.jaxrs2.OperationParser.getContact(contact49);
        annotatedElementSchema46.setExample((java.lang.Object) contactOptional50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean53 = annotatedElementSchema52.getReadOnly();
        java.lang.Boolean boolean54 = annotatedElementSchema52.getNullable();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.String str60 = annotatedElementSchema52.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int66 = annotatedElementSchema61.getMinProperties();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray72 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        io.swagger.oas.models.media.Schema schema75 = schema68.required((java.util.List<java.lang.String>) strList73);
        annotatedElementSchema52.setDefault((java.lang.Object) strList73);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema46.required((java.util.List<java.lang.String>) strList73);
        schema45.setRequired((java.util.List<java.lang.String>) strList73);
        io.swagger.oas.models.media.Schema schema79 = schema24.required((java.util.List<java.lang.String>) strList73);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema79);
        io.swagger.oas.models.media.Schema schema82 = schema4.minItems((java.lang.Integer) 1);
        java.lang.Integer int83 = schema4.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema0.setMinimum(bigDecimal36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.discriminator(discriminator38);
        schema39.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setName("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = annotatedElementSchema44.getExtensions();
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema44.setMaximum(bigDecimal50);
        io.swagger.oas.annotations.servers.Server server52 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray53 = new io.swagger.oas.annotations.servers.Server[] { server52 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional54 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional55 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional56 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional57 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional58 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional59 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional60 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional61 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        annotatedElementSchema44.setDefault((java.lang.Object) serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional64 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional65 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional66 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional67 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional68 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        schema43.setExample((java.lang.Object) serverListOptional70);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(serverArray53);
        org.junit.Assert.assertNotNull(serverListOptional54);
        org.junit.Assert.assertNotNull(serverListOptional55);
        org.junit.Assert.assertNotNull(serverListOptional56);
        org.junit.Assert.assertNotNull(serverListOptional57);
        org.junit.Assert.assertNotNull(serverListOptional58);
        org.junit.Assert.assertNotNull(serverListOptional59);
        org.junit.Assert.assertNotNull(serverListOptional60);
        org.junit.Assert.assertNotNull(serverListOptional61);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertNotNull(serverListOptional64);
        org.junit.Assert.assertNotNull(serverListOptional65);
        org.junit.Assert.assertNotNull(serverListOptional66);
        org.junit.Assert.assertNotNull(serverListOptional67);
        org.junit.Assert.assertNotNull(serverListOptional68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertNotNull(serverListOptional70);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.minLength((java.lang.Integer) 10);
        schema18.setFormat("#/components/schemas/");
        schema7.setNot(schema18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.nullable((java.lang.Boolean) true);
        java.lang.Integer int14 = schema7.getMaxLength();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        java.lang.Boolean boolean14 = schema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        java.lang.String str37 = annotatedElementSchema29.getName();
        annotatedElementSchema8.setDefault((java.lang.Object) annotatedElementSchema29);
        io.swagger.oas.models.media.Schema schema39 = null;
        annotatedElementSchema8.setNot(schema39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema8.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList43 = annotatedElementSchema8.getRequired();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema8.writeOnly((java.lang.Boolean) false);
        java.lang.String str46 = annotatedElementSchema8.getType();
        java.lang.String[] strArray52 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema8.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema56 = schema7.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema58 = schema56.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema59 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema61 = schema56.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList16 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(annotatedElementList16);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema4.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = schema11.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.example((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        io.swagger.oas.annotations.info.Contact contact45 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional46 = io.swagger.jaxrs2.OperationParser.getContact(contact45);
        annotatedElementSchema42.setExample((java.lang.Object) contactOptional46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean49 = annotatedElementSchema48.getReadOnly();
        java.lang.Boolean boolean50 = annotatedElementSchema48.getNullable();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList53);
        java.lang.String str56 = annotatedElementSchema48.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = annotatedElementSchema57.getMinProperties();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray68 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = schema64.required((java.util.List<java.lang.String>) strList69);
        annotatedElementSchema48.setDefault((java.lang.Object) strList69);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema42.required((java.util.List<java.lang.String>) strList69);
        schema41.setRequired((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema15.not(schema41);
        io.swagger.oas.models.media.Schema schema77 = schema41.minLength((java.lang.Integer) 100);
        schema11.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema79 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean80 = annotatedElementSchema79.getReadOnly();
        java.lang.String str81 = annotatedElementSchema79.get$ref();
        io.swagger.oas.models.media.XML xML82 = null;
        annotatedElementSchema79.setXml(xML82);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = annotatedElementSchema79.getExternalDocs();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema79.pattern("no description");
        io.swagger.oas.models.media.Schema schema88 = schema86.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str89 = schema88.getName();
        io.swagger.oas.models.media.XML xML90 = schema88.getXml();
        io.swagger.oas.models.media.Schema schema91 = schema88.getNot();
        java.math.BigDecimal bigDecimal92 = schema88.getMultipleOf();
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema88.multipleOf(bigDecimal93);
        schema11.setNot(schema88);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(contactOptional46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(externalDocumentation84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(xML90);
        org.junit.Assert.assertNull(schema91);
        org.junit.Assert.assertNull(bigDecimal92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.minProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema18.getType();
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.xml(xML24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        schema7.setExtensions(strMap26);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema7.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema7.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema0.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        schema8.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str11 = schema8.getPattern();
        java.lang.String str12 = schema8.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.Integer int22 = annotatedElementSchema13.getMinItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema13.minimum(bigDecimal23);
        annotatedElementSchema13.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema13.setMinLength((java.lang.Integer) 1);
        annotatedElementSchema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean31 = schema8.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean32 = schema8.getDeprecated();
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        schema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema30 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema31.getProperties();
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema14.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema0.setAdditionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema44 = schema14.pattern("");
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema14.discriminator(discriminator45);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not(schema34);
        schema8.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema38 = schema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = annotatedElementSchema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray40 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        io.swagger.oas.models.media.Schema schema43 = schema36.required((java.util.List<java.lang.String>) strList41);
        annotatedElementSchema20.setDefault((java.lang.Object) strList41);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList41);
        schema11.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.String str47 = schema11.toString();
        java.lang.String str48 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema50 = schema11.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, #/components/schemas/, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str47, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, #/components/schemas/, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema26.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = schema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema17.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean22 = schema21.getReadOnly();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = schema21.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema21.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema21.getExternalDocs();
        java.lang.String str28 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int31 = schema21.getMaxProperties();
        java.lang.String str32 = schema21.getDescription();
        io.swagger.oas.models.media.Schema schema33 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema21);
        io.swagger.oas.models.media.XML xML34 = null;
        schema9.setXml(xML34);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(xML25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema19.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema19.setExternalDocs(externalDocumentation23);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList16 = schema15.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        java.lang.Boolean boolean27 = schema6.getDeprecated();
        java.lang.String str28 = schema6.getName();
        schema6.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("default");
        java.lang.Integer int30 = schema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.readOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass33 = schema32.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = null;
        schema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema7.readOnly((java.lang.Boolean) true);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMaximum(bigDecimal16);
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = schema31.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean37 = annotatedElementSchema36.getReadOnly();
        java.lang.Boolean boolean38 = annotatedElementSchema36.getNullable();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.String str44 = annotatedElementSchema36.getDescription();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema36.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema36.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        io.swagger.oas.annotations.info.License license55 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional56 = io.swagger.jaxrs2.OperationParser.getLicense(license55);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema52.example((java.lang.Object) licenseOptional56);
        java.lang.String str58 = annotatedElementSchema52.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema52.getExternalDocs();
        annotatedElementSchema52.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.properties(strMap72);
        java.lang.Object obj74 = annotatedElementSchema66.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = annotatedElementSchema66.getExtensions();
        boolean boolean76 = schema63.equals((java.lang.Object) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema77.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema85 = schema63.additionalProperties(schema84);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema86 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema86.setPattern("");
        annotatedElementSchema86.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema86.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema95 = annotatedElementSchema86.pattern("hi!");
        io.swagger.oas.models.media.Schema schema96 = schema84.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema86);
        schema31.setDefault((java.lang.Object) schema96);
        java.lang.Integer int98 = schema96.getMaxProperties();
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) int98);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(licenseOptional56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(int98);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        java.math.BigDecimal bigDecimal24 = schema21.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema21.setExternalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        schema11.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        annotatedElementSchema14.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        annotatedElementSchema14.setDiscriminator(discriminator22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.multipleOf(bigDecimal24);
        java.lang.Object obj26 = annotatedElementSchema14.getExample();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.description("hi!");
        annotatedElementSchema14.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema14.minItems((java.lang.Integer) 0);
        java.lang.reflect.AnnotatedElement annotatedElement33 = annotatedElementSchema14.getDefault();
        boolean boolean34 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(annotatedElement33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.lang.Integer int50 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema52 = schema17.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.maximum(bigDecimal53);
        java.lang.Integer int55 = schema54.getMinLength();
        io.swagger.oas.models.media.Schema schema57 = schema54.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = schema57.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.String str20 = annotatedElementSchema18.get$ref();
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema18.setXml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = annotatedElementSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean25 = annotatedElementSchema24.getReadOnly();
        java.lang.Boolean boolean26 = annotatedElementSchema24.getNullable();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema24.format("no description");
        annotatedElementSchema18.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        annotatedElementSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        schema41.setTitle("#/components/schemas/");
        java.lang.Integer int44 = schema41.getMinLength();
        java.lang.Integer int45 = schema41.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        io.swagger.oas.annotations.info.Contact contact49 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional50 = io.swagger.jaxrs2.OperationParser.getContact(contact49);
        annotatedElementSchema46.setExample((java.lang.Object) contactOptional50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema46.setMinProperties((java.lang.Integer) 100);
        schema41.setExample((java.lang.Object) annotatedElementSchema46);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema46.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema18.not(schema60);
        java.math.BigDecimal bigDecimal62 = annotatedElementSchema18.getMultipleOf();
        java.lang.Boolean boolean63 = annotatedElementSchema18.getDeprecated();
        schema16.setExample((java.lang.Object) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema18.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(contactOptional50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.setMinItems((java.lang.Integer) 0);
        schema20.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema20.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = annotatedElementSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        schema36.setTitle("#/components/schemas/");
        java.lang.Integer int39 = schema36.getMinLength();
        java.lang.Integer int40 = schema36.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema41.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema41.setMinProperties((java.lang.Integer) 100);
        schema36.setExample((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema41.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        annotatedElementSchema57.setRequired((java.util.List<java.lang.String>) strList63);
        java.lang.Integer int66 = annotatedElementSchema57.getMinItems();
        annotatedElementSchema57.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema57.externalDocs(externalDocumentation69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema57.minimum(bigDecimal71);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema75 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.Schema schema77 = schema75.exclusiveMaximum((java.lang.Boolean) true);
        schema77.setName("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList80 = schema77.getEnum();
        schema24.setDefault((java.lang.Object) schema77);
        java.util.List<java.lang.String> strList82 = schema77.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(annotatedElementList80);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.String str11 = schema4.get$ref();
        java.math.BigDecimal bigDecimal12 = null;
        schema4.setMinimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema4.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minimum(bigDecimal9);
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = annotatedElementSchema0.getDescription();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.readOnly((java.lang.Boolean) false);
        annotatedElementSchema8.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema8.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.lang.String str18 = annotatedElementSchema0.getTitle();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        annotatedElementSchema22.setDefault((java.lang.Object) strList43);
        java.util.List<java.lang.String> strList47 = annotatedElementSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema48 = schema21.required(strList47);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        io.swagger.oas.annotations.info.Contact contact54 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional55 = io.swagger.jaxrs2.OperationParser.getContact(contact54);
        annotatedElementSchema51.setExample((java.lang.Object) contactOptional55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.readOnly((java.lang.Boolean) false);
        java.lang.String str59 = annotatedElementSchema51.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema51.properties(strMap60);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema51.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema51.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema51.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema51.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int75 = annotatedElementSchema70.getMinProperties();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema70.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str81 = annotatedElementSchema80.getPattern();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema80.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema84 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema84.setPattern("");
        annotatedElementSchema84.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = annotatedElementSchema84.getExtensions();
        schema83.setExtensions(strMap90);
        annotatedElementSchema70.setExtensions(strMap90);
        schema69.setExtensions(strMap90);
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        schema69.setDiscriminator(discriminator94);
        java.lang.String str96 = schema69.getDescription();
        io.swagger.oas.models.media.Schema schema97 = schema50.example((java.lang.Object) str96);
        schema50.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(contactOptional55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray20 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components23);
        java.lang.Class<?> wildcardClass25 = parameterListOptional24.getClass();
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass25);
        io.swagger.oas.models.media.Schema schema28 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(parameterArray20);
        org.junit.Assert.assertNotNull(parameterListOptional22);
        org.junit.Assert.assertNotNull(parameterListOptional24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = schema69.exclusiveMinimum((java.lang.Boolean) false);
        schema69.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema69.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema49.getEnum();
        schema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int53 = schema49.getMinProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 1);
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema6);
        java.lang.String str12 = annotatedElementSchema6.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        schema20.setDeprecated((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass23 = schema20.getClass();
        annotatedElementSchema6.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass23);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int10 = schema9.getMaxItems();
        java.lang.Boolean boolean11 = schema9.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) 0);
        schema9.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema9.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema19.getFormat();
        java.lang.Integer int21 = schema19.getMinProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setNullable((java.lang.Boolean) true);
        java.lang.String str15 = schema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str17 = annotatedElementSchema16.getPattern();
        annotatedElementSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = annotatedElementSchema16.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.Contact contact24 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional25 = io.swagger.jaxrs2.OperationParser.getContact(contact24);
        annotatedElementSchema21.setExample((java.lang.Object) contactOptional25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        java.lang.String str29 = annotatedElementSchema21.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema35.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) true);
        schema12.setNot(schema38);
        schema38.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema38.setExternalDocs(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(contactOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str6 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        java.lang.String str26 = annotatedElementSchema18.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema18.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema18.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema18.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema18.addRequiredItem("");
        schema36.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str39 = schema36.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator50 = annotatedElementSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.properties(strMap57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema42.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.maximum(bigDecimal63);
        schema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema62.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal70 = null;
        annotatedElementSchema69.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList74 = annotatedElementSchema69.getEnum();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.description("hi!");
        java.lang.Object obj77 = schema76.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema76.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema76.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema83 = schema81.minProperties((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass84 = schema83.getClass();
        schema62.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass84);
        schema36.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass84);
        schema15.setDefault((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal88 = null;
        schema36.setMinimum(bigDecimal88);
        java.lang.Boolean boolean90 = schema36.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(annotatedElementList74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNull(boolean90);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        schema16.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = schema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement32 = annotatedElementSchema22.getDefault();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema16.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema45.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        schema52.setExternalDocs(externalDocumentation53);
        java.lang.String str55 = schema52.getDescription();
        schema37.setDefault((java.lang.Object) str55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = schema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = schema6.additionalProperties(schema37);
        java.lang.String str59 = schema58.getType();
        io.swagger.oas.models.media.Schema schema61 = schema58.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(annotatedElement32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML4 = null;
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.xml(xML4);
        io.swagger.oas.models.media.Schema schema7 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj8 = null;
        schema5.setDefault(obj8);
        io.swagger.oas.models.media.Schema schema11 = schema5.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema5.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML12 = schema7.getXml();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema7.setDiscriminator(discriminator13);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML12);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema13.getRequired();
        java.math.BigDecimal bigDecimal15 = null;
        schema13.setMultipleOf(bigDecimal15);
        java.lang.String str17 = schema13.getTitle();
        schema13.setMaxProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema13.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema schema21 = schema18.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema8.setMultipleOf(bigDecimal11);
        java.util.List<java.lang.String> strList13 = schema8.getRequired();
        schema8.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str60 = annotatedElementSchema59.getPattern();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema59.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = annotatedElementSchema63.getExtensions();
        schema62.setExtensions(strMap69);
        annotatedElementSchema49.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema49.minProperties((java.lang.Integer) (-1));
        schema73.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema76.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema76.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal81 = annotatedElementSchema76.getMultipleOf();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.format("default");
        io.swagger.oas.models.media.Schema schema84 = schema73.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema85 = schema48.not(schema83);
        java.lang.Boolean boolean86 = schema85.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema40.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minLength((java.lang.Integer) (-1));
        schema48.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str51 = schema48.getPattern();
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.xml(xML52);
        io.swagger.oas.models.media.Schema schema54 = schema39.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        java.lang.Integer int63 = schema62.getMaxItems();
        io.swagger.oas.models.media.XML xML64 = null;
        schema62.setXml(xML64);
        java.math.BigDecimal bigDecimal66 = schema62.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.discriminator(discriminator67);
        schema68.setMaxItems((java.lang.Integer) (-1));
        schema68.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema68.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal75 = schema68.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = schema39.not(schema68);
        java.lang.String str77 = schema39.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        schema10.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = schema10.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema10.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema10.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema11.getNot();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMinimum();
        java.lang.Boolean boolean14 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = schema10.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema22.getNot();
        java.lang.Integer int26 = schema22.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = schema10.minItems((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema13.setExternalDocs(externalDocumentation15);
        java.lang.Integer int17 = schema13.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        schema22.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal27 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema28.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = annotatedElementSchema28.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement38 = annotatedElementSchema28.getDefault();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema22.not(schema40);
        io.swagger.oas.models.media.Schema schema43 = schema40.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = annotatedElementSchema44.getMinProperties();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray55 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema51.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        schema58.setExternalDocs(externalDocumentation59);
        java.lang.String str61 = schema58.getDescription();
        schema43.setDefault((java.lang.Object) str61);
        io.swagger.oas.models.media.Schema schema64 = schema43.minProperties((java.lang.Integer) 0);
        schema13.setDefault((java.lang.Object) schema43);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(annotatedElement38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema3 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str4 = annotatedElementSchema3.getPattern();
        annotatedElementSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = annotatedElementSchema3.getWriteOnly();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema3.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema3.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema3.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema3.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema46 = null;
        annotatedElementSchema15.setNot(schema46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema15.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList50 = annotatedElementSchema15.getRequired();
        annotatedElementSchema3.setRequired(strList50);
        annotatedElementSchema0.setRequired(strList50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean55 = annotatedElementSchema54.getReadOnly();
        java.lang.Boolean boolean56 = annotatedElementSchema54.getNullable();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema54.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.String str62 = annotatedElementSchema54.getDescription();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema65.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator73 = annotatedElementSchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema54.not((io.swagger.oas.models.media.Schema) annotatedElementSchema65);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema75.minProperties((java.lang.Integer) 10);
        java.lang.String str83 = annotatedElementSchema75.getName();
        annotatedElementSchema54.setDefault((java.lang.Object) annotatedElementSchema75);
        io.swagger.oas.models.media.Schema schema85 = null;
        annotatedElementSchema54.setNot(schema85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema54.addRequiredItem("*/*");
        java.lang.String str89 = annotatedElementSchema54.getName();
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema18.getDiscriminator();
        schema18.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean31 = annotatedElementSchema0.equals((java.lang.Object) true);
        java.lang.Boolean boolean32 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = schema15.getXml();
        io.swagger.oas.models.media.Schema schema22 = schema15.minProperties((java.lang.Integer) (-1));
        java.lang.Integer int23 = schema15.getMinLength();
        java.lang.String str24 = schema15.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#/components/schemas/" + "'", str24, "#/components/schemas/");
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.lang.Boolean boolean22 = schema21.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema27.getEnum();
        annotatedElementSchema27.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.Integer int44 = annotatedElementSchema35.getMinItems();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema35.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList48 = annotatedElementSchema27.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.Boolean boolean51 = annotatedElementSchema49.getNullable();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = annotatedElementSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema49.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema49.multipleOf(bigDecimal60);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema27.example((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 10);
        java.lang.String str73 = schema72.getFormat();
        io.swagger.oas.models.media.Schema schema75 = schema72.addRequiredItem("");
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.maximum(bigDecimal76);
        schema62.setNot(schema77);
        io.swagger.oas.models.media.Schema schema79 = schema21.not(schema77);
        schema21.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(annotatedElementList48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = annotatedElementSchema0.getExtensions();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean18 = schema17.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema20.getMaxItems();
        java.lang.String str22 = schema20.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = schema10.getXml();
        schema10.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.String str20 = annotatedElementSchema18.get$ref();
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema18.setXml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = annotatedElementSchema18.getExternalDocs();
        java.lang.Object obj24 = annotatedElementSchema18.getExample();
        io.swagger.oas.models.media.Schema schema25 = schema10.example(obj24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        java.lang.reflect.AnnotatedElement annotatedElement47 = annotatedElementSchema26.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray49 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces50 = null;
        javax.ws.rs.Produces produces51 = null;
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional53 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces50, produces51, components52);
        javax.ws.rs.Produces produces54 = null;
        javax.ws.rs.Produces produces55 = null;
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional57 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces54, produces55, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces58, produces59, components60);
        annotatedElementSchema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces58);
        java.lang.Integer int63 = annotatedElementSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema26.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal66 = schema65.getMinimum();
        schema10.setAdditionalProperties(schema65);
        java.lang.String str68 = schema65.getName();
        java.lang.Object obj69 = schema65.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(annotatedElement47);
        org.junit.Assert.assertNotNull(apiResponseArray49);
        org.junit.Assert.assertNotNull(apiResponsesOptional53);
        org.junit.Assert.assertNotNull(apiResponsesOptional57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema7.setMaxProperties((java.lang.Integer) 100);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML14 = schema7.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema7.externalDocs(externalDocumentation15);
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        java.lang.Boolean boolean8 = schema6.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema10 = schema6.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = annotatedElementSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema34.getExtensions();
        schema33.setExtensions(strMap40);
        annotatedElementSchema20.setExtensions(strMap40);
        schema17.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema45 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema17.externalDocs(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMaximum(bigDecimal34);
        schema7.setDefault((java.lang.Object) schema32);
        io.swagger.oas.models.media.Schema schema38 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        java.lang.Integer int8 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.maxItems((java.lang.Integer) (-1));
        schema15.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        schema4.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema4.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema49.writeOnly((java.lang.Boolean) true);
        schema49.setFormat("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("default");
        java.lang.Integer int30 = schema27.getMaxItems();
        schema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.minimum(bigDecimal31);
        java.util.List<java.lang.String> strList33 = schema32.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema32.setDiscriminator(discriminator34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        java.lang.Integer int45 = annotatedElementSchema36.getMaxLength();
        io.swagger.oas.models.media.Schema schema46 = schema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema48 = schema32.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean51 = annotatedElementSchema50.getReadOnly();
        java.lang.String str52 = annotatedElementSchema50.get$ref();
        io.swagger.oas.models.media.XML xML53 = null;
        annotatedElementSchema50.setXml(xML53);
        io.swagger.oas.models.media.XML xML55 = annotatedElementSchema50.getXml();
        java.lang.String str56 = annotatedElementSchema50.get$ref();
        annotatedElementSchema50.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int59 = annotatedElementSchema50.getMinLength();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema50.multipleOf(bigDecimal60);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema50);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema54.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = schema67.minProperties((java.lang.Integer) 0);
        java.lang.String str70 = schema67.get$ref();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema17.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema17.getExtensions();
        java.lang.Boolean boolean21 = schema17.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        java.lang.String str8 = schema6.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        schema6.setExternalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.nullable((java.lang.Boolean) false);
        java.lang.Integer int16 = schema15.getMinLength();
        schema15.setMaxLength((java.lang.Integer) (-1));
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema15.setMinimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema33.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = annotatedElementSchema37.getExtensions();
        schema36.setExtensions(strMap43);
        annotatedElementSchema23.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema23.minProperties((java.lang.Integer) (-1));
        schema47.setDescription("");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.maximum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.properties(strMap58);
        java.lang.Integer int60 = schema59.getMinProperties();
        java.lang.Integer int61 = schema59.getMinProperties();
        java.lang.Boolean boolean62 = schema59.getExclusiveMaximum();
        schema47.setExample((java.lang.Object) schema59);
        boolean boolean64 = schema15.equals((java.lang.Object) schema59);
        io.swagger.oas.models.media.XML xML65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema59.xml(xML65);
        schema6.setDefault((java.lang.Object) schema59);
        io.swagger.oas.models.media.Schema schema69 = schema6.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.multipleOf(bigDecimal17);
        schema18.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        schema8.setMultipleOf(bigDecimal13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.addProperties("", schema21);
        java.lang.String str23 = schema16.getType();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj30 = schema29.getExample();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema25.setProperties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.properties(strMap50);
        java.lang.String str52 = schema51.getName();
        io.swagger.oas.annotations.info.Info info53 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional54 = io.swagger.jaxrs2.OperationParser.getInfo(info53);
        java.lang.Class<?> wildcardClass55 = infoOptional54.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema56.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int65 = annotatedElementSchema56.getMinItems();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.minimum(bigDecimal66);
        annotatedElementSchema56.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = annotatedElementSchema56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema71.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass81 = schema78.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray82 = new java.lang.reflect.AnnotatedElement[] { wildcardClass55, wildcardClass70, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList83 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList83, annotatedElementArray82);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema39.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        java.lang.String str89 = schema13.get$ref();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(infoOptional54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotatedElementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema13.discriminator(discriminator19);
        java.lang.Boolean boolean21 = schema20.getWriteOnly();
        java.lang.Integer int22 = schema20.getMaxLength();
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.xml(xML23);
        java.lang.Integer int25 = schema20.getMaxProperties();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = annotatedElementSchema13.getExtensions();
        schema12.setExtensions(strMap19);
        schema8.setExtensions(strMap19);
        java.math.BigDecimal bigDecimal22 = null;
        schema8.setMultipleOf(bigDecimal22);
        java.lang.Boolean boolean24 = schema8.getNullable();
        schema8.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema8.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema8.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema42.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str48 = annotatedElementSchema47.getPattern();
        annotatedElementSchema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = annotatedElementSchema47.getWriteOnly();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema47.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str54 = annotatedElementSchema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str56 = annotatedElementSchema55.getPattern();
        annotatedElementSchema55.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean59 = annotatedElementSchema55.getWriteOnly();
        boolean boolean60 = annotatedElementSchema47.equals((java.lang.Object) annotatedElementSchema55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        annotatedElementSchema47.setExternalDocs(externalDocumentation61);
        java.lang.String[] strArray64 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        annotatedElementSchema47.setRequired((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = schema46.required((java.util.List<java.lang.String>) strList65);
        java.lang.String str69 = schema46.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema46.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema72 = schema32.additionalProperties(schema71);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.properties(strMap79);
        java.lang.Object obj81 = annotatedElementSchema73.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema82 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema82.setPattern("");
        annotatedElementSchema82.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema82.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema82.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal91 = null;
        schema90.setMultipleOf(bigDecimal91);
        io.swagger.oas.models.media.Schema schema94 = schema90.uniqueItems((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass95 = schema94.getClass();
        annotatedElementSchema73.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass95);
        schema32.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass95);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema16.getEnum();
        annotatedElementSchema16.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.XML xML37 = null;
        annotatedElementSchema16.setXml(xML37);
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str48 = annotatedElementSchema0.getTitle();
        java.lang.Class<?> wildcardClass49 = annotatedElementSchema0.getClass();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema4.discriminator(discriminator21);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = annotatedElementSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.example((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean40 = annotatedElementSchema39.getReadOnly();
        java.lang.Boolean boolean41 = annotatedElementSchema39.getNullable();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema39.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.String str47 = annotatedElementSchema39.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = annotatedElementSchema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray59 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema55.required((java.util.List<java.lang.String>) strList60);
        annotatedElementSchema39.setDefault((java.lang.Object) strList60);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema33.required((java.util.List<java.lang.String>) strList60);
        schema32.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema66 = schema9.required((java.util.List<java.lang.String>) strList60);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema9.maximum(bigDecimal67);
        java.lang.Integer int69 = schema9.getMaxLength();
        io.swagger.oas.models.media.Schema schema71 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean72 = schema9.getReadOnly();
        java.math.BigDecimal bigDecimal73 = null;
        schema9.setMaximum(bigDecimal73);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.maximum(bigDecimal30);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema31);
        schema31.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.maximum(bigDecimal18);
        schema19.setNullable((java.lang.Boolean) false);
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 10);
        java.lang.String str6 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema20.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema30 = schema19.not(schema29);
        schema19.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema19.$ref("default");
        io.swagger.oas.models.media.Schema schema36 = schema19.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        schema38.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.minProperties((java.lang.Integer) 0);
        schema45.setFormat("*/*");
        schema45.setUniqueItems((java.lang.Boolean) true);
        java.lang.Object obj50 = schema45.getExample();
        schema38.setNot(schema45);
        java.lang.Class<?> wildcardClass52 = schema45.getClass();
        schema8.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass52);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces31, produces32, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces37, produces38, components39);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(contentOptional40);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str19 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        annotatedElementSchema22.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema22.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal47 = schema46.getMultipleOf();
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.xml(xML48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinProperties();
        io.swagger.oas.models.media.Schema schema61 = schema58.pattern("*/*");
        io.swagger.oas.models.media.Schema schema63 = schema61.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal65 = null;
        annotatedElementSchema64.setMultipleOf(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema64.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema72 = schema70.maxProperties((java.lang.Integer) 0);
        schema61.setDefault((java.lang.Object) schema72);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema72);
        io.swagger.oas.models.media.Schema schema75 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema76 = schema15.additionalProperties(schema72);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema48.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.properties(strMap59);
        schema60.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema60.addProperties("hi!", schema64);
        java.lang.String[] strArray72 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional73 = io.swagger.jaxrs2.OperationParser.getTags(strArray72);
        io.swagger.oas.models.media.Schema schema74 = schema60.example((java.lang.Object) strArray72);
        schema74.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema77.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        annotatedElementSchema77.setRequired((java.util.List<java.lang.String>) strList83);
        java.lang.Integer int86 = annotatedElementSchema77.getMinItems();
        annotatedElementSchema77.setType("hi!");
        java.util.List<java.lang.String> strList89 = annotatedElementSchema77.getRequired();
        io.swagger.oas.models.media.Schema schema90 = schema74.required(strList89);
        schema74.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema93 = schema48.example((java.lang.Object) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(tagSetOptional73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema15.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema22 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = annotatedElementSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.description("hi!");
        java.lang.Object obj31 = schema30.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.minimum(bigDecimal35);
        schema15.setNot(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean6 = annotatedElementSchema0.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(externalDocumentation8);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = annotatedElementSchema4.getExtensions();
        schema3.setExtensions(strMap10);
        schema3.setFormat("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema3.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema15.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = schema21.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema21.name("no description");
        schema24.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        schema3.setDefault((java.lang.Object) schema24);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema10.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.License license15 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional16 = io.swagger.jaxrs2.OperationParser.getLicense(license15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema12.example((java.lang.Object) licenseOptional16);
        java.lang.String str18 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.deprecated((java.lang.Boolean) false);
        schema21.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("");
        java.lang.Integer int26 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.description("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.String str42 = annotatedElementSchema36.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema36.getExternalDocs();
        annotatedElementSchema36.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema34.additionalProperties(schema47);
        schema25.setNot(schema47);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = null;
        schema25.setEnum(annotatedElementList50);
        schema25.setUniqueItems((java.lang.Boolean) false);
        boolean boolean54 = schema6.equals((java.lang.Object) schema25);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema25.discriminator(discriminator55);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(licenseOptional16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        schema7.setExternalDocs(externalDocumentation8);
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = schema7.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.externalDocs(externalDocumentation13);
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        schema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.format("");
        schema17.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema0.getNullable();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = annotatedElementSchema0.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema0.getProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray16 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces25, produces26, components27);
        java.lang.Class<?> wildcardClass29 = apiResponseArray16.getClass();
        schema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = annotatedElementSchema32.getEnum();
        annotatedElementSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        java.lang.Boolean boolean54 = schema52.getNullable();
        io.swagger.oas.models.media.Schema schema55 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema57 = schema15.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema57.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema59.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = schema59.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema63.getNot();
        java.lang.Boolean boolean65 = schema63.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(apiResponseArray16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNull(boolean65);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        annotatedElementSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info34 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional35 = io.swagger.jaxrs2.OperationParser.getInfo(info34);
        java.lang.Class<?> wildcardClass36 = infoOptional35.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray37 = new java.lang.reflect.AnnotatedElement[] { wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList38 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList38, annotatedElementArray37);
        schema33.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList38);
        schema20.addExtension("no description", (java.lang.Object) schema33);
        java.lang.String str42 = schema33.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        io.swagger.oas.annotations.info.Contact contact47 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional48 = io.swagger.jaxrs2.OperationParser.getContact(contact47);
        annotatedElementSchema44.setExample((java.lang.Object) contactOptional48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("#/components/schemas/");
        schema33.addExtension("no description", (java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema9.additionalProperties(schema33);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = annotatedElementSchema59.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        annotatedElementSchema59.setProperties(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        io.swagger.oas.annotations.info.Contact contact71 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional72 = io.swagger.jaxrs2.OperationParser.getContact(contact71);
        annotatedElementSchema68.setExample((java.lang.Object) contactOptional72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.readOnly((java.lang.Boolean) false);
        java.lang.String str76 = annotatedElementSchema68.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema68.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema68.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema68.minimum(bigDecimal83);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema84.setDiscriminator(discriminator85);
        java.lang.Boolean boolean87 = schema84.getExclusiveMaximum();
        annotatedElementSchema59.setNot(schema84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = annotatedElementSchema59.getProperties();
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema59.minimum(bigDecimal90);
        java.util.List<java.lang.String> strList92 = schema91.getRequired();
        io.swagger.oas.models.media.Schema schema93 = schema58.not(schema91);
        schema93.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema97 = schema93.title("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(infoOptional35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(annotatedElementArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(contactOptional72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList29 = schema11.getEnum();
        schema11.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema32.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.minimum(bigDecimal41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.xml(xML43);
        java.lang.Object obj45 = schema42.getExample();
        java.math.BigDecimal bigDecimal46 = schema42.getMinimum();
        java.math.BigDecimal bigDecimal47 = null;
        schema42.setMultipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema42.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema50.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.xml(xML53);
        schema11.setDefault((java.lang.Object) xML53);
        java.math.BigDecimal bigDecimal56 = null;
        schema11.setMinimum(bigDecimal56);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElementList29);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.xml(xML17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser23 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema19.addExtension("no description", (java.lang.Object) operationParser23);
        annotatedElementSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        annotatedElementSchema19.setDiscriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.multipleOf(bigDecimal29);
        annotatedElementSchema19.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.externalDocs(externalDocumentation33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema34.setProperties(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema49.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        io.swagger.oas.models.media.Schema schema52 = schema16.example((java.lang.Object) schema34);
        io.swagger.oas.models.media.XML xML53 = schema52.getXml();
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.discriminator(discriminator54);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(xML53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.String str17 = annotatedElementSchema11.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema11.deprecated((java.lang.Boolean) false);
        schema20.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.example((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema31 = schema28.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxLength((java.lang.Integer) 1);
        schema33.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema10.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        schema34.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema34.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation18);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.title("");
        java.lang.String str24 = annotatedElementSchema0.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema8.setFormat("");
        schema8.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        schema10.setNullable((java.lang.Boolean) false);
        java.lang.Integer int13 = schema10.getMinLength();
        java.lang.String str14 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        schema10.setReadOnly((java.lang.Boolean) false);
        schema10.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj21 = null;
        schema10.setExample(obj21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema34.setNullable((java.lang.Boolean) false);
        annotatedElementSchema34.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema23.example((java.lang.Object) 0);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        schema10.setAdditionalProperties(schema47);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str11 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        annotatedElementSchema0.setDiscriminator(discriminator16);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        schema19.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema31 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema33 = schema7.name("");
        schema33.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema44.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        schema7.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema7.writeOnly((java.lang.Boolean) false);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: -1\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.discriminator(discriminator14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema21.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        java.lang.String str11 = annotatedElementSchema0.getType();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        annotatedElementSchema14.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.type("");
        java.lang.String str24 = schema23.getPattern();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema23.$ref("*/*");
        schema13.setExample((java.lang.Object) schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema13.xml(xML30);
        java.lang.String str32 = schema13.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int15 = schema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMaximum(bigDecimal18);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.properties(strMap51);
        schema52.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.addProperties("hi!", schema56);
        java.lang.String[] strArray64 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strArray64);
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema66.required(strList81);
        boolean boolean83 = schema43.equals((java.lang.Object) schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.properties(strMap84);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        java.math.BigDecimal bigDecimal88 = null;
        schema87.setMinimum(bigDecimal88);
        java.lang.Integer int90 = schema87.getMaxLength();
        schema87.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int90);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = schema8.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#/components/schemas/" + "'", str13, "#/components/schemas/");
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) true);
        schema41.setAdditionalProperties(schema53);
        schema41.setReadOnly((java.lang.Boolean) false);
        schema41.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal63 = null;
        schema41.setMinimum(bigDecimal63);
        java.lang.Integer int65 = schema41.getMinProperties();
        java.math.BigDecimal bigDecimal66 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema41.title("");
        io.swagger.oas.models.media.Schema schema70 = schema68.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema70.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal6 = null;
        annotatedElementSchema5.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.description("hi!");
        java.lang.Object obj13 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema15 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("");
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema50 = schema4.pattern("");
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = schema50.getExternalDocs();
        java.math.BigDecimal bigDecimal53 = schema50.getMinimum();
        io.swagger.oas.models.media.XML xML54 = schema50.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(xML54);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        java.lang.String str19 = schema16.getTitle();
        java.util.List<java.lang.String> strList20 = schema16.getRequired();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = schema16.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(annotatedElementList21);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        java.lang.Integer int29 = schema20.getMinLength();
        io.swagger.oas.models.media.Schema schema31 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMaximum(bigDecimal17);
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML21 = null;
        schema16.setXml(xML21);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("*/*");
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal31 = null;
        annotatedElementSchema30.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema30.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.String str49 = annotatedElementSchema41.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.properties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList54 = schema53.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str56 = annotatedElementSchema55.getPattern();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema55.xml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema53.example((java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema schema62 = schema40.not(schema53);
        java.lang.String str63 = schema40.getDescription();
        io.swagger.oas.models.media.Schema schema64 = schema29.additionalProperties(schema40);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema29.discriminator(discriminator65);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(annotatedElementList54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema22.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema22.setXml(xML25);
        schema22.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema22.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.externalDocs(externalDocumentation29);
        java.util.List<java.lang.String> strList31 = schema24.getRequired();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.math.BigDecimal bigDecimal40 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema schema42 = schema35.writeOnly((java.lang.Boolean) false);
        schema42.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        schema18.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.xml(xML43);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        schema53.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema53.addProperties("hi!", schema57);
        java.lang.String[] strArray65 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        io.swagger.oas.models.media.Schema schema67 = schema53.example((java.lang.Object) strArray65);
        schema67.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema70.setRequired((java.util.List<java.lang.String>) strList76);
        java.lang.Integer int79 = annotatedElementSchema70.getMinItems();
        annotatedElementSchema70.setType("hi!");
        java.util.List<java.lang.String> strList82 = annotatedElementSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = schema67.required(strList82);
        boolean boolean84 = schema44.equals((java.lang.Object) schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema0.properties(strMap85);
        java.lang.Boolean boolean87 = schema86.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal88 = null;
        schema86.setMultipleOf(bigDecimal88);
        java.lang.Integer int90 = schema86.getMinLength();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNull(int90);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        schema10.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        annotatedElementSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = annotatedElementSchema7.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema7.not((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        schema16.setTitle("#/components/schemas/");
        java.lang.Integer int19 = schema16.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema16.minimum(bigDecimal20);
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray22 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional26 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray22, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional30 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray22, produces27, produces28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional34 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray22, produces31, produces32, components33);
        java.lang.Class<?> wildcardClass35 = apiResponseArray22.getClass();
        schema21.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass35);
        schema6.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass35);
        schema6.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(apiResponseArray22);
        org.junit.Assert.assertNotNull(apiResponsesOptional26);
        org.junit.Assert.assertNotNull(apiResponsesOptional30);
        org.junit.Assert.assertNotNull(apiResponsesOptional34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        schema18.setDescription("#/components/schemas/");
        schema18.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.example((java.lang.Object) schema18);
        java.lang.String str24 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        io.swagger.oas.annotations.info.License license28 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional29 = io.swagger.jaxrs2.OperationParser.getLicense(license28);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.example((java.lang.Object) licenseOptional29);
        java.lang.String str31 = annotatedElementSchema25.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = annotatedElementSchema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema25.writeOnly((java.lang.Boolean) true);
        schema36.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema36.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.additionalProperties(schema36);
        java.util.List<java.lang.String> strList42 = schema36.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(licenseOptional29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList42);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.Object obj3 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.xml(xML6);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        java.lang.String str20 = schema14.get$ref();
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        annotatedElementSchema15.setProperties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int26 = annotatedElementSchema15.getMaxLength();
        io.swagger.oas.models.media.Schema schema27 = schema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema0.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = annotatedElementSchema0.getProperties();
        java.lang.Boolean boolean28 = annotatedElementSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema11.setProperties(strMap14);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema11.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema32.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema37 = schema19.not(schema32);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setWriteOnly((java.lang.Boolean) false);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.externalDocs(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        java.lang.Boolean boolean21 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean24 = annotatedElementSchema23.getReadOnly();
        java.lang.Boolean boolean25 = annotatedElementSchema23.getNullable();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema23.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = annotatedElementSchema23.getDescription();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator42 = annotatedElementSchema34.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.minProperties((java.lang.Integer) 10);
        java.lang.String str52 = annotatedElementSchema44.getName();
        annotatedElementSchema23.setDefault((java.lang.Object) annotatedElementSchema44);
        java.lang.Integer int54 = annotatedElementSchema44.getMinItems();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema44.minItems((java.lang.Integer) 0);
        annotatedElementSchema44.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema44.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema9.type("default");
        schema9.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = schema9.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.xml(xML46);
        java.lang.String str48 = annotatedElementSchema11.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema11.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema50.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Class<?> wildcardClass53 = schema52.getClass();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "no description" + "'", str48, "no description");
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        annotatedElementSchema0.setDiscriminator(discriminator19);
        java.lang.Boolean boolean21 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.$ref("*/*");
        io.swagger.oas.annotations.info.Contact contact34 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional35 = io.swagger.jaxrs2.OperationParser.getContact(contact34);
        schema33.setDefault((java.lang.Object) contact34);
        java.lang.String str37 = schema33.getType();
        annotatedElementSchema0.setExample((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(contactOptional35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("hi!");
        java.lang.String str9 = schema6.getDescription();
        java.lang.Boolean boolean10 = schema6.getNullable();
        io.swagger.oas.models.media.Schema schema12 = schema6.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.maxProperties((java.lang.Integer) 0);
        schema15.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML18 = schema15.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML18);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema11.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxLength((java.lang.Integer) 1);
        schema16.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.$ref("*/*");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.minimum(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema19.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("");
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.maximum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema41.maxProperties((java.lang.Integer) 100);
        schema16.setExample((java.lang.Object) schema41);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "*/*" + "'", str37, "*/*");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator39 = annotatedElementSchema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema31.setMaxProperties((java.lang.Integer) 0);
        annotatedElementSchema31.setPattern("hi!");
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        io.swagger.oas.annotations.info.Contact contact51 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional52 = io.swagger.jaxrs2.OperationParser.getContact(contact51);
        annotatedElementSchema48.setExample((java.lang.Object) contactOptional52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.readOnly((java.lang.Boolean) false);
        java.lang.String str56 = annotatedElementSchema48.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema48.properties(strMap57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema48.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema48.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema48.maxLength((java.lang.Integer) 1);
        annotatedElementSchema31.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML66 = annotatedElementSchema31.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(contactOptional52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(xML66);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        schema10.setNullable((java.lang.Boolean) false);
        java.lang.Integer int13 = schema10.getMinLength();
        java.lang.String str14 = schema10.get$ref();
        java.lang.Object obj15 = schema10.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema9.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema9.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema9.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = schema15.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = schema20.getMinimum();
        java.lang.Boolean boolean24 = schema20.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        schema20.setDiscriminator(discriminator25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema27.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj42 = schema41.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal44 = null;
        annotatedElementSchema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList48 = annotatedElementSchema43.getEnum();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.description("hi!");
        java.lang.Object obj51 = schema50.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        io.swagger.oas.annotations.info.License license55 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional56 = io.swagger.jaxrs2.OperationParser.getLicense(license55);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema52.example((java.lang.Object) licenseOptional56);
        java.lang.String str58 = annotatedElementSchema52.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema52.getExternalDocs();
        annotatedElementSchema52.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema52.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema50.additionalProperties(schema63);
        java.lang.String[] strArray77 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema50.required((java.util.List<java.lang.String>) strList78);
        schema41.setRequired((java.util.List<java.lang.String>) strList78);
        schema20.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema0.discriminator(discriminator86);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(annotatedElementList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(licenseOptional56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema11.setProperties(strMap29);
        schema11.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.addProperties("default", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema36.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema17.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema51 = schema14.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema53 = schema51.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList59 = annotatedElementSchema54.getEnum();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.description("hi!");
        java.lang.Object obj62 = schema61.getExample();
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema61.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema51.additionalProperties(schema66);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema51.discriminator(discriminator68);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(annotatedElementList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.Integer int24 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = schema20.example((java.lang.Object) int24);
        io.swagger.oas.models.media.Schema schema27 = schema25.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        java.lang.String str13 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str16 = schema15.toString();
        schema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML19 = schema15.getXml();
        io.swagger.oas.models.media.Schema schema21 = schema15.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(xML19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        java.lang.String str8 = schema6.getFormat();
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema6.toString();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema6.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator14);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.lang.reflect.AnnotatedElement annotatedElement9 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.getNot();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        io.swagger.oas.annotations.info.License license16 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional17 = io.swagger.jaxrs2.OperationParser.getLicense(license16);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema13.example((java.lang.Object) licenseOptional17);
        java.lang.String str19 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = annotatedElementSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.deprecated((java.lang.Boolean) false);
        schema22.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema22.pattern("");
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean30 = annotatedElementSchema29.getReadOnly();
        java.lang.Boolean boolean31 = annotatedElementSchema29.getNullable();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = annotatedElementSchema29.getDescription();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.lang.Class<?> wildcardClass50 = annotatedElementSchema29.getClass();
        schema26.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass50);
        java.lang.String str52 = schema26.toString();
        java.lang.Integer int53 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema54 = schema12.example((java.lang.Object) schema26);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema26.getDiscriminator();
        java.util.List<java.lang.String> strList56 = schema26.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(annotatedElement9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(licenseOptional17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str52, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = annotatedElementSchema11.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema31 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema10.not(schema23);
        io.swagger.oas.models.media.Schema schema34 = schema23.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.minimum(bigDecimal35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema34.setExternalDocs(externalDocumentation37);
        java.math.BigDecimal bigDecimal39 = schema34.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = schema11.getName();
        io.swagger.oas.annotations.info.License license13 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional14 = io.swagger.jaxrs2.OperationParser.getLicense(license13);
        io.swagger.oas.models.media.Schema schema15 = schema11.example((java.lang.Object) licenseOptional14);
        io.swagger.oas.models.media.Schema schema17 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(licenseOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        java.lang.Integer int8 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        java.lang.Boolean boolean15 = schema12.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.externalDocs(externalDocumentation25);
        annotatedElementSchema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema12.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation29);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = schema12.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema12.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement28 = annotatedElementSchema18.getDefault();
        schema12.setDefault((java.lang.Object) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema31 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema56.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str60 = annotatedElementSchema59.getPattern();
        annotatedElementSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean63 = annotatedElementSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema59.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str67 = annotatedElementSchema66.getPattern();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema59.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema schema69 = schema58.not(schema68);
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.discriminator(discriminator70);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.properties(strMap78);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = annotatedElementSchema72.getExtensions();
        schema69.setExtensions(strMap80);
        schema48.setExtensions(strMap80);
        annotatedElementSchema32.setExtensions(strMap80);
        schema12.setExtensions(strMap80);
        java.math.BigDecimal bigDecimal85 = schema12.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(annotatedElement28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(bigDecimal85);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str50 = schema49.getType();
        io.swagger.oas.models.media.Schema schema52 = schema49.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation24);
        annotatedElementSchema0.set$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = annotatedElementSchema0.getExtensions();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.properties(strMap33);
        schema34.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema34.addProperties("hi!", schema38);
        java.lang.String[] strArray46 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional47 = io.swagger.jaxrs2.OperationParser.getTags(strArray46);
        io.swagger.oas.models.media.Schema schema48 = schema34.example((java.lang.Object) strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema12.addProperties("default", schema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal52 = null;
        annotatedElementSchema51.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean56 = schema55.getReadOnly();
        io.swagger.oas.models.media.Schema schema57 = schema34.addProperties("", schema55);
        schema57.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema57.exclusiveMinimum((java.lang.Boolean) false);
        schema57.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(tagSetOptional47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.nullable((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getType();
        io.swagger.oas.models.media.Schema schema31 = schema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getDescription();
        java.lang.Integer int12 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.externalDocs(externalDocumentation15);
        schema16.setMinItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal19 = null;
        schema16.setMultipleOf(bigDecimal19);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.properties(strMap51);
        schema52.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.addProperties("hi!", schema56);
        java.lang.String[] strArray64 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strArray64);
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema66.required(strList81);
        boolean boolean83 = schema43.equals((java.lang.Object) schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.properties(strMap84);
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema87.nullable((java.lang.Boolean) false);
        schema87.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str92 = schema87.getPattern();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        schema10.setPattern("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.externalDocs(externalDocumentation14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema18 = schema15.getNot();
        java.lang.String str19 = schema15.getDescription();
        java.lang.Boolean boolean20 = schema15.getDeprecated();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema25 = schema15.required((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema27 = schema25.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str28 = schema27.getFormat();
        java.lang.Boolean boolean29 = schema27.getUniqueItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        schema28.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        schema9.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema9.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.XML xML30 = null;
        schema29.setXml(xML30);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.XML xML30 = null;
        schema24.setXml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema24.minLength((java.lang.Integer) 1);
        schema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minLength((java.lang.Integer) 10);
        java.lang.String str46 = schema43.toString();
        java.lang.Integer int47 = schema43.getMaxProperties();
        java.lang.String str48 = schema43.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema49.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str57 = annotatedElementSchema56.getPattern();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema56);
        annotatedElementSchema56.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema56.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema56.pattern("");
        java.lang.Boolean boolean65 = schema64.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = schema43.not(schema64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str68 = annotatedElementSchema67.getPattern();
        annotatedElementSchema67.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean71 = annotatedElementSchema67.getWriteOnly();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema67.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema67.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema67.properties(strMap77);
        java.lang.Boolean boolean79 = schema78.getExclusiveMaximum();
        schema64.setExample((java.lang.Object) boolean79);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema64.discriminator(discriminator81);
        io.swagger.oas.models.media.Schema schema84 = schema82.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int85 = schema84.getMaxItems();
        io.swagger.oas.models.media.Schema schema86 = schema24.not(schema84);
        schema84.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + true + "'", boolean79, true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.lang.String[] strArray16 = new java.lang.String[] { "no description", "no description", "no description" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray16);
        schema9.setDefault((java.lang.Object) tagSetOptional17);
        java.lang.Integer int19 = schema9.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(tagSetOptional17);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str17 = annotatedElementSchema16.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema16.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema schema33 = schema19.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        java.lang.Integer int35 = schema33.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.maxLength((java.lang.Integer) 0);
        java.lang.String str70 = schema4.getDescription();
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: -1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str70, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser19 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema15.addExtension("no description", (java.lang.Object) operationParser19);
        annotatedElementSchema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        annotatedElementSchema15.setDiscriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.multipleOf(bigDecimal25);
        java.lang.Class<?> wildcardClass27 = schema26.getClass();
        schema14.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass27);
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.Boolean boolean33 = annotatedElementSchema31.getNullable();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.String str39 = annotatedElementSchema31.getDescription();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator50 = annotatedElementSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema31.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = annotatedElementSchema42.getProperties();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema42.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser59 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema55.addExtension("no description", (java.lang.Object) operationParser59);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema61.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        annotatedElementSchema61.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema55.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema42.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema72 = schema14.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema74 = schema72.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = annotatedElementSchema38.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.title("#/components/schemas/");
        schema37.setNot(schema48);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.maximum(bigDecimal52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema48.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        io.swagger.oas.annotations.info.Contact contact59 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional60 = io.swagger.jaxrs2.OperationParser.getContact(contact59);
        annotatedElementSchema56.setExample((java.lang.Object) contactOptional60);
        annotatedElementSchema56.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema56.type("");
        schema65.setMaxItems((java.lang.Integer) 100);
        schema65.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema65.minProperties((java.lang.Integer) 0);
        schema48.setExample((java.lang.Object) schema71);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(contactOptional60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        schema17.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) 1);
        schema16.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.lang.Boolean boolean30 = schema29.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean30 = annotatedElementSchema29.getReadOnly();
        java.lang.Boolean boolean31 = annotatedElementSchema29.getNullable();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = annotatedElementSchema29.getDescription();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = annotatedElementSchema40.getProperties();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser57 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema53.addExtension("no description", (java.lang.Object) operationParser57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema59.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema53.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList65);
        schema13.setRequired((java.util.List<java.lang.String>) strList65);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema13.multipleOf(bigDecimal71);
        schema13.setWriteOnly((java.lang.Boolean) false);
        schema13.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int77 = schema13.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int77);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema4.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        java.math.BigDecimal bigDecimal55 = schema52.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal55);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema27.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = annotatedElementSchema31.getExtensions();
        schema30.setExtensions(strMap37);
        annotatedElementSchema17.setExtensions(strMap37);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema17.minimum(bigDecimal40);
        boolean boolean42 = schema7.equals((java.lang.Object) bigDecimal40);
        java.lang.String str43 = schema7.getPattern();
        schema7.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema7.writeOnly((java.lang.Boolean) true);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema20.setFormat("*/*");
        annotatedElementSchema20.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str44 = annotatedElementSchema43.getPattern();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema36.not((io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        schema45.setTitle("#/components/schemas/");
        java.lang.Integer int48 = schema45.getMinLength();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema45.minimum(bigDecimal49);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList51 = schema50.getEnum();
        annotatedElementSchema20.setNot(schema50);
        io.swagger.oas.models.media.Schema schema54 = schema50.minLength((java.lang.Integer) (-1));
        schema14.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(annotatedElementList51);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = schema7.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema7.setExternalDocs(externalDocumentation14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema7.externalDocs(externalDocumentation16);
        java.lang.Object obj18 = schema17.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str18 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int29 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema8.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        annotatedElementSchema33.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema33.externalDocs(externalDocumentation45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema33.minimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema51.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = annotatedElementSchema51.getMinItems();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.minimum(bigDecimal61);
        annotatedElementSchema51.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema51.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean67 = annotatedElementSchema51.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema51.getDiscriminator();
        schema48.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        java.util.List<java.lang.String> strList70 = schema48.getRequired();
        io.swagger.oas.models.media.Schema schema72 = schema48.minLength((java.lang.Integer) 10);
        boolean boolean73 = schema8.equals((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema75 = schema8.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) (-1));
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 10);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.discriminator(discriminator23);
        io.swagger.oas.models.media.XML xML25 = annotatedElementSchema0.getXml();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(xML25);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        annotatedElementSchema14.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema14.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        annotatedElementSchema34.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.nullable((java.lang.Boolean) false);
        schema33.setDefault((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema34.discriminator(discriminator45);
        annotatedElementSchema14.setExample((java.lang.Object) annotatedElementSchema34);
        annotatedElementSchema14.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema14.minimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema53.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = schema33.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema33.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema33.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMinimum(bigDecimal39);
        schema38.setReadOnly((java.lang.Boolean) false);
        schema38.setMinLength((java.lang.Integer) 10);
        java.lang.Integer int45 = schema38.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema0.setMaximum(bigDecimal7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = annotatedElementSchema23.getEnum();
        annotatedElementSchema23.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = annotatedElementSchema31.getMinItems();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList44 = annotatedElementSchema23.getEnum();
        io.swagger.oas.models.media.XML xML45 = null;
        annotatedElementSchema23.setXml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList60 = schema59.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator61 = schema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema63 = schema59.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema23.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema65 = schema19.example((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema67.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema67.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(annotatedElementList44);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(annotatedElementList60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema26.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema7.setXml(xML34);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        java.lang.String str24 = annotatedElementSchema16.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser35 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema31.addExtension("no description", (java.lang.Object) operationParser35);
        annotatedElementSchema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        annotatedElementSchema31.setDiscriminator(discriminator39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.multipleOf(bigDecimal41);
        java.lang.Class<?> wildcardClass43 = schema42.getClass();
        schema30.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass43);
        annotatedElementSchema8.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass43);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean10 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema19.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        schema11.setDefault((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.type("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema36.name("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        schema50.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        java.lang.String str17 = schema16.toString();
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.math.BigDecimal bigDecimal40 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema schema42 = schema35.uniqueItems((java.lang.Boolean) true);
        schema42.setMaxLength((java.lang.Integer) (-1));
        schema42.setTitle("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        schema15.setFormat("*/*");
        schema15.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        java.math.BigDecimal bigDecimal28 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema schema29 = schema15.addProperties("no description", schema25);
        io.swagger.oas.models.media.Schema schema31 = schema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        annotatedElementSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = annotatedElementSchema32.getProperties();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        schema15.setMinProperties((java.lang.Integer) 1);
        schema15.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema15);
        java.lang.String str46 = schema45.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = annotatedElementSchema47.getMinProperties();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema47.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = annotatedElementSchema57.getMinProperties();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema47.example((java.lang.Object) schema66);
        io.swagger.oas.models.media.Schema schema68 = schema45.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema70 = schema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema48 = schema46.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema49.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.Integer int58 = annotatedElementSchema49.getMinItems();
        annotatedElementSchema49.setType("hi!");
        java.lang.Boolean boolean61 = annotatedElementSchema49.getNullable();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema49.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema63.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean66 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.properties(strMap74);
        java.lang.Object obj76 = annotatedElementSchema68.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = annotatedElementSchema68.getExtensions();
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap77);
        schema46.setAdditionalProperties(schema63);
        java.lang.String str80 = schema46.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + true + "'", boolean66, true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema47.minProperties((java.lang.Integer) 0);
        java.lang.Integer int50 = annotatedElementSchema47.getMinLength();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.properties(strMap58);
        java.lang.Object obj60 = annotatedElementSchema52.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = annotatedElementSchema52.getExtensions();
        annotatedElementSchema47.setExtensions(strMap61);
        annotatedElementSchema0.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean65 = annotatedElementSchema64.getReadOnly();
        java.lang.String str66 = annotatedElementSchema64.get$ref();
        io.swagger.oas.models.media.XML xML67 = null;
        annotatedElementSchema64.setXml(xML67);
        io.swagger.oas.models.media.XML xML69 = annotatedElementSchema64.getXml();
        java.lang.String str70 = annotatedElementSchema64.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        annotatedElementSchema64.setProperties(strMap71);
        java.math.BigDecimal bigDecimal73 = null;
        annotatedElementSchema64.setMultipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema64.minLength((java.lang.Integer) (-1));
        annotatedElementSchema64.setDescription("hi!");
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema82 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema82.setPattern("");
        io.swagger.oas.annotations.info.Contact contact85 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional86 = io.swagger.jaxrs2.OperationParser.getContact(contact85);
        annotatedElementSchema82.setExample((java.lang.Object) contactOptional86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema82.readOnly((java.lang.Boolean) false);
        java.lang.String str90 = annotatedElementSchema82.getType();
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema82.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean93 = schema92.getReadOnly();
        io.swagger.oas.models.media.Schema schema95 = schema92.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema95.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema98 = annotatedElementSchema0.additionalProperties(schema95);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(xML69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(contactOptional86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema20.getMinimum();
        java.math.BigDecimal bigDecimal26 = annotatedElementSchema20.getMultipleOf();
        schema17.setExample((java.lang.Object) annotatedElementSchema20);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = annotatedElementSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = annotatedElementSchema19.getWriteOnly();
        java.lang.String str32 = annotatedElementSchema19.getType();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.discriminator(discriminator33);
        schema7.setNot(schema34);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema7.setDiscriminator(discriminator36);
        java.lang.Integer int38 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = schema7.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema10.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        annotatedElementSchema23.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema23.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.addProperties("*/*", (io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema0.setDefault((java.lang.Object) "*/*");
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal48 = null;
        annotatedElementSchema0.setMaximum(bigDecimal48);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema4.additionalProperties(schema8);
        schema4.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = schema4.getMaximum();
        schema4.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema4.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema4.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        schema8.setDiscriminator(discriminator9);
        schema8.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        schema35.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema20.setAdditionalProperties(schema35);
        java.lang.Boolean boolean47 = schema35.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = annotatedElementSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = annotatedElementSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        java.lang.String str42 = annotatedElementSchema34.getName();
        annotatedElementSchema13.setDefault((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.xml(xML44);
        java.lang.String str46 = schema45.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.properties(strMap53);
        schema54.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema54.addProperties("hi!", schema58);
        java.lang.String[] strArray66 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional67 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        io.swagger.oas.models.media.Schema schema68 = schema54.example((java.lang.Object) strArray66);
        schema68.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema71.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        annotatedElementSchema71.setRequired((java.util.List<java.lang.String>) strList77);
        java.lang.Integer int80 = annotatedElementSchema71.getMinItems();
        annotatedElementSchema71.setType("hi!");
        java.util.List<java.lang.String> strList83 = annotatedElementSchema71.getRequired();
        io.swagger.oas.models.media.Schema schema84 = schema68.required(strList83);
        boolean boolean85 = schema45.equals((java.lang.Object) schema84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema12.properties(strMap86);
        schema12.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema91 = schema12.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(tagSetOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        java.util.List<java.lang.String> strList8 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int11 = annotatedElementSchema0.getMinItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema18.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema18.getTitle();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.math.BigDecimal bigDecimal8 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = schema4.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema4.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema13.setNullable((java.lang.Boolean) false);
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema26.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        java.lang.String[] strArray38 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional39 = io.swagger.jaxrs2.OperationParser.getTags(strArray38);
        schema34.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional39);
        java.math.BigDecimal bigDecimal41 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str44 = annotatedElementSchema43.getPattern();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema43.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema43.xml(xML47);
        io.swagger.oas.models.media.Schema schema49 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        java.math.BigDecimal bigDecimal50 = annotatedElementSchema43.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = annotatedElementSchema51.getMinProperties();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema51.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.$ref("*/*");
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema51.format("default");
        java.lang.Boolean boolean65 = schema64.getNullable();
        java.lang.Boolean boolean66 = schema64.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser71 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema67.addExtension("no description", (java.lang.Object) operationParser71);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        annotatedElementSchema73.setRequired((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema67.required((java.util.List<java.lang.String>) strList79);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.maximum(bigDecimal83);
        java.util.List<java.lang.String> strList85 = schema84.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema64.required(strList85);
        annotatedElementSchema43.setRequired(strList85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema13.required(strList85);
        io.swagger.oas.models.media.Schema schema89 = schema4.required(strList85);
        schema89.setTitle("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(tagSetOptional39);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        java.math.BigDecimal bigDecimal47 = schema4.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema4.externalDocs(externalDocumentation48);
        schema4.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        schema18.setDescription("#/components/schemas/");
        schema18.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.example((java.lang.Object) schema18);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.maximum(bigDecimal24);
        java.lang.String str26 = annotatedElementSchema0.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.properties(strMap51);
        schema52.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.addProperties("hi!", schema56);
        java.lang.String[] strArray64 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strArray64);
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema66.required(strList81);
        boolean boolean83 = schema43.equals((java.lang.Object) schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.properties(strMap84);
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema87.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        schema89.setExternalDocs(externalDocumentation90);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        schema22.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema22.$ref("default");
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.additionalProperties(schema37);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean41 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.xml(xML42);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.XML xML30 = null;
        schema24.setXml(xML30);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema24.maxItems((java.lang.Integer) 0);
        schema35.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        boolean boolean42 = annotatedElementSchema29.equals((java.lang.Object) annotatedElementSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation43);
        java.lang.String[] strArray46 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema28.required((java.util.List<java.lang.String>) strList47);
        schema8.setNot(schema28);
        io.swagger.oas.models.media.Schema schema52 = schema28.getAdditionalProperties();
        schema28.setNullable((java.lang.Boolean) false);
        java.lang.String str55 = schema28.getFormat();
        schema28.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal58 = null;
        schema28.setMaximum(bigDecimal58);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        schema28.setTitle("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema28.getExternalDocs();
        java.lang.String str32 = schema28.getPattern();
        java.util.List<java.lang.String> strList33 = schema28.getRequired();
        schema15.setRequired(strList33);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getExclusiveMinimum();
        java.lang.Boolean boolean18 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = annotatedElementSchema19.getWriteOnly();
        java.lang.String str32 = annotatedElementSchema19.getType();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.discriminator(discriminator33);
        schema7.setNot(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str49 = annotatedElementSchema48.getPattern();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = annotatedElementSchema52.getExtensions();
        schema51.setExtensions(strMap58);
        annotatedElementSchema38.setExtensions(strMap58);
        schema34.setExtensions(strMap58);
        java.lang.String str62 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema34.readOnly((java.lang.Boolean) false);
        schema34.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        java.math.BigDecimal bigDecimal24 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        io.swagger.oas.annotations.info.Contact contact28 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional29 = io.swagger.jaxrs2.OperationParser.getContact(contact28);
        annotatedElementSchema25.setExample((java.lang.Object) contactOptional29);
        annotatedElementSchema25.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.type("");
        schema34.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema37.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = annotatedElementSchema47.getMinProperties();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.maximum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.example((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        io.swagger.oas.annotations.info.Contact contact61 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional62 = io.swagger.jaxrs2.OperationParser.getContact(contact61);
        annotatedElementSchema58.setExample((java.lang.Object) contactOptional62);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean65 = annotatedElementSchema64.getReadOnly();
        java.lang.Boolean boolean66 = annotatedElementSchema64.getNullable();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        annotatedElementSchema64.setRequired((java.util.List<java.lang.String>) strList69);
        java.lang.String str72 = annotatedElementSchema64.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int78 = annotatedElementSchema73.getMinProperties();
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray84 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = schema80.required((java.util.List<java.lang.String>) strList85);
        annotatedElementSchema64.setDefault((java.lang.Object) strList85);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema58.required((java.util.List<java.lang.String>) strList85);
        schema57.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema91 = schema34.required((java.util.List<java.lang.String>) strList85);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList85);
        java.lang.reflect.AnnotatedElement annotatedElement93 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema95 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(contactOptional29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(contactOptional62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(annotatedElement93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema11.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 10);
        java.lang.String str27 = schema26.getType();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema26.getExtensions();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.xml(xML15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.maximum(bigDecimal17);
        java.lang.Boolean boolean19 = schema18.getNullable();
        schema18.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema12.setNullable((java.lang.Boolean) false);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema12.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean49 = annotatedElementSchema48.getReadOnly();
        java.lang.Boolean boolean50 = annotatedElementSchema48.getNullable();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList53);
        java.math.BigDecimal bigDecimal56 = annotatedElementSchema48.getMultipleOf();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema48.maxProperties((java.lang.Integer) 0);
        java.lang.String str59 = annotatedElementSchema48.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.properties(strMap66);
        io.swagger.oas.models.media.Schema schema69 = schema67.minLength((java.lang.Integer) 10);
        schema69.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator72 = schema69.getDiscriminator();
        schema69.setType("#/components/schemas/");
        java.lang.String str75 = schema69.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema77.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema77.setNullable((java.lang.Boolean) false);
        annotatedElementSchema77.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema77.minItems((java.lang.Integer) 0);
        java.lang.String str90 = schema89.getType();
        io.swagger.oas.models.media.XML xML91 = null;
        schema89.setXml(xML91);
        io.swagger.oas.models.media.Schema schema93 = schema69.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema95 = annotatedElementSchema48.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema47.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema7.properties(strMap94);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation98 = schema7.getExternalDocs();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(externalDocumentation98);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("*/*");
        java.lang.String str25 = schema24.getPattern();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.minimum(bigDecimal26);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMaximum(bigDecimal28);
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        java.lang.String str9 = schema4.getDescription();
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        schema15.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.math.BigDecimal bigDecimal19 = null;
        schema15.setMultipleOf(bigDecimal19);
        java.math.BigDecimal bigDecimal21 = null;
        schema15.setMaximum(bigDecimal21);
        schema4.setDefault((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema schema25 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        io.swagger.oas.annotations.info.Contact contact29 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional30 = io.swagger.jaxrs2.OperationParser.getContact(contact29);
        annotatedElementSchema26.setExample((java.lang.Object) contactOptional30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.readOnly((java.lang.Boolean) false);
        java.lang.String str34 = annotatedElementSchema26.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.properties(strMap35);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema26.discriminator(discriminator37);
        java.lang.Integer int39 = annotatedElementSchema26.getMaxProperties();
        boolean boolean40 = schema4.equals((java.lang.Object) int39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(contactOptional30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema45.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal52 = null;
        annotatedElementSchema51.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList56 = annotatedElementSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.description("hi!");
        java.lang.Object obj59 = schema58.getExample();
        io.swagger.oas.models.media.Schema schema61 = schema58.nullable((java.lang.Boolean) false);
        schema61.setNullable((java.lang.Boolean) false);
        java.lang.Integer int64 = schema61.getMinLength();
        io.swagger.oas.models.media.Schema schema65 = schema49.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(annotatedElementList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.properties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.String str34 = annotatedElementSchema32.get$ref();
        io.swagger.oas.models.media.XML xML35 = null;
        annotatedElementSchema32.setXml(xML35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = annotatedElementSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.minimum(bigDecimal50);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList52 = schema51.getEnum();
        schema39.setNot(schema51);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema39.maximum(bigDecimal54);
        schema31.setDefault((java.lang.Object) schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema55.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal61 = schema55.getMaximum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(annotatedElementList52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        schema5.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str15 = annotatedElementSchema8.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = annotatedElementSchema16.getMinItems();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.minimum(bigDecimal26);
        annotatedElementSchema16.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass30 = annotatedElementSchema16.getClass();
        annotatedElementSchema8.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        schema5.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        annotatedElementSchema33.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema33.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser51 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema47.addExtension("no description", (java.lang.Object) operationParser51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema53.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema47.required((java.util.List<java.lang.String>) strList59);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        annotatedElementSchema33.setProperties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema33.nullable((java.lang.Boolean) false);
        boolean boolean68 = schema5.equals((java.lang.Object) schema67);
        java.lang.Boolean boolean69 = schema67.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str11 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema12.setNullable((java.lang.Boolean) false);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema12.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.discriminator(discriminator46);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema0.additionalProperties(schema45);
        java.lang.Integer int49 = schema48.getMaxProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int5 = schema4.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema4.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj10 = schema7.getExample();
        io.swagger.oas.models.media.XML xML11 = null;
        schema7.setXml(xML11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces41, produces42, components43);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(contentOptional40);
        org.junit.Assert.assertNotNull(contentOptional44);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray34 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema30.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema12.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.example((java.lang.Object) strList35);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str42 = schema41.get$ref();
        java.lang.String str43 = schema41.getType();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.License license22 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional23 = io.swagger.jaxrs2.OperationParser.getLicense(license22);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema19.example((java.lang.Object) licenseOptional23);
        java.lang.String str25 = annotatedElementSchema19.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = annotatedElementSchema19.getExternalDocs();
        annotatedElementSchema19.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.properties(strMap41);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = schema44.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema47.pattern("hi!");
        schema56.setMinProperties((java.lang.Integer) 10);
        schema44.addExtension("*/*", (java.lang.Object) schema56);
        schema30.setDefault((java.lang.Object) schema56);
        schema17.setDefault((java.lang.Object) schema56);
        java.lang.Integer int62 = schema17.getMinLength();
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(licenseOptional23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.lang.String str12 = annotatedElementSchema0.getDescription();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minimum(bigDecimal13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema37 = schema35.format("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.getDescription();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray0 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap1 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap2 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap3 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray0);
        org.junit.Assert.assertNotNull(linkParameterArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema13.setNullable((java.lang.Boolean) false);
        annotatedElementSchema13.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        schema29.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator32 = schema29.getDiscriminator();
        java.math.BigDecimal bigDecimal33 = null;
        schema29.setMultipleOf(bigDecimal33);
        java.lang.String str35 = schema29.getName();
        io.swagger.oas.models.media.Schema schema37 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema13.additionalProperties(schema39);
        java.lang.String str41 = annotatedElementSchema13.getPattern();
        schema12.setExample((java.lang.Object) annotatedElementSchema13);
        java.math.BigDecimal bigDecimal43 = null;
        schema12.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema12.getDiscriminator();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(discriminator45);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema10.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        annotatedElementSchema23.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema23.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.addProperties("*/*", (io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema0.setDefault((java.lang.Object) "*/*");
        java.lang.String str43 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) 1);
        schema47.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        annotatedElementSchema14.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML26 = schema25.getXml();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal30 = schema27.getMaximum();
        io.swagger.oas.models.media.Schema schema32 = schema27.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int33 = schema27.getMaxItems();
        java.lang.Boolean boolean34 = schema27.getNullable();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema0.getName();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minLength((java.lang.Integer) 10);
        boolean boolean16 = annotatedElementSchema0.equals((java.lang.Object) 10);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.pattern("no description");
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.readOnly((java.lang.Boolean) false);
        java.lang.String str42 = annotatedElementSchema34.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema34.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema34.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema34.deprecated((java.lang.Boolean) true);
        annotatedElementSchema34.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML51 = null;
        annotatedElementSchema34.setXml(xML51);
        io.swagger.oas.models.media.Schema schema53 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        schema58.setFormat("*/*");
        schema58.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal65 = null;
        annotatedElementSchema64.setMultipleOf(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema64.minProperties((java.lang.Integer) 0);
        schema68.setFormat("*/*");
        java.math.BigDecimal bigDecimal71 = schema68.getMinimum();
        io.swagger.oas.models.media.Schema schema72 = schema58.addProperties("no description", schema68);
        schema31.setAdditionalProperties(schema72);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema74.setPattern("");
        io.swagger.oas.annotations.info.Contact contact77 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional78 = io.swagger.jaxrs2.OperationParser.getContact(contact77);
        annotatedElementSchema74.setExample((java.lang.Object) contactOptional78);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.readOnly((java.lang.Boolean) false);
        java.lang.String str82 = annotatedElementSchema74.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema74.properties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema74.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema74.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema74.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema91 = schema31.example((java.lang.Object) annotatedElementSchema74);
        java.math.BigDecimal bigDecimal92 = schema91.getMaximum();
        io.swagger.oas.models.media.Schema schema94 = schema91.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = annotatedElementSchema0.addProperties("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema94);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(contactOptional78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(bigDecimal92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.reflect.AnnotatedElement annotatedElement13 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema15.setMultipleOf(bigDecimal23);
        annotatedElementSchema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.name("hi!");
        java.lang.Object obj31 = schema30.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema33.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema41.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.readOnly((java.lang.Boolean) true);
        java.lang.Integer int48 = schema45.getMaxItems();
        io.swagger.oas.models.media.Schema schema49 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.example((java.lang.Object) schema30);
        java.lang.String str51 = schema50.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema50.getExtensions();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElement13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(strMap52);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema50 = schema17.getNot();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema50.setDiscriminator(discriminator51);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        java.lang.Integer int55 = schema54.getMaxProperties();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) false);
        java.lang.Integer int25 = schema20.getMaxItems();
        java.lang.String str26 = schema20.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean31 = annotatedElementSchema0.equals((java.lang.Object) true);
        java.lang.Boolean boolean32 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema0.maxLength((java.lang.Integer) 100);
        annotatedElementSchema0.setTitle("default");
        java.lang.Boolean boolean39 = annotatedElementSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = annotatedElementSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema34.getExtensions();
        schema33.setExtensions(strMap40);
        annotatedElementSchema20.setExtensions(strMap40);
        schema17.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema45 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema17.minLength((java.lang.Integer) 1);
        java.lang.Integer int48 = schema17.getMinProperties();
        schema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = schema17.getReadOnly();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("#/components/schemas/");
        java.math.BigDecimal bigDecimal13 = null;
        schema10.setMultipleOf(bigDecimal13);
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema13.discriminator(discriminator19);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        schema13.setMaximum(bigDecimal23);
        java.lang.Integer int25 = schema13.getMinProperties();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str15 = schema8.getName();
        io.swagger.oas.models.media.Schema schema17 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = annotatedElementSchema18.getExtensions();
        java.lang.String str31 = annotatedElementSchema18.getName();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema33.minLength((java.lang.Integer) 100);
        schema8.setExample((java.lang.Object) 100);
        java.lang.Boolean boolean37 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema schema39 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass40 = schema8.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        java.lang.String str32 = schema29.getDescription();
        io.swagger.oas.models.media.Schema schema34 = schema29.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.maximum(bigDecimal35);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = schema34.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = annotatedElementSchema11.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema31 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema10.not(schema23);
        java.lang.String str33 = schema10.getDescription();
        io.swagger.oas.models.media.Schema schema35 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        schema35.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.multipleOf(bigDecimal38);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema12.getExtensions();
        schema11.setExtensions(strMap20);
        java.lang.Integer int22 = schema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = schema11.deprecated((java.lang.Boolean) true);
        schema24.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema27.setFormat("*/*");
        annotatedElementSchema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str37 = annotatedElementSchema27.toString();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.description("*/*");
        annotatedElementSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        annotatedElementSchema27.setExternalDocs(externalDocumentation42);
        annotatedElementSchema27.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema24.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.minimum(bigDecimal47);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList49 = schema48.getEnum();
        java.math.BigDecimal bigDecimal50 = null;
        schema48.setMinimum(bigDecimal50);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(annotatedElementList49);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = schema10.minItems((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getTitle();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.Integer int24 = schema9.getMinProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        schema9.setXml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = schema9.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.not(schema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema29.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 0);
        schema42.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal48 = null;
        annotatedElementSchema47.setMultipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema47.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema53 = schema51.maxItems((java.lang.Integer) (-1));
        schema42.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema42.multipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema42.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema42.minimum(bigDecimal59);
        java.lang.Integer int61 = schema42.getMaxItems();
        schema27.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) int61);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        schema25.setName("#/components/schemas/no description");
        java.lang.Boolean boolean30 = schema25.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxItems((java.lang.Integer) (-1));
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema50.minProperties((java.lang.Integer) 0);
        java.lang.Integer int53 = annotatedElementSchema50.getMaxItems();
        java.lang.Integer int54 = annotatedElementSchema50.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        java.lang.reflect.AnnotatedElement annotatedElement76 = annotatedElementSchema55.getDefault();
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema55.minimum(bigDecimal77);
        annotatedElementSchema50.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema55);
        java.lang.String str80 = annotatedElementSchema55.getPattern();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema55.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema55.maximum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema85 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema55);
        schema32.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema55);
        java.lang.Integer int87 = annotatedElementSchema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean90 = schema89.getDeprecated();
        io.swagger.oas.models.media.Schema schema92 = schema89.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(annotatedElement76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.String str29 = annotatedElementSchema27.get$ref();
        io.swagger.oas.models.media.XML xML30 = null;
        annotatedElementSchema27.setXml(xML30);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema27.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = annotatedElementSchema27.getProperties();
        annotatedElementSchema27.setMaxLength((java.lang.Integer) 0);
        annotatedElementSchema27.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema27.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema27.externalDocs(externalDocumentation41);
        schema26.setNot(schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML48 = schema47.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(xML48);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal6 = null;
        annotatedElementSchema5.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.description("hi!");
        java.lang.Object obj13 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema15 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("");
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema50 = schema4.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema50.setExternalDocs(externalDocumentation51);
        java.math.BigDecimal bigDecimal53 = schema50.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal53);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema11.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxLength((java.lang.Integer) 1);
        schema16.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator39 = annotatedElementSchema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.minProperties((java.lang.Integer) 10);
        java.lang.String str49 = annotatedElementSchema41.getName();
        annotatedElementSchema20.setDefault((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.xml(xML51);
        java.lang.String str53 = schema52.getFormat();
        schema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean58 = annotatedElementSchema57.getReadOnly();
        java.lang.Boolean boolean59 = annotatedElementSchema57.getNullable();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema57.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.String str65 = annotatedElementSchema57.getDescription();
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema57.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator76 = annotatedElementSchema68.getDiscriminator();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema57.not((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema68.setMaxProperties((java.lang.Integer) 0);
        schema52.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema68);
        io.swagger.oas.models.media.Schema schema84 = schema52.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema85 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema85.setPattern("");
        annotatedElementSchema85.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int90 = annotatedElementSchema85.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = annotatedElementSchema85.getExternalDocs();
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema85.writeOnly((java.lang.Boolean) false);
        schema52.setExample((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema96 = schema52.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema98 = schema96.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema99 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema96);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(discriminator76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int90);
        org.junit.Assert.assertNull(externalDocumentation91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        schema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.addProperties("hi!", schema45);
        java.lang.String[] strArray53 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional54 = io.swagger.jaxrs2.OperationParser.getTags(strArray53);
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) strArray53);
        schema55.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema58.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = annotatedElementSchema58.getMinItems();
        annotatedElementSchema58.setType("hi!");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema58.getRequired();
        io.swagger.oas.models.media.Schema schema71 = schema55.required(strList70);
        boolean boolean72 = schema32.equals((java.lang.Object) schema71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema71.getProperties();
        schema71.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean76 = schema71.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema78 = schema71.minLength((java.lang.Integer) 1);
        schema71.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(tagSetOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        schema19.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema31 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema33 = schema7.name("");
        io.swagger.oas.models.media.Schema schema35 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean37 = annotatedElementSchema36.getReadOnly();
        java.lang.String str38 = annotatedElementSchema36.get$ref();
        io.swagger.oas.models.media.XML xML39 = null;
        annotatedElementSchema36.setXml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = annotatedElementSchema36.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        io.swagger.oas.models.media.Schema schema45 = schema35.not(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema43.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        java.lang.Boolean boolean10 = schema7.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMaximum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        schema20.setMinLength((java.lang.Integer) 10);
        java.lang.Integer int25 = schema20.getMaxProperties();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema20.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema7.additionalProperties(schema27);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.License license15 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional16 = io.swagger.jaxrs2.OperationParser.getLicense(license15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema12.example((java.lang.Object) licenseOptional16);
        java.lang.String str18 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.deprecated((java.lang.Boolean) false);
        schema21.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("");
        java.lang.Integer int26 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.description("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.String str42 = annotatedElementSchema36.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema36.getExternalDocs();
        annotatedElementSchema36.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema34.additionalProperties(schema47);
        schema25.setNot(schema47);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = null;
        schema25.setEnum(annotatedElementList50);
        schema25.setUniqueItems((java.lang.Boolean) false);
        boolean boolean54 = schema6.equals((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema56 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema6.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema6.externalDocs(externalDocumentation59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema6.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(licenseOptional16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema16.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean24 = annotatedElementSchema23.getReadOnly();
        java.lang.String str25 = annotatedElementSchema23.get$ref();
        io.swagger.oas.models.media.XML xML26 = null;
        annotatedElementSchema23.setXml(xML26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema23.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = annotatedElementSchema23.getProperties();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.pattern("no description");
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        schema33.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str19 = schema18.getDescription();
        schema18.setType("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setDefault((java.lang.Object) false);
        io.swagger.oas.models.media.XML xML17 = annotatedElementSchema0.getXml();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) (-1));
        schema26.setMinItems((java.lang.Integer) 0);
        schema26.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema26.setDiscriminator(discriminator31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema26.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.setReadOnly((java.lang.Boolean) false);
        boolean boolean11 = annotatedElementSchema0.equals((java.lang.Object) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = schema15.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator17 = schema15.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNull(discriminator17);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not(schema34);
        schema8.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema38 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.properties(strMap51);
        schema52.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.addProperties("hi!", schema56);
        java.lang.String[] strArray64 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional65 = io.swagger.jaxrs2.OperationParser.getTags(strArray64);
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strArray64);
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        annotatedElementSchema69.setRequired((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int78 = annotatedElementSchema69.getMinItems();
        annotatedElementSchema69.setType("hi!");
        java.util.List<java.lang.String> strList81 = annotatedElementSchema69.getRequired();
        io.swagger.oas.models.media.Schema schema82 = schema66.required(strList81);
        boolean boolean83 = schema43.equals((java.lang.Object) schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.properties(strMap84);
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) true);
        java.lang.String str88 = schema87.getTitle();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(tagSetOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setNot(schema26);
        java.math.BigDecimal bigDecimal30 = schema26.getMaximum();
        java.lang.Boolean boolean31 = schema26.getWriteOnly();
        schema26.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema41.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str52 = annotatedElementSchema51.getPattern();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema schema54 = schema43.not(schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = schema54.getExternalDocs();
        java.lang.String str56 = schema54.getFormat();
        java.lang.String str57 = schema54.getName();
        io.swagger.oas.models.media.Schema schema58 = schema26.additionalProperties(schema54);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 10);
        java.lang.String str42 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema21.addProperties("", schema41);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        annotatedElementSchema21.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema21.getDiscriminator();
        annotatedElementSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean52 = annotatedElementSchema51.getReadOnly();
        java.lang.Boolean boolean53 = annotatedElementSchema51.getNullable();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        annotatedElementSchema51.setRequired((java.util.List<java.lang.String>) strList56);
        java.lang.String str59 = annotatedElementSchema51.getDescription();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema51.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator70 = annotatedElementSchema62.getDiscriminator();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema51.not((io.swagger.oas.models.media.Schema) annotatedElementSchema62);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.minProperties((java.lang.Integer) 10);
        java.lang.String str80 = annotatedElementSchema72.getName();
        annotatedElementSchema51.setDefault((java.lang.Object) annotatedElementSchema72);
        io.swagger.oas.models.media.Schema schema82 = null;
        annotatedElementSchema51.setNot(schema82);
        java.math.BigDecimal bigDecimal84 = null;
        annotatedElementSchema51.setMinimum(bigDecimal84);
        io.swagger.oas.models.media.XML xML86 = null;
        annotatedElementSchema51.setXml(xML86);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema51.minimum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema91 = schema89.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema21.not(schema89);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minimum(bigDecimal13);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.$ref("*/*");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema17.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema17.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = annotatedElementSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema33.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str44 = annotatedElementSchema43.getPattern();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema43.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = annotatedElementSchema47.getExtensions();
        schema46.setExtensions(strMap53);
        annotatedElementSchema33.setExtensions(strMap53);
        schema32.setExtensions(strMap53);
        schema16.setExtensions(strMap53);
        annotatedElementSchema0.setExtensions(strMap53);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int61 = schema60.getMaxItems();
        java.lang.Object obj62 = schema60.getExample();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList63 = schema60.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(annotatedElementList63);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) false);
        schema16.setAdditionalProperties(schema44);
        java.math.BigDecimal bigDecimal48 = null;
        schema44.setMultipleOf(bigDecimal48);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.pattern("");
        java.lang.Integer int16 = annotatedElementSchema7.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema7.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema20.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema50 = schema48.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema51.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = annotatedElementSchema51.getMinItems();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.minimum(bigDecimal61);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList63 = schema62.getEnum();
        io.swagger.oas.models.media.Schema schema65 = schema62.maxLength((java.lang.Integer) (-1));
        java.lang.String str66 = schema62.getTitle();
        io.swagger.oas.models.media.Schema schema68 = schema62.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setExample((java.lang.Object) schema62);
        schema62.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(annotatedElementList63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = annotatedElementSchema14.getDescription();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator33 = annotatedElementSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        java.lang.String str43 = annotatedElementSchema35.getName();
        annotatedElementSchema14.setDefault((java.lang.Object) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema45 = null;
        annotatedElementSchema14.setNot(schema45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema14.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList49 = annotatedElementSchema14.getRequired();
        schema11.setRequired(strList49);
        schema11.setReadOnly((java.lang.Boolean) true);
        java.lang.String str53 = schema11.getType();
        java.lang.Class<?> wildcardClass54 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.lang.String str10 = schema4.getName();
        io.swagger.oas.models.media.Schema schema12 = schema4.writeOnly((java.lang.Boolean) false);
        java.lang.String str13 = schema4.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema13.getNot();
        java.lang.Boolean boolean18 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.type("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema12.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        java.lang.String str18 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.title("");
        java.lang.String str29 = schema24.getTitle();
        java.lang.Boolean boolean30 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        annotatedElementSchema31.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema31.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema31.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        annotatedElementSchema50.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema50.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema50.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema50.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema31.required((java.util.List<java.lang.String>) strList61);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList65 = annotatedElementSchema31.getEnum();
        io.swagger.oas.models.media.XML xML66 = annotatedElementSchema31.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema67.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema67.pattern("hi!");
        schema76.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = schema76.getAdditionalProperties();
        boolean boolean80 = annotatedElementSchema31.equals((java.lang.Object) schema76);
        schema24.setNot(schema76);
        java.lang.String str82 = schema76.getName();
        boolean boolean83 = annotatedElementSchema0.equals((java.lang.Object) schema76);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(annotatedElementList65);
        org.junit.Assert.assertNull(xML66);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int11 = annotatedElementSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema6.example((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean34 = annotatedElementSchema33.getReadOnly();
        java.lang.Boolean boolean35 = annotatedElementSchema33.getNullable();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.String str41 = annotatedElementSchema33.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = annotatedElementSchema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray53 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        io.swagger.oas.models.media.Schema schema56 = schema49.required((java.util.List<java.lang.String>) strList54);
        annotatedElementSchema33.setDefault((java.lang.Object) strList54);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema27.required((java.util.List<java.lang.String>) strList54);
        schema26.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema0.not(schema26);
        io.swagger.oas.models.media.Schema schema62 = schema26.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema26.minimum(bigDecimal63);
        java.lang.String str65 = schema64.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        java.lang.Integer int16 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.discriminator(discriminator17);
        java.lang.Integer int19 = schema18.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Integer int12 = schema7.getMaxProperties();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema14.setDiscriminator(discriminator15);
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        schema14.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal28);
        java.lang.String str30 = annotatedElementSchema23.getName();
        io.swagger.oas.models.media.Schema schema31 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        java.lang.Boolean boolean32 = annotatedElementSchema23.getWriteOnly();
        java.lang.Boolean boolean33 = annotatedElementSchema23.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(schema34);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.media.XML xML24 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.License license25 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional26 = io.swagger.jaxrs2.OperationParser.getLicense(license25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.example((java.lang.Object) licenseOptional26);
        java.lang.String str28 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema22.getExternalDocs();
        annotatedElementSchema22.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema36 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Schema schema26 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        schema28.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal32 = null;
        annotatedElementSchema31.setMultipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        schema35.setFormat("*/*");
        schema35.setUniqueItems((java.lang.Boolean) true);
        java.lang.Object obj40 = schema35.getExample();
        schema28.setNot(schema35);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema28.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema28.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.xml(xML46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        java.lang.String str27 = annotatedElementSchema19.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = schema31.getEnum();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = annotatedElementSchema37.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.discriminator(discriminator44);
        io.swagger.oas.models.media.Schema schema46 = schema34.not(schema45);
        java.math.BigDecimal bigDecimal47 = schema34.getMaximum();
        java.lang.Class<?> wildcardClass48 = schema34.getClass();
        schema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass48);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        schema5.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str15 = annotatedElementSchema8.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = annotatedElementSchema16.getMinItems();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.minimum(bigDecimal26);
        annotatedElementSchema16.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass30 = annotatedElementSchema16.getClass();
        annotatedElementSchema8.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        schema5.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        annotatedElementSchema33.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema33.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser51 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema47.addExtension("no description", (java.lang.Object) operationParser51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema53.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema47.required((java.util.List<java.lang.String>) strList59);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        annotatedElementSchema33.setProperties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema33.nullable((java.lang.Boolean) false);
        boolean boolean68 = schema5.equals((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema69.setPattern("");
        annotatedElementSchema69.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int74 = annotatedElementSchema69.getMinProperties();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.name("");
        java.lang.String str79 = schema78.getType();
        schema5.setExample((java.lang.Object) str79);
        io.swagger.oas.models.media.Schema schema81 = schema5.getAdditionalProperties();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(schema81);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str15 = schema14.getPattern();
        java.lang.Integer int16 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.reflect.AnnotatedElement annotatedElement39 = annotatedElementSchema18.getDefault();
        annotatedElementSchema18.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        annotatedElementSchema18.setExternalDocs(externalDocumentation42);
        annotatedElementSchema18.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema46 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema47.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema47.setRequired((java.util.List<java.lang.String>) strList53);
        java.lang.Integer int56 = annotatedElementSchema47.getMinItems();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema47.minimum(bigDecimal57);
        annotatedElementSchema47.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema47.addRequiredItem("#/components/schemas/");
        java.lang.String str63 = annotatedElementSchema47.getType();
        java.math.BigDecimal bigDecimal64 = null;
        annotatedElementSchema47.setMaximum(bigDecimal64);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema47.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator76 = annotatedElementSchema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema77.properties(strMap83);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema68.not((io.swagger.oas.models.media.Schema) annotatedElementSchema77);
        java.math.BigDecimal bigDecimal86 = null;
        annotatedElementSchema68.setMinimum(bigDecimal86);
        annotatedElementSchema68.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema90 = schema67.not((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = schema90.getExternalDocs();
        io.swagger.oas.models.media.Schema schema92 = schema14.example((java.lang.Object) externalDocumentation91);
        java.math.BigDecimal bigDecimal93 = null;
        schema14.setMaximum(bigDecimal93);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(annotatedElement39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(discriminator76);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(externalDocumentation91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema13.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser43 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema39.addExtension("no description", (java.lang.Object) operationParser43);
        annotatedElementSchema39.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        annotatedElementSchema39.setDiscriminator(discriminator47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.multipleOf(bigDecimal49);
        schema50.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.xml(xML61);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema63.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        annotatedElementSchema63.setRequired((java.util.List<java.lang.String>) strList69);
        java.lang.Integer int72 = annotatedElementSchema63.getMinItems();
        annotatedElementSchema63.setType("hi!");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema63.getRequired();
        io.swagger.oas.models.media.Schema schema76 = schema62.required(strList75);
        schema50.setRequired(strList75);
        schema38.setRequired(strList75);
        java.lang.Class<?> wildcardClass79 = schema38.getClass();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema15.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema24.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = annotatedElementSchema44.getMinProperties();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray55 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema51.required((java.util.List<java.lang.String>) strList56);
        annotatedElementSchema35.setDefault((java.lang.Object) strList56);
        io.swagger.oas.models.media.Schema schema60 = schema32.required((java.util.List<java.lang.String>) strList56);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema62 = schema13.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema64 = schema13.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.discriminator(discriminator65);
        io.swagger.oas.models.media.Schema schema68 = schema66.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean69 = schema66.getReadOnly();
        java.lang.Integer int70 = schema66.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.lang.String str37 = schema15.getDescription();
        schema15.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema41 = schema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int34 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema36 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema41.title("");
        io.swagger.oas.models.media.Schema schema47 = schema45.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = schema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema51 = schema11.example((java.lang.Object) externalDocumentation50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema52.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema52.setNullable((java.lang.Boolean) false);
        annotatedElementSchema52.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema52.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema52.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema52.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema52.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema71.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema71.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema71.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema52.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema52.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema87.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema90 = schema51.example((java.lang.Object) schema89);
        java.lang.String str91 = schema51.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        java.lang.String str9 = schema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema7.setProperties(strMap10);
        schema7.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getNot();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = annotatedElementSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal20 = null;
        annotatedElementSchema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.minProperties((java.lang.Integer) 0);
        schema23.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMultipleOf(bigDecimal27);
        annotatedElementSchema0.setNot(schema23);
        java.lang.String str30 = schema23.getTitle();
        schema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.multipleOf(bigDecimal33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        schema9.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema9.getUniqueItems();
        java.lang.Object obj18 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = annotatedElementSchema19.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema19.discriminator(discriminator26);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) false);
        schema27.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal37 = annotatedElementSchema32.getMultipleOf();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.format("default");
        schema39.setDeprecated((java.lang.Boolean) false);
        java.lang.String str42 = schema39.toString();
        io.swagger.oas.models.media.Schema schema43 = schema27.example((java.lang.Object) str42);
        io.swagger.oas.models.media.Schema schema45 = schema27.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        schema9.setExtensions(strMap46);
        io.swagger.oas.models.media.Discriminator discriminator48 = schema9.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(discriminator48);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema10.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        annotatedElementSchema23.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema23.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.addProperties("*/*", (io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema0.setDefault((java.lang.Object) "*/*");
        java.lang.String str43 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.lang.String str46 = annotatedElementSchema0.getFormat();
        java.lang.String str47 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        annotatedElementSchema0.setDiscriminator(discriminator48);
        java.lang.String str50 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema5.exclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema5.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema5.xml(xML35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema36.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        java.lang.Object obj20 = schema19.getExample();
        schema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean39 = annotatedElementSchema38.getReadOnly();
        java.lang.Boolean boolean40 = annotatedElementSchema38.getNullable();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        annotatedElementSchema38.setRequired((java.util.List<java.lang.String>) strList43);
        java.lang.String str46 = annotatedElementSchema38.getDescription();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema38.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator57 = annotatedElementSchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema38.not((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema49.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema49.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.properties(strMap78);
        io.swagger.oas.models.media.Schema schema81 = schema79.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema65.not(schema79);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema79.getExtensions();
        schema64.setExtensions(strMap83);
        annotatedElementSchema22.setExtensions(strMap83);
        java.lang.Boolean boolean86 = annotatedElementSchema22.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(boolean86);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 10);
        java.lang.String str42 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema21.addProperties("", schema41);
        schema43.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        schema10.setPattern("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema10.setExternalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema10.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema18.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.externalDocs(externalDocumentation13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema14.getProperties();
        java.lang.String str16 = schema14.getTitle();
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        schema41.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal48 = null;
        annotatedElementSchema47.setMultipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema47.minProperties((java.lang.Integer) 0);
        schema51.setFormat("*/*");
        java.math.BigDecimal bigDecimal54 = schema51.getMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema41.addProperties("no description", schema51);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.maximum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema57.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        schema57.setDiscriminator(discriminator60);
        io.swagger.oas.models.media.Schema schema62 = schema36.not(schema57);
        io.swagger.oas.models.media.Schema schema64 = schema57.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = schema57.getExtensions();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        javax.ws.rs.Produces produces7 = null;
        javax.ws.rs.Produces produces8 = null;
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces7, produces8, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema29.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = schema29.minItems((java.lang.Integer) 100);
        java.lang.Integer int35 = schema34.getMinLength();
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema22.type("#/components/schemas/class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema8.setMaxProperties((java.lang.Integer) 0);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema8.getNullable();
        java.lang.Boolean boolean14 = schema8.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema8.getExtensions();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.XML xML8 = schema4.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = schema4.getProperties();
        java.math.BigDecimal bigDecimal10 = schema4.getMinimum();
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) (-1));
        schema12.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema12.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(xML8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema4.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean70 = schema69.getUniqueItems();
        io.swagger.oas.models.media.Schema schema72 = schema69.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        java.lang.String str17 = schema9.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        schema32.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal65 = schema32.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema32.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema schema68 = schema67.getNot();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema68);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema13.setDiscriminator(discriminator14);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        java.lang.Integer int15 = annotatedElementSchema6.getMinItems();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.minimum(bigDecimal16);
        annotatedElementSchema6.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema6.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema6.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.required(strList24);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        schema5.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int65 = schema5.getMaxItems();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int65);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema13.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema20.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean31 = schema20.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema15.getTitle();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.multipleOf(bigDecimal19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema15.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.Contact contact25 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional26 = io.swagger.jaxrs2.OperationParser.getContact(contact25);
        annotatedElementSchema22.setExample((java.lang.Object) contactOptional26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.readOnly((java.lang.Boolean) false);
        java.lang.String str30 = annotatedElementSchema22.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.properties(strMap31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator41 = annotatedElementSchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema33.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        annotatedElementSchema22.setDefault((java.lang.Object) annotatedElementSchema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = annotatedElementSchema22.getExtensions();
        java.math.BigDecimal bigDecimal53 = annotatedElementSchema22.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema22.externalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema56 = schema15.example((java.lang.Object) externalDocumentation54);
        schema15.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(contactOptional26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.License license22 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional23 = io.swagger.jaxrs2.OperationParser.getLicense(license22);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema19.example((java.lang.Object) licenseOptional23);
        java.lang.String str25 = annotatedElementSchema19.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = annotatedElementSchema19.getExternalDocs();
        annotatedElementSchema19.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.properties(strMap41);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = schema44.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema47.pattern("hi!");
        schema56.setMinProperties((java.lang.Integer) 10);
        schema44.addExtension("*/*", (java.lang.Object) schema56);
        schema30.setDefault((java.lang.Object) schema56);
        schema17.setDefault((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema schema63 = schema17.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(licenseOptional23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList19 = annotatedElementSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.description("hi!");
        java.lang.Object obj22 = schema21.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.License license26 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional27 = io.swagger.jaxrs2.OperationParser.getLicense(license26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema23.example((java.lang.Object) licenseOptional27);
        java.lang.String str29 = annotatedElementSchema23.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = annotatedElementSchema23.getExternalDocs();
        annotatedElementSchema23.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema21.additionalProperties(schema34);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema21.required((java.util.List<java.lang.String>) strList49);
        schema13.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.properties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str64 = annotatedElementSchema63.getPattern();
        annotatedElementSchema63.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = annotatedElementSchema63.getWriteOnly();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema63.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str71 = annotatedElementSchema70.getPattern();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema63.not((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        io.swagger.oas.models.media.Schema schema73 = schema62.not(schema72);
        schema62.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema77 = schema62.$ref("default");
        io.swagger.oas.models.media.Schema schema79 = schema62.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema81 = schema62.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema13.example((java.lang.Object) schema81);
        java.lang.String str83 = schema81.getPattern();
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.maximum(bigDecimal84);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(annotatedElementList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(licenseOptional27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        java.lang.String str8 = schema4.getType();
        schema4.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema4.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int12 = schema11.getMaxProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.properties(strMap36);
        java.lang.Integer int38 = schema37.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info51 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional52 = io.swagger.jaxrs2.OperationParser.getInfo(info51);
        java.lang.Class<?> wildcardClass53 = infoOptional52.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray54 = new java.lang.reflect.AnnotatedElement[] { wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList55 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList55, annotatedElementArray54);
        schema50.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList55);
        schema37.addExtension("no description", (java.lang.Object) schema50);
        java.lang.String str59 = schema50.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        io.swagger.oas.annotations.info.Contact contact64 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional65 = io.swagger.jaxrs2.OperationParser.getContact(contact64);
        annotatedElementSchema61.setExample((java.lang.Object) contactOptional65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.pattern("#/components/schemas/");
        schema50.addExtension("no description", (java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema26.additionalProperties(schema50);
        java.lang.Boolean boolean73 = schema72.getDeprecated();
        java.lang.Boolean boolean74 = schema72.getReadOnly();
        io.swagger.oas.models.media.Schema schema75 = schema24.additionalProperties(schema72);
        java.lang.Integer int76 = schema24.getMinItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(infoOptional52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(annotatedElementArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str59, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        annotatedElementSchema21.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        annotatedElementSchema21.setDiscriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.multipleOf(bigDecimal31);
        schema32.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema35.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = annotatedElementSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema56.minProperties((java.lang.Integer) 10);
        java.lang.String str64 = annotatedElementSchema56.getName();
        annotatedElementSchema35.setDefault((java.lang.Object) annotatedElementSchema56);
        io.swagger.oas.models.media.Schema schema66 = null;
        annotatedElementSchema35.setNot(schema66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema35.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema35.getRequired();
        schema32.setRequired(strList70);
        schema32.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean74 = schema32.getExclusiveMinimum();
        java.util.List<java.lang.String> strList75 = schema32.getRequired();
        schema20.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema78 = schema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema78.getNot();
        java.lang.Integer int80 = schema79.getMinProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        schema29.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema29.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema29.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema16.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = null;
        schema24.setMultipleOf(bigDecimal25);
        java.lang.String[] strArray28 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional29);
        java.math.BigDecimal bigDecimal31 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema33.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema33.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        java.lang.Integer int40 = annotatedElementSchema33.getMinItems();
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) int40);
        java.lang.Object obj42 = schema41.getExample();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = annotatedElementSchema10.getProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean20 = schema19.getWriteOnly();
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema19.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = annotatedElementSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = schema38.getTitle();
        annotatedElementSchema25.setAdditionalProperties(schema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) 10);
        schema52.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator55 = schema52.getDiscriminator();
        schema52.setType("#/components/schemas/");
        java.lang.String str58 = schema52.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema60.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema60.setNullable((java.lang.Boolean) false);
        annotatedElementSchema60.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema60.minItems((java.lang.Integer) 0);
        java.lang.String str73 = schema72.getType();
        io.swagger.oas.models.media.XML xML74 = null;
        schema72.setXml(xML74);
        io.swagger.oas.models.media.Schema schema76 = schema52.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema78 = schema42.properties(strMap77);
        io.swagger.oas.models.media.Schema schema79 = schema19.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema9.properties(strMap77);
        io.swagger.oas.models.media.XML xML81 = schema9.getXml();
        java.math.BigDecimal bigDecimal82 = null;
        schema9.setMaximum(bigDecimal82);
        schema9.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal86 = null;
        schema9.setMinimum(bigDecimal86);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(xML81);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("");
        java.lang.String str33 = schema28.getTitle();
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema23.not(schema28);
        java.math.BigDecimal bigDecimal37 = null;
        schema36.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        java.lang.Integer int40 = schema36.getMaxProperties();
        java.math.BigDecimal bigDecimal41 = schema36.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.lang.String str25 = schema9.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema9.getDiscriminator();
        schema9.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema9.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema9.externalDocs(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str5 = annotatedElementSchema0.getDescription();
        java.lang.Integer int6 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema14.getExclusiveMinimum();
        java.lang.Boolean boolean16 = schema14.getExclusiveMinimum();
        schema14.setMinProperties((java.lang.Integer) 0);
        annotatedElementSchema0.setDefault((java.lang.Object) schema14);
        java.lang.String str20 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        annotatedElementSchema0.setDiscriminator(discriminator22);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        java.lang.String str15 = schema14.toString();
        schema14.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }
}

